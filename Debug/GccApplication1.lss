
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001f0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00001f0e  00001fa2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000011e  00800060  00800060  00001fa2  2**0
                  ALLOC
  3 .stab         00001638  00000000  00000000  00001fa4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000057e  00000000  00000000  000035dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00003b60  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d97  00000000  00000000  00003c00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000028a  00000000  00000000  00004997  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000080c  00000000  00000000  00004c21  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00005430  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000179  00000000  00000000  00005594  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002a3  00000000  00000000  0000570d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e0       	ldi	r30, 0x0E	; 14
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 36       	cpi	r26, 0x60	; 96
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e6       	ldi	r26, 0x60	; 96
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 37       	cpi	r26, 0x7E	; 126
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <main>
      8a:	0c 94 85 0f 	jmp	0x1f0a	; 0x1f0a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <wyluskajStare>:
#include <util/delay.h>
char lineup[41]; 
char a;
char linedown[40];
int i=0;
void wyluskajStare(uint8_t vale){
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	0f 92       	push	r0
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
      9c:	89 83       	std	Y+1, r24	; 0x01
	PORTA = (PORTA&0xF0)|((vale&0xF0)>>4);
      9e:	8b e3       	ldi	r24, 0x3B	; 59
      a0:	90 e0       	ldi	r25, 0x00	; 0
      a2:	2b e3       	ldi	r18, 0x3B	; 59
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	f9 01       	movw	r30, r18
      a8:	20 81       	ld	r18, Z
      aa:	32 2f       	mov	r19, r18
      ac:	30 7f       	andi	r19, 0xF0	; 240
      ae:	29 81       	ldd	r18, Y+1	; 0x01
      b0:	22 95       	swap	r18
      b2:	2f 70       	andi	r18, 0x0F	; 15
      b4:	23 2b       	or	r18, r19
      b6:	fc 01       	movw	r30, r24
      b8:	20 83       	st	Z, r18
}
      ba:	0f 90       	pop	r0
      bc:	df 91       	pop	r29
      be:	cf 91       	pop	r28
      c0:	08 95       	ret

000000c2 <wyluskajMlode>:

void wyluskajMlode(uint8_t vale){
      c2:	cf 93       	push	r28
      c4:	df 93       	push	r29
      c6:	0f 92       	push	r0
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	89 83       	std	Y+1, r24	; 0x01
	PORTA = (PORTA&0xF0)|(vale & 0x0F);
      ce:	8b e3       	ldi	r24, 0x3B	; 59
      d0:	90 e0       	ldi	r25, 0x00	; 0
      d2:	2b e3       	ldi	r18, 0x3B	; 59
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	f9 01       	movw	r30, r18
      d8:	20 81       	ld	r18, Z
      da:	32 2f       	mov	r19, r18
      dc:	30 7f       	andi	r19, 0xF0	; 240
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	2f 70       	andi	r18, 0x0F	; 15
      e2:	23 2b       	or	r18, r19
      e4:	fc 01       	movw	r30, r24
      e6:	20 83       	st	Z, r18
}
      e8:	0f 90       	pop	r0
      ea:	df 91       	pop	r29
      ec:	cf 91       	pop	r28
      ee:	08 95       	ret

000000f0 <wyslijDane>:

void wyslijDane(uint8_t v){
      f0:	cf 93       	push	r28
      f2:	df 93       	push	r29
      f4:	0f 92       	push	r0
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	89 83       	std	Y+1, r24	; 0x01
		
	PORTA =0;
      fc:	8b e3       	ldi	r24, 0x3B	; 59
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	fc 01       	movw	r30, r24
     102:	10 82       	st	Z, r1
    PORTA |= 0x80;
     104:	8b e3       	ldi	r24, 0x3B	; 59
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	2b e3       	ldi	r18, 0x3B	; 59
     10a:	30 e0       	ldi	r19, 0x00	; 0
     10c:	f9 01       	movw	r30, r18
     10e:	20 81       	ld	r18, Z
     110:	20 68       	ori	r18, 0x80	; 128
     112:	fc 01       	movw	r30, r24
     114:	20 83       	st	Z, r18
	
		
    PORTA |= 0x40;
     116:	8b e3       	ldi	r24, 0x3B	; 59
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	2b e3       	ldi	r18, 0x3B	; 59
     11c:	30 e0       	ldi	r19, 0x00	; 0
     11e:	f9 01       	movw	r30, r18
     120:	20 81       	ld	r18, Z
     122:	20 64       	ori	r18, 0x40	; 64
     124:	fc 01       	movw	r30, r24
     126:	20 83       	st	Z, r18
    PORTA =  ((PORTA & 0xF0)|( v>>4 & 0x0F));
     128:	8b e3       	ldi	r24, 0x3B	; 59
     12a:	90 e0       	ldi	r25, 0x00	; 0
     12c:	2b e3       	ldi	r18, 0x3B	; 59
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	f9 01       	movw	r30, r18
     132:	20 81       	ld	r18, Z
     134:	32 2f       	mov	r19, r18
     136:	30 7f       	andi	r19, 0xF0	; 240
     138:	29 81       	ldd	r18, Y+1	; 0x01
     13a:	22 95       	swap	r18
     13c:	2f 70       	andi	r18, 0x0F	; 15
     13e:	23 2b       	or	r18, r19
     140:	fc 01       	movw	r30, r24
     142:	20 83       	st	Z, r18
	PORTA &= ~0x40;
     144:	8b e3       	ldi	r24, 0x3B	; 59
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	2b e3       	ldi	r18, 0x3B	; 59
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	f9 01       	movw	r30, r18
     14e:	20 81       	ld	r18, Z
     150:	2f 7b       	andi	r18, 0xBF	; 191
     152:	fc 01       	movw	r30, r24
     154:	20 83       	st	Z, r18
	
	PORTA |= 0x40;
     156:	8b e3       	ldi	r24, 0x3B	; 59
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	2b e3       	ldi	r18, 0x3B	; 59
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	f9 01       	movw	r30, r18
     160:	20 81       	ld	r18, Z
     162:	20 64       	ori	r18, 0x40	; 64
     164:	fc 01       	movw	r30, r24
     166:	20 83       	st	Z, r18
	PORTA =  ((PORTA & 0xF0)|( v & 0x0F));
     168:	8b e3       	ldi	r24, 0x3B	; 59
     16a:	90 e0       	ldi	r25, 0x00	; 0
     16c:	2b e3       	ldi	r18, 0x3B	; 59
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	f9 01       	movw	r30, r18
     172:	20 81       	ld	r18, Z
     174:	32 2f       	mov	r19, r18
     176:	30 7f       	andi	r19, 0xF0	; 240
     178:	29 81       	ldd	r18, Y+1	; 0x01
     17a:	2f 70       	andi	r18, 0x0F	; 15
     17c:	23 2b       	or	r18, r19
     17e:	fc 01       	movw	r30, r24
     180:	20 83       	st	Z, r18
	PORTA &= ~0x40;
     182:	8b e3       	ldi	r24, 0x3B	; 59
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	2b e3       	ldi	r18, 0x3B	; 59
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	f9 01       	movw	r30, r18
     18c:	20 81       	ld	r18, Z
     18e:	2f 7b       	andi	r18, 0xBF	; 191
     190:	fc 01       	movw	r30, r24
     192:	20 83       	st	Z, r18

	
	PORTA &= ~0x80;
     194:	8b e3       	ldi	r24, 0x3B	; 59
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	2b e3       	ldi	r18, 0x3B	; 59
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	f9 01       	movw	r30, r18
     19e:	20 81       	ld	r18, Z
     1a0:	2f 77       	andi	r18, 0x7F	; 127
     1a2:	fc 01       	movw	r30, r24
     1a4:	20 83       	st	Z, r18
	PORTA = 0;
     1a6:	8b e3       	ldi	r24, 0x3B	; 59
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	fc 01       	movw	r30, r24
     1ac:	10 82       	st	Z, r1
	
}
     1ae:	0f 90       	pop	r0
     1b0:	df 91       	pop	r29
     1b2:	cf 91       	pop	r28
     1b4:	08 95       	ret

000001b6 <wyslijComend>:
void wyslijComend(uint8_t v){
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	0f 92       	push	r0
     1bc:	cd b7       	in	r28, 0x3d	; 61
     1be:	de b7       	in	r29, 0x3e	; 62
     1c0:	89 83       	std	Y+1, r24	; 0x01
	PORTA |= 0x40;
     1c2:	8b e3       	ldi	r24, 0x3B	; 59
     1c4:	90 e0       	ldi	r25, 0x00	; 0
     1c6:	2b e3       	ldi	r18, 0x3B	; 59
     1c8:	30 e0       	ldi	r19, 0x00	; 0
     1ca:	f9 01       	movw	r30, r18
     1cc:	20 81       	ld	r18, Z
     1ce:	20 64       	ori	r18, 0x40	; 64
     1d0:	fc 01       	movw	r30, r24
     1d2:	20 83       	st	Z, r18
	PORTA =  ((PORTA & 0xF0)|( v & 0x0F));
     1d4:	8b e3       	ldi	r24, 0x3B	; 59
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	2b e3       	ldi	r18, 0x3B	; 59
     1da:	30 e0       	ldi	r19, 0x00	; 0
     1dc:	f9 01       	movw	r30, r18
     1de:	20 81       	ld	r18, Z
     1e0:	32 2f       	mov	r19, r18
     1e2:	30 7f       	andi	r19, 0xF0	; 240
     1e4:	29 81       	ldd	r18, Y+1	; 0x01
     1e6:	2f 70       	andi	r18, 0x0F	; 15
     1e8:	23 2b       	or	r18, r19
     1ea:	fc 01       	movw	r30, r24
     1ec:	20 83       	st	Z, r18
	PORTA &= ~0x40;
     1ee:	8b e3       	ldi	r24, 0x3B	; 59
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	2b e3       	ldi	r18, 0x3B	; 59
     1f4:	30 e0       	ldi	r19, 0x00	; 0
     1f6:	f9 01       	movw	r30, r18
     1f8:	20 81       	ld	r18, Z
     1fa:	2f 7b       	andi	r18, 0xBF	; 191
     1fc:	fc 01       	movw	r30, r24
     1fe:	20 83       	st	Z, r18

}
     200:	0f 90       	pop	r0
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	08 95       	ret

00000208 <wyslijNapis>:

void wyslijNapis(char* text){
     208:	0f 93       	push	r16
     20a:	1f 93       	push	r17
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	cd b7       	in	r28, 0x3d	; 61
     212:	de b7       	in	r29, 0x3e	; 62
     214:	60 97       	sbiw	r28, 0x10	; 16
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	98 8b       	std	Y+16, r25	; 0x10
     222:	8f 87       	std	Y+15, r24	; 0x0f
	while (*text != 0)
     224:	8b c0       	rjmp	.+278    	; 0x33c <wyslijNapis+0x134>
	{
		
		wyslijDane(*text);
     226:	8f 85       	ldd	r24, Y+15	; 0x0f
     228:	98 89       	ldd	r25, Y+16	; 0x10
     22a:	fc 01       	movw	r30, r24
     22c:	80 81       	ld	r24, Z
     22e:	0e 94 78 00 	call	0xf0	; 0xf0 <wyslijDane>
		text++;
     232:	8f 85       	ldd	r24, Y+15	; 0x0f
     234:	98 89       	ldd	r25, Y+16	; 0x10
     236:	01 96       	adiw	r24, 0x01	; 1
     238:	98 8b       	std	Y+16, r25	; 0x10
     23a:	8f 87       	std	Y+15, r24	; 0x0f
     23c:	80 e0       	ldi	r24, 0x00	; 0
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	a0 e2       	ldi	r26, 0x20	; 32
     242:	b1 e4       	ldi	r27, 0x41	; 65
     244:	89 83       	std	Y+1, r24	; 0x01
     246:	9a 83       	std	Y+2, r25	; 0x02
     248:	ab 83       	std	Y+3, r26	; 0x03
     24a:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     24c:	69 81       	ldd	r22, Y+1	; 0x01
     24e:	7a 81       	ldd	r23, Y+2	; 0x02
     250:	8b 81       	ldd	r24, Y+3	; 0x03
     252:	9c 81       	ldd	r25, Y+4	; 0x04
     254:	20 e0       	ldi	r18, 0x00	; 0
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	4a e7       	ldi	r20, 0x7A	; 122
     25a:	55 e4       	ldi	r21, 0x45	; 69
     25c:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     260:	dc 01       	movw	r26, r24
     262:	cb 01       	movw	r24, r22
     264:	8d 83       	std	Y+5, r24	; 0x05
     266:	9e 83       	std	Y+6, r25	; 0x06
     268:	af 83       	std	Y+7, r26	; 0x07
     26a:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     26c:	11 e0       	ldi	r17, 0x01	; 1
     26e:	6d 81       	ldd	r22, Y+5	; 0x05
     270:	7e 81       	ldd	r23, Y+6	; 0x06
     272:	8f 81       	ldd	r24, Y+7	; 0x07
     274:	98 85       	ldd	r25, Y+8	; 0x08
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	40 e8       	ldi	r20, 0x80	; 128
     27c:	5f e3       	ldi	r21, 0x3F	; 63
     27e:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     282:	88 23       	and	r24, r24
     284:	0c f0       	brlt	.+2      	; 0x288 <wyslijNapis+0x80>
     286:	10 e0       	ldi	r17, 0x00	; 0
     288:	11 23       	and	r17, r17
     28a:	29 f0       	breq	.+10     	; 0x296 <wyslijNapis+0x8e>
		__ticks = 1;
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	9a 87       	std	Y+10, r25	; 0x0a
     292:	89 87       	std	Y+9, r24	; 0x09
     294:	46 c0       	rjmp	.+140    	; 0x322 <wyslijNapis+0x11a>
	else if (__tmp > 65535)
     296:	11 e0       	ldi	r17, 0x01	; 1
     298:	6d 81       	ldd	r22, Y+5	; 0x05
     29a:	7e 81       	ldd	r23, Y+6	; 0x06
     29c:	8f 81       	ldd	r24, Y+7	; 0x07
     29e:	98 85       	ldd	r25, Y+8	; 0x08
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	3f ef       	ldi	r19, 0xFF	; 255
     2a4:	4f e7       	ldi	r20, 0x7F	; 127
     2a6:	57 e4       	ldi	r21, 0x47	; 71
     2a8:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     2ac:	18 16       	cp	r1, r24
     2ae:	0c f0       	brlt	.+2      	; 0x2b2 <wyslijNapis+0xaa>
     2b0:	10 e0       	ldi	r17, 0x00	; 0
     2b2:	11 23       	and	r17, r17
     2b4:	61 f1       	breq	.+88     	; 0x30e <wyslijNapis+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2b6:	69 81       	ldd	r22, Y+1	; 0x01
     2b8:	7a 81       	ldd	r23, Y+2	; 0x02
     2ba:	8b 81       	ldd	r24, Y+3	; 0x03
     2bc:	9c 81       	ldd	r25, Y+4	; 0x04
     2be:	20 e0       	ldi	r18, 0x00	; 0
     2c0:	30 e0       	ldi	r19, 0x00	; 0
     2c2:	40 e2       	ldi	r20, 0x20	; 32
     2c4:	51 e4       	ldi	r21, 0x41	; 65
     2c6:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     2ca:	dc 01       	movw	r26, r24
     2cc:	cb 01       	movw	r24, r22
     2ce:	bc 01       	movw	r22, r24
     2d0:	cd 01       	movw	r24, r26
     2d2:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     2d6:	dc 01       	movw	r26, r24
     2d8:	cb 01       	movw	r24, r22
     2da:	9a 87       	std	Y+10, r25	; 0x0a
     2dc:	89 87       	std	Y+9, r24	; 0x09
     2de:	12 c0       	rjmp	.+36     	; 0x304 <wyslijNapis+0xfc>
     2e0:	80 e9       	ldi	r24, 0x90	; 144
     2e2:	91 e0       	ldi	r25, 0x01	; 1
     2e4:	9c 87       	std	Y+12, r25	; 0x0c
     2e6:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2e8:	8b 85       	ldd	r24, Y+11	; 0x0b
     2ea:	9c 85       	ldd	r25, Y+12	; 0x0c
     2ec:	8c 01       	movw	r16, r24
     2ee:	c8 01       	movw	r24, r16
     2f0:	01 97       	sbiw	r24, 0x01	; 1
     2f2:	f1 f7       	brne	.-4      	; 0x2f0 <wyslijNapis+0xe8>
     2f4:	8c 01       	movw	r16, r24
     2f6:	1c 87       	std	Y+12, r17	; 0x0c
     2f8:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2fa:	89 85       	ldd	r24, Y+9	; 0x09
     2fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     2fe:	01 97       	sbiw	r24, 0x01	; 1
     300:	9a 87       	std	Y+10, r25	; 0x0a
     302:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     304:	89 85       	ldd	r24, Y+9	; 0x09
     306:	9a 85       	ldd	r25, Y+10	; 0x0a
     308:	00 97       	sbiw	r24, 0x00	; 0
     30a:	51 f7       	brne	.-44     	; 0x2e0 <wyslijNapis+0xd8>
     30c:	17 c0       	rjmp	.+46     	; 0x33c <wyslijNapis+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     30e:	6d 81       	ldd	r22, Y+5	; 0x05
     310:	7e 81       	ldd	r23, Y+6	; 0x06
     312:	8f 81       	ldd	r24, Y+7	; 0x07
     314:	98 85       	ldd	r25, Y+8	; 0x08
     316:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     31a:	dc 01       	movw	r26, r24
     31c:	cb 01       	movw	r24, r22
     31e:	9a 87       	std	Y+10, r25	; 0x0a
     320:	89 87       	std	Y+9, r24	; 0x09
     322:	89 85       	ldd	r24, Y+9	; 0x09
     324:	9a 85       	ldd	r25, Y+10	; 0x0a
     326:	9e 87       	std	Y+14, r25	; 0x0e
     328:	8d 87       	std	Y+13, r24	; 0x0d
     32a:	8d 85       	ldd	r24, Y+13	; 0x0d
     32c:	9e 85       	ldd	r25, Y+14	; 0x0e
     32e:	8c 01       	movw	r16, r24
     330:	f8 01       	movw	r30, r16
     332:	31 97       	sbiw	r30, 0x01	; 1
     334:	f1 f7       	brne	.-4      	; 0x332 <wyslijNapis+0x12a>
     336:	8f 01       	movw	r16, r30
     338:	1e 87       	std	Y+14, r17	; 0x0e
     33a:	0d 87       	std	Y+13, r16	; 0x0d
	PORTA &= ~0x40;

}

void wyslijNapis(char* text){
	while (*text != 0)
     33c:	8f 85       	ldd	r24, Y+15	; 0x0f
     33e:	98 89       	ldd	r25, Y+16	; 0x10
     340:	fc 01       	movw	r30, r24
     342:	80 81       	ld	r24, Z
     344:	88 23       	and	r24, r24
     346:	09 f0       	breq	.+2      	; 0x34a <wyslijNapis+0x142>
     348:	6e cf       	rjmp	.-292    	; 0x226 <wyslijNapis+0x1e>
		
		wyslijDane(*text);
		text++;
		_delay_ms(10);
	}
}
     34a:	60 96       	adiw	r28, 0x10	; 16
     34c:	0f b6       	in	r0, 0x3f	; 63
     34e:	f8 94       	cli
     350:	de bf       	out	0x3e, r29	; 62
     352:	0f be       	out	0x3f, r0	; 63
     354:	cd bf       	out	0x3d, r28	; 61
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	1f 91       	pop	r17
     35c:	0f 91       	pop	r16
     35e:	08 95       	ret

00000360 <SetDisplay>:

void SetDisplay(int myPos, int obstaclex,int obstacley)
{
     360:	0f 93       	push	r16
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	64 97       	sbiw	r28, 0x14	; 20
     36e:	0f b6       	in	r0, 0x3f	; 63
     370:	f8 94       	cli
     372:	de bf       	out	0x3e, r29	; 62
     374:	0f be       	out	0x3f, r0	; 63
     376:	cd bf       	out	0x3d, r28	; 61
     378:	98 8b       	std	Y+16, r25	; 0x10
     37a:	8f 87       	std	Y+15, r24	; 0x0f
     37c:	7a 8b       	std	Y+18, r23	; 0x12
     37e:	69 8b       	std	Y+17, r22	; 0x11
     380:	5c 8b       	std	Y+20, r21	; 0x14
     382:	4b 8b       	std	Y+19, r20	; 0x13

	////////////////////////////
	for (i=0;i<41;i++)
     384:	10 92 61 00 	sts	0x0061, r1
     388:	10 92 60 00 	sts	0x0060, r1
     38c:	12 c0       	rjmp	.+36     	; 0x3b2 <SetDisplay+0x52>
	{
		lineup[i]=' ';		
     38e:	80 91 60 00 	lds	r24, 0x0060
     392:	90 91 61 00 	lds	r25, 0x0061
     396:	8c 59       	subi	r24, 0x9C	; 156
     398:	9f 4f       	sbci	r25, 0xFF	; 255
     39a:	20 e2       	ldi	r18, 0x20	; 32
     39c:	fc 01       	movw	r30, r24
     39e:	20 83       	st	Z, r18

void SetDisplay(int myPos, int obstaclex,int obstacley)
{

	////////////////////////////
	for (i=0;i<41;i++)
     3a0:	80 91 60 00 	lds	r24, 0x0060
     3a4:	90 91 61 00 	lds	r25, 0x0061
     3a8:	01 96       	adiw	r24, 0x01	; 1
     3aa:	90 93 61 00 	sts	0x0061, r25
     3ae:	80 93 60 00 	sts	0x0060, r24
     3b2:	80 91 60 00 	lds	r24, 0x0060
     3b6:	90 91 61 00 	lds	r25, 0x0061
     3ba:	89 32       	cpi	r24, 0x29	; 41
     3bc:	91 05       	cpc	r25, r1
     3be:	3c f3       	brlt	.-50     	; 0x38e <SetDisplay+0x2e>
	{
		lineup[i]=' ';		
	}
	for (i=0;i<40;i++)
     3c0:	10 92 61 00 	sts	0x0061, r1
     3c4:	10 92 60 00 	sts	0x0060, r1
     3c8:	12 c0       	rjmp	.+36     	; 0x3ee <SetDisplay+0x8e>
	{
		linedown[i]=' ';
     3ca:	80 91 60 00 	lds	r24, 0x0060
     3ce:	90 91 61 00 	lds	r25, 0x0061
     3d2:	82 57       	subi	r24, 0x72	; 114
     3d4:	9f 4f       	sbci	r25, 0xFF	; 255
     3d6:	20 e2       	ldi	r18, 0x20	; 32
     3d8:	fc 01       	movw	r30, r24
     3da:	20 83       	st	Z, r18
	////////////////////////////
	for (i=0;i<41;i++)
	{
		lineup[i]=' ';		
	}
	for (i=0;i<40;i++)
     3dc:	80 91 60 00 	lds	r24, 0x0060
     3e0:	90 91 61 00 	lds	r25, 0x0061
     3e4:	01 96       	adiw	r24, 0x01	; 1
     3e6:	90 93 61 00 	sts	0x0061, r25
     3ea:	80 93 60 00 	sts	0x0060, r24
     3ee:	80 91 60 00 	lds	r24, 0x0060
     3f2:	90 91 61 00 	lds	r25, 0x0061
     3f6:	88 32       	cpi	r24, 0x28	; 40
     3f8:	91 05       	cpc	r25, r1
     3fa:	3c f3       	brlt	.-50     	; 0x3ca <SetDisplay+0x6a>
	{
		linedown[i]=' ';
	}
	
	
	linedown[40]=0;
     3fc:	10 92 b6 00 	sts	0x00B6, r1
	lineup[40]=0;
     400:	10 92 8c 00 	sts	0x008C, r1
	
	/////////////////////////

	
	if(myPos == 3 || myPos == 4)
     404:	8f 85       	ldd	r24, Y+15	; 0x0f
     406:	98 89       	ldd	r25, Y+16	; 0x10
     408:	83 30       	cpi	r24, 0x03	; 3
     40a:	91 05       	cpc	r25, r1
     40c:	29 f0       	breq	.+10     	; 0x418 <SetDisplay+0xb8>
     40e:	8f 85       	ldd	r24, Y+15	; 0x0f
     410:	98 89       	ldd	r25, Y+16	; 0x10
     412:	84 30       	cpi	r24, 0x04	; 4
     414:	91 05       	cpc	r25, r1
     416:	69 f4       	brne	.+26     	; 0x432 <SetDisplay+0xd2>
	{
		if (myPos == 3)
     418:	8f 85       	ldd	r24, Y+15	; 0x0f
     41a:	98 89       	ldd	r25, Y+16	; 0x10
     41c:	83 30       	cpi	r24, 0x03	; 3
     41e:	91 05       	cpc	r25, r1
     420:	21 f4       	brne	.+8      	; 0x42a <SetDisplay+0xca>
		{
			linedown[0]='u';
     422:	85 e7       	ldi	r24, 0x75	; 117
     424:	80 93 8e 00 	sts	0x008E, r24
	/////////////////////////

	
	if(myPos == 3 || myPos == 4)
	{
		if (myPos == 3)
     428:	10 c0       	rjmp	.+32     	; 0x44a <SetDisplay+0xea>
		{
			linedown[0]='u';
		}else
		{
			linedown[0]='d';
     42a:	84 e6       	ldi	r24, 0x64	; 100
     42c:	80 93 8e 00 	sts	0x008E, r24
	/////////////////////////

	
	if(myPos == 3 || myPos == 4)
	{
		if (myPos == 3)
     430:	0c c0       	rjmp	.+24     	; 0x44a <SetDisplay+0xea>
			linedown[0]='d';
		}				
				
	}else
		{
			if (myPos == 1)
     432:	8f 85       	ldd	r24, Y+15	; 0x0f
     434:	98 89       	ldd	r25, Y+16	; 0x10
     436:	81 30       	cpi	r24, 0x01	; 1
     438:	91 05       	cpc	r25, r1
     43a:	21 f4       	brne	.+8      	; 0x444 <SetDisplay+0xe4>
			{
				lineup[0]='u';
     43c:	85 e7       	ldi	r24, 0x75	; 117
     43e:	80 93 64 00 	sts	0x0064, r24
     442:	03 c0       	rjmp	.+6      	; 0x44a <SetDisplay+0xea>
			}else
			{
				lineup[0]='d';
     444:	84 e6       	ldi	r24, 0x64	; 100
     446:	80 93 64 00 	sts	0x0064, r24
		}	
	
	
	///////////////////////////////
	
	if(obstacley == 3 || obstacley == 4)
     44a:	8b 89       	ldd	r24, Y+19	; 0x13
     44c:	9c 89       	ldd	r25, Y+20	; 0x14
     44e:	83 30       	cpi	r24, 0x03	; 3
     450:	91 05       	cpc	r25, r1
     452:	29 f0       	breq	.+10     	; 0x45e <SetDisplay+0xfe>
     454:	8b 89       	ldd	r24, Y+19	; 0x13
     456:	9c 89       	ldd	r25, Y+20	; 0x14
     458:	84 30       	cpi	r24, 0x04	; 4
     45a:	91 05       	cpc	r25, r1
     45c:	a9 f4       	brne	.+42     	; 0x488 <SetDisplay+0x128>
	{
		if (obstacley == 3)
     45e:	8b 89       	ldd	r24, Y+19	; 0x13
     460:	9c 89       	ldd	r25, Y+20	; 0x14
     462:	83 30       	cpi	r24, 0x03	; 3
     464:	91 05       	cpc	r25, r1
     466:	41 f4       	brne	.+16     	; 0x478 <SetDisplay+0x118>
		{
			linedown[obstaclex]='<';
     468:	89 89       	ldd	r24, Y+17	; 0x11
     46a:	9a 89       	ldd	r25, Y+18	; 0x12
     46c:	82 57       	subi	r24, 0x72	; 114
     46e:	9f 4f       	sbci	r25, 0xFF	; 255
     470:	2c e3       	ldi	r18, 0x3C	; 60
     472:	fc 01       	movw	r30, r24
     474:	20 83       	st	Z, r18
	
	///////////////////////////////
	
	if(obstacley == 3 || obstacley == 4)
	{
		if (obstacley == 3)
     476:	1c c0       	rjmp	.+56     	; 0x4b0 <SetDisplay+0x150>
		{
			linedown[obstaclex]='<';
		}else
		{
			linedown[obstaclex]='_';
     478:	89 89       	ldd	r24, Y+17	; 0x11
     47a:	9a 89       	ldd	r25, Y+18	; 0x12
     47c:	82 57       	subi	r24, 0x72	; 114
     47e:	9f 4f       	sbci	r25, 0xFF	; 255
     480:	2f e5       	ldi	r18, 0x5F	; 95
     482:	fc 01       	movw	r30, r24
     484:	20 83       	st	Z, r18
	
	///////////////////////////////
	
	if(obstacley == 3 || obstacley == 4)
	{
		if (obstacley == 3)
     486:	14 c0       	rjmp	.+40     	; 0x4b0 <SetDisplay+0x150>
			linedown[obstaclex]='_';
		}
		
	}else
	{
		if (obstacley == 1)
     488:	8b 89       	ldd	r24, Y+19	; 0x13
     48a:	9c 89       	ldd	r25, Y+20	; 0x14
     48c:	81 30       	cpi	r24, 0x01	; 1
     48e:	91 05       	cpc	r25, r1
     490:	41 f4       	brne	.+16     	; 0x4a2 <SetDisplay+0x142>
		{
			lineup[obstaclex]='<';
     492:	89 89       	ldd	r24, Y+17	; 0x11
     494:	9a 89       	ldd	r25, Y+18	; 0x12
     496:	8c 59       	subi	r24, 0x9C	; 156
     498:	9f 4f       	sbci	r25, 0xFF	; 255
     49a:	2c e3       	ldi	r18, 0x3C	; 60
     49c:	fc 01       	movw	r30, r24
     49e:	20 83       	st	Z, r18
     4a0:	07 c0       	rjmp	.+14     	; 0x4b0 <SetDisplay+0x150>
		}else
		{
			lineup[obstaclex]='_';
     4a2:	89 89       	ldd	r24, Y+17	; 0x11
     4a4:	9a 89       	ldd	r25, Y+18	; 0x12
     4a6:	8c 59       	subi	r24, 0x9C	; 156
     4a8:	9f 4f       	sbci	r25, 0xFF	; 255
     4aa:	2f e5       	ldi	r18, 0x5F	; 95
     4ac:	fc 01       	movw	r30, r24
     4ae:	20 83       	st	Z, r18
		}
	}
	wyslijNapis(lineup);
     4b0:	84 e6       	ldi	r24, 0x64	; 100
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	0e 94 04 01 	call	0x208	; 0x208 <wyslijNapis>
	
	wyslijNapis(linedown);
     4b8:	8e e8       	ldi	r24, 0x8E	; 142
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 04 01 	call	0x208	; 0x208 <wyslijNapis>
     4c0:	80 e0       	ldi	r24, 0x00	; 0
     4c2:	90 e0       	ldi	r25, 0x00	; 0
     4c4:	a6 e9       	ldi	r26, 0x96	; 150
     4c6:	b3 e4       	ldi	r27, 0x43	; 67
     4c8:	89 83       	std	Y+1, r24	; 0x01
     4ca:	9a 83       	std	Y+2, r25	; 0x02
     4cc:	ab 83       	std	Y+3, r26	; 0x03
     4ce:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     4d0:	69 81       	ldd	r22, Y+1	; 0x01
     4d2:	7a 81       	ldd	r23, Y+2	; 0x02
     4d4:	8b 81       	ldd	r24, Y+3	; 0x03
     4d6:	9c 81       	ldd	r25, Y+4	; 0x04
     4d8:	20 e0       	ldi	r18, 0x00	; 0
     4da:	30 e0       	ldi	r19, 0x00	; 0
     4dc:	4a e7       	ldi	r20, 0x7A	; 122
     4de:	55 e4       	ldi	r21, 0x45	; 69
     4e0:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     4e4:	dc 01       	movw	r26, r24
     4e6:	cb 01       	movw	r24, r22
     4e8:	8d 83       	std	Y+5, r24	; 0x05
     4ea:	9e 83       	std	Y+6, r25	; 0x06
     4ec:	af 83       	std	Y+7, r26	; 0x07
     4ee:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     4f0:	11 e0       	ldi	r17, 0x01	; 1
     4f2:	6d 81       	ldd	r22, Y+5	; 0x05
     4f4:	7e 81       	ldd	r23, Y+6	; 0x06
     4f6:	8f 81       	ldd	r24, Y+7	; 0x07
     4f8:	98 85       	ldd	r25, Y+8	; 0x08
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e0       	ldi	r19, 0x00	; 0
     4fe:	40 e8       	ldi	r20, 0x80	; 128
     500:	5f e3       	ldi	r21, 0x3F	; 63
     502:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     506:	88 23       	and	r24, r24
     508:	0c f0       	brlt	.+2      	; 0x50c <SetDisplay+0x1ac>
     50a:	10 e0       	ldi	r17, 0x00	; 0
     50c:	11 23       	and	r17, r17
     50e:	29 f0       	breq	.+10     	; 0x51a <SetDisplay+0x1ba>
		__ticks = 1;
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	9a 87       	std	Y+10, r25	; 0x0a
     516:	89 87       	std	Y+9, r24	; 0x09
     518:	46 c0       	rjmp	.+140    	; 0x5a6 <SetDisplay+0x246>
	else if (__tmp > 65535)
     51a:	11 e0       	ldi	r17, 0x01	; 1
     51c:	6d 81       	ldd	r22, Y+5	; 0x05
     51e:	7e 81       	ldd	r23, Y+6	; 0x06
     520:	8f 81       	ldd	r24, Y+7	; 0x07
     522:	98 85       	ldd	r25, Y+8	; 0x08
     524:	20 e0       	ldi	r18, 0x00	; 0
     526:	3f ef       	ldi	r19, 0xFF	; 255
     528:	4f e7       	ldi	r20, 0x7F	; 127
     52a:	57 e4       	ldi	r21, 0x47	; 71
     52c:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     530:	18 16       	cp	r1, r24
     532:	0c f0       	brlt	.+2      	; 0x536 <SetDisplay+0x1d6>
     534:	10 e0       	ldi	r17, 0x00	; 0
     536:	11 23       	and	r17, r17
     538:	61 f1       	breq	.+88     	; 0x592 <SetDisplay+0x232>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     53a:	69 81       	ldd	r22, Y+1	; 0x01
     53c:	7a 81       	ldd	r23, Y+2	; 0x02
     53e:	8b 81       	ldd	r24, Y+3	; 0x03
     540:	9c 81       	ldd	r25, Y+4	; 0x04
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	40 e2       	ldi	r20, 0x20	; 32
     548:	51 e4       	ldi	r21, 0x41	; 65
     54a:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     54e:	dc 01       	movw	r26, r24
     550:	cb 01       	movw	r24, r22
     552:	bc 01       	movw	r22, r24
     554:	cd 01       	movw	r24, r26
     556:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     55a:	dc 01       	movw	r26, r24
     55c:	cb 01       	movw	r24, r22
     55e:	9a 87       	std	Y+10, r25	; 0x0a
     560:	89 87       	std	Y+9, r24	; 0x09
     562:	12 c0       	rjmp	.+36     	; 0x588 <SetDisplay+0x228>
     564:	80 e9       	ldi	r24, 0x90	; 144
     566:	91 e0       	ldi	r25, 0x01	; 1
     568:	9c 87       	std	Y+12, r25	; 0x0c
     56a:	8b 87       	std	Y+11, r24	; 0x0b
     56c:	8b 85       	ldd	r24, Y+11	; 0x0b
     56e:	9c 85       	ldd	r25, Y+12	; 0x0c
     570:	8c 01       	movw	r16, r24
     572:	c8 01       	movw	r24, r16
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	f1 f7       	brne	.-4      	; 0x574 <SetDisplay+0x214>
     578:	8c 01       	movw	r16, r24
     57a:	1c 87       	std	Y+12, r17	; 0x0c
     57c:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     57e:	89 85       	ldd	r24, Y+9	; 0x09
     580:	9a 85       	ldd	r25, Y+10	; 0x0a
     582:	01 97       	sbiw	r24, 0x01	; 1
     584:	9a 87       	std	Y+10, r25	; 0x0a
     586:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     588:	89 85       	ldd	r24, Y+9	; 0x09
     58a:	9a 85       	ldd	r25, Y+10	; 0x0a
     58c:	00 97       	sbiw	r24, 0x00	; 0
     58e:	51 f7       	brne	.-44     	; 0x564 <SetDisplay+0x204>
     590:	17 c0       	rjmp	.+46     	; 0x5c0 <SetDisplay+0x260>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     592:	6d 81       	ldd	r22, Y+5	; 0x05
     594:	7e 81       	ldd	r23, Y+6	; 0x06
     596:	8f 81       	ldd	r24, Y+7	; 0x07
     598:	98 85       	ldd	r25, Y+8	; 0x08
     59a:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     59e:	dc 01       	movw	r26, r24
     5a0:	cb 01       	movw	r24, r22
     5a2:	9a 87       	std	Y+10, r25	; 0x0a
     5a4:	89 87       	std	Y+9, r24	; 0x09
     5a6:	89 85       	ldd	r24, Y+9	; 0x09
     5a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     5aa:	9e 87       	std	Y+14, r25	; 0x0e
     5ac:	8d 87       	std	Y+13, r24	; 0x0d
     5ae:	8d 85       	ldd	r24, Y+13	; 0x0d
     5b0:	9e 85       	ldd	r25, Y+14	; 0x0e
     5b2:	8c 01       	movw	r16, r24
     5b4:	f8 01       	movw	r30, r16
     5b6:	31 97       	sbiw	r30, 0x01	; 1
     5b8:	f1 f7       	brne	.-4      	; 0x5b6 <SetDisplay+0x256>
     5ba:	8f 01       	movw	r16, r30
     5bc:	1e 87       	std	Y+14, r17	; 0x0e
     5be:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(300);
	
     5c0:	64 96       	adiw	r28, 0x14	; 20
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	f8 94       	cli
     5c6:	de bf       	out	0x3e, r29	; 62
     5c8:	0f be       	out	0x3f, r0	; 63
     5ca:	cd bf       	out	0x3d, r28	; 61
     5cc:	df 91       	pop	r29
     5ce:	cf 91       	pop	r28
     5d0:	1f 91       	pop	r17
     5d2:	0f 91       	pop	r16
     5d4:	08 95       	ret

000005d6 <configurePorts>:
#include "dodatki.h"

int charFromKeyBoard[100];
int cursosPosition=0;

void configurePorts(void) {
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
     5da:	cd b7       	in	r28, 0x3d	; 61
     5dc:	de b7       	in	r29, 0x3e	; 62
	UCSRB |= 1<<RXEN;
	UCSRB |= 1<<RXCIE;*/
	
	//wlaczenie Przerwania com
	
	UCSRB |= (1<<RXEN)| (1<<TXEN);
     5de:	8a e2       	ldi	r24, 0x2A	; 42
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	2a e2       	ldi	r18, 0x2A	; 42
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	f9 01       	movw	r30, r18
     5e8:	20 81       	ld	r18, Z
     5ea:	28 61       	ori	r18, 0x18	; 24
     5ec:	fc 01       	movw	r30, r24
     5ee:	20 83       	st	Z, r18
	UCSRB |= 1<< RXCIE;
     5f0:	8a e2       	ldi	r24, 0x2A	; 42
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	2a e2       	ldi	r18, 0x2A	; 42
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	f9 01       	movw	r30, r18
     5fa:	20 81       	ld	r18, Z
     5fc:	20 68       	ori	r18, 0x80	; 128
     5fe:	fc 01       	movw	r30, r24
     600:	20 83       	st	Z, r18
	UCSRC |= (1<<URSEL) | 1<<UCSZ0| 1<<UCSZ1; //8bit mode
     602:	80 e4       	ldi	r24, 0x40	; 64
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	20 e4       	ldi	r18, 0x40	; 64
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	f9 01       	movw	r30, r18
     60c:	20 81       	ld	r18, Z
     60e:	26 68       	ori	r18, 0x86	; 134
     610:	fc 01       	movw	r30, r24
     612:	20 83       	st	Z, r18

	UBRRL=103;//dzielnik 19200
     614:	89 e2       	ldi	r24, 0x29	; 41
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	27 e6       	ldi	r18, 0x67	; 103
     61a:	fc 01       	movw	r30, r24
     61c:	20 83       	st	Z, r18
	
	
}
     61e:	df 91       	pop	r29
     620:	cf 91       	pop	r28
     622:	08 95       	ret

00000624 <initLCD>:
		cursosPosition++;
	}
	
}*/
void initLCD()
{
     624:	0f 93       	push	r16
     626:	1f 93       	push	r17
     628:	cf 93       	push	r28
     62a:	df 93       	push	r29
     62c:	cd b7       	in	r28, 0x3d	; 61
     62e:	de b7       	in	r29, 0x3e	; 62
     630:	c4 5d       	subi	r28, 0xD4	; 212
     632:	d0 40       	sbci	r29, 0x00	; 0
     634:	0f b6       	in	r0, 0x3f	; 63
     636:	f8 94       	cli
     638:	de bf       	out	0x3e, r29	; 62
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	cd bf       	out	0x3d, r28	; 61
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	a0 e7       	ldi	r26, 0x70	; 112
     644:	b1 e4       	ldi	r27, 0x41	; 65
     646:	8b 83       	std	Y+3, r24	; 0x03
     648:	9c 83       	std	Y+4, r25	; 0x04
     64a:	ad 83       	std	Y+5, r26	; 0x05
     64c:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     64e:	6b 81       	ldd	r22, Y+3	; 0x03
     650:	7c 81       	ldd	r23, Y+4	; 0x04
     652:	8d 81       	ldd	r24, Y+5	; 0x05
     654:	9e 81       	ldd	r25, Y+6	; 0x06
     656:	20 e0       	ldi	r18, 0x00	; 0
     658:	30 e0       	ldi	r19, 0x00	; 0
     65a:	4a e7       	ldi	r20, 0x7A	; 122
     65c:	55 e4       	ldi	r21, 0x45	; 69
     65e:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     662:	dc 01       	movw	r26, r24
     664:	cb 01       	movw	r24, r22
     666:	8f 83       	std	Y+7, r24	; 0x07
     668:	98 87       	std	Y+8, r25	; 0x08
     66a:	a9 87       	std	Y+9, r26	; 0x09
     66c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     66e:	11 e0       	ldi	r17, 0x01	; 1
     670:	6f 81       	ldd	r22, Y+7	; 0x07
     672:	78 85       	ldd	r23, Y+8	; 0x08
     674:	89 85       	ldd	r24, Y+9	; 0x09
     676:	9a 85       	ldd	r25, Y+10	; 0x0a
     678:	20 e0       	ldi	r18, 0x00	; 0
     67a:	30 e0       	ldi	r19, 0x00	; 0
     67c:	40 e8       	ldi	r20, 0x80	; 128
     67e:	5f e3       	ldi	r21, 0x3F	; 63
     680:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     684:	88 23       	and	r24, r24
     686:	0c f0       	brlt	.+2      	; 0x68a <initLCD+0x66>
     688:	10 e0       	ldi	r17, 0x00	; 0
     68a:	11 23       	and	r17, r17
     68c:	29 f0       	breq	.+10     	; 0x698 <initLCD+0x74>
		__ticks = 1;
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	9c 87       	std	Y+12, r25	; 0x0c
     694:	8b 87       	std	Y+11, r24	; 0x0b
     696:	46 c0       	rjmp	.+140    	; 0x724 <initLCD+0x100>
	else if (__tmp > 65535)
     698:	11 e0       	ldi	r17, 0x01	; 1
     69a:	6f 81       	ldd	r22, Y+7	; 0x07
     69c:	78 85       	ldd	r23, Y+8	; 0x08
     69e:	89 85       	ldd	r24, Y+9	; 0x09
     6a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	3f ef       	ldi	r19, 0xFF	; 255
     6a6:	4f e7       	ldi	r20, 0x7F	; 127
     6a8:	57 e4       	ldi	r21, 0x47	; 71
     6aa:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     6ae:	18 16       	cp	r1, r24
     6b0:	0c f0       	brlt	.+2      	; 0x6b4 <initLCD+0x90>
     6b2:	10 e0       	ldi	r17, 0x00	; 0
     6b4:	11 23       	and	r17, r17
     6b6:	61 f1       	breq	.+88     	; 0x710 <initLCD+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6b8:	6b 81       	ldd	r22, Y+3	; 0x03
     6ba:	7c 81       	ldd	r23, Y+4	; 0x04
     6bc:	8d 81       	ldd	r24, Y+5	; 0x05
     6be:	9e 81       	ldd	r25, Y+6	; 0x06
     6c0:	20 e0       	ldi	r18, 0x00	; 0
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e2       	ldi	r20, 0x20	; 32
     6c6:	51 e4       	ldi	r21, 0x41	; 65
     6c8:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     6cc:	dc 01       	movw	r26, r24
     6ce:	cb 01       	movw	r24, r22
     6d0:	bc 01       	movw	r22, r24
     6d2:	cd 01       	movw	r24, r26
     6d4:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     6d8:	dc 01       	movw	r26, r24
     6da:	cb 01       	movw	r24, r22
     6dc:	9c 87       	std	Y+12, r25	; 0x0c
     6de:	8b 87       	std	Y+11, r24	; 0x0b
     6e0:	12 c0       	rjmp	.+36     	; 0x706 <initLCD+0xe2>
     6e2:	80 e9       	ldi	r24, 0x90	; 144
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	9e 87       	std	Y+14, r25	; 0x0e
     6e8:	8d 87       	std	Y+13, r24	; 0x0d
     6ea:	8d 85       	ldd	r24, Y+13	; 0x0d
     6ec:	9e 85       	ldd	r25, Y+14	; 0x0e
     6ee:	8c 01       	movw	r16, r24
     6f0:	c8 01       	movw	r24, r16
     6f2:	01 97       	sbiw	r24, 0x01	; 1
     6f4:	f1 f7       	brne	.-4      	; 0x6f2 <initLCD+0xce>
     6f6:	8c 01       	movw	r16, r24
     6f8:	1e 87       	std	Y+14, r17	; 0x0e
     6fa:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6fc:	8b 85       	ldd	r24, Y+11	; 0x0b
     6fe:	9c 85       	ldd	r25, Y+12	; 0x0c
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	9c 87       	std	Y+12, r25	; 0x0c
     704:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     706:	8b 85       	ldd	r24, Y+11	; 0x0b
     708:	9c 85       	ldd	r25, Y+12	; 0x0c
     70a:	00 97       	sbiw	r24, 0x00	; 0
     70c:	51 f7       	brne	.-44     	; 0x6e2 <initLCD+0xbe>
     70e:	17 c0       	rjmp	.+46     	; 0x73e <initLCD+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     710:	6f 81       	ldd	r22, Y+7	; 0x07
     712:	78 85       	ldd	r23, Y+8	; 0x08
     714:	89 85       	ldd	r24, Y+9	; 0x09
     716:	9a 85       	ldd	r25, Y+10	; 0x0a
     718:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     71c:	dc 01       	movw	r26, r24
     71e:	cb 01       	movw	r24, r22
     720:	9c 87       	std	Y+12, r25	; 0x0c
     722:	8b 87       	std	Y+11, r24	; 0x0b
     724:	8b 85       	ldd	r24, Y+11	; 0x0b
     726:	9c 85       	ldd	r25, Y+12	; 0x0c
     728:	98 8b       	std	Y+16, r25	; 0x10
     72a:	8f 87       	std	Y+15, r24	; 0x0f
     72c:	8f 85       	ldd	r24, Y+15	; 0x0f
     72e:	98 89       	ldd	r25, Y+16	; 0x10
     730:	8c 01       	movw	r16, r24
     732:	f8 01       	movw	r30, r16
     734:	31 97       	sbiw	r30, 0x01	; 1
     736:	f1 f7       	brne	.-4      	; 0x734 <initLCD+0x110>
     738:	8f 01       	movw	r16, r30
     73a:	18 8b       	std	Y+16, r17	; 0x10
     73c:	0f 87       	std	Y+15, r16	; 0x0f
	_delay_ms(15);
	for (int i=0;i<3;i++)
     73e:	1a 82       	std	Y+2, r1	; 0x02
     740:	19 82       	std	Y+1, r1	; 0x01
     742:	88 c0       	rjmp	.+272    	; 0x854 <initLCD+0x230>
	{
		wyslijComend(0b00000011);
     744:	83 e0       	ldi	r24, 0x03	; 3
     746:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	a0 ea       	ldi	r26, 0xA0	; 160
     750:	b0 e4       	ldi	r27, 0x40	; 64
     752:	89 8b       	std	Y+17, r24	; 0x11
     754:	9a 8b       	std	Y+18, r25	; 0x12
     756:	ab 8b       	std	Y+19, r26	; 0x13
     758:	bc 8b       	std	Y+20, r27	; 0x14
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     75a:	69 89       	ldd	r22, Y+17	; 0x11
     75c:	7a 89       	ldd	r23, Y+18	; 0x12
     75e:	8b 89       	ldd	r24, Y+19	; 0x13
     760:	9c 89       	ldd	r25, Y+20	; 0x14
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	4a e7       	ldi	r20, 0x7A	; 122
     768:	55 e4       	ldi	r21, 0x45	; 69
     76a:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     76e:	dc 01       	movw	r26, r24
     770:	cb 01       	movw	r24, r22
     772:	8d 8b       	std	Y+21, r24	; 0x15
     774:	9e 8b       	std	Y+22, r25	; 0x16
     776:	af 8b       	std	Y+23, r26	; 0x17
     778:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     77a:	11 e0       	ldi	r17, 0x01	; 1
     77c:	6d 89       	ldd	r22, Y+21	; 0x15
     77e:	7e 89       	ldd	r23, Y+22	; 0x16
     780:	8f 89       	ldd	r24, Y+23	; 0x17
     782:	98 8d       	ldd	r25, Y+24	; 0x18
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	40 e8       	ldi	r20, 0x80	; 128
     78a:	5f e3       	ldi	r21, 0x3F	; 63
     78c:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     790:	88 23       	and	r24, r24
     792:	0c f0       	brlt	.+2      	; 0x796 <initLCD+0x172>
     794:	10 e0       	ldi	r17, 0x00	; 0
     796:	11 23       	and	r17, r17
     798:	29 f0       	breq	.+10     	; 0x7a4 <initLCD+0x180>
		__ticks = 1;
     79a:	81 e0       	ldi	r24, 0x01	; 1
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	9a 8f       	std	Y+26, r25	; 0x1a
     7a0:	89 8f       	std	Y+25, r24	; 0x19
     7a2:	46 c0       	rjmp	.+140    	; 0x830 <initLCD+0x20c>
	else if (__tmp > 65535)
     7a4:	11 e0       	ldi	r17, 0x01	; 1
     7a6:	6d 89       	ldd	r22, Y+21	; 0x15
     7a8:	7e 89       	ldd	r23, Y+22	; 0x16
     7aa:	8f 89       	ldd	r24, Y+23	; 0x17
     7ac:	98 8d       	ldd	r25, Y+24	; 0x18
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	3f ef       	ldi	r19, 0xFF	; 255
     7b2:	4f e7       	ldi	r20, 0x7F	; 127
     7b4:	57 e4       	ldi	r21, 0x47	; 71
     7b6:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     7ba:	18 16       	cp	r1, r24
     7bc:	0c f0       	brlt	.+2      	; 0x7c0 <initLCD+0x19c>
     7be:	10 e0       	ldi	r17, 0x00	; 0
     7c0:	11 23       	and	r17, r17
     7c2:	61 f1       	breq	.+88     	; 0x81c <initLCD+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7c4:	69 89       	ldd	r22, Y+17	; 0x11
     7c6:	7a 89       	ldd	r23, Y+18	; 0x12
     7c8:	8b 89       	ldd	r24, Y+19	; 0x13
     7ca:	9c 89       	ldd	r25, Y+20	; 0x14
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	40 e2       	ldi	r20, 0x20	; 32
     7d2:	51 e4       	ldi	r21, 0x41	; 65
     7d4:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     7d8:	dc 01       	movw	r26, r24
     7da:	cb 01       	movw	r24, r22
     7dc:	bc 01       	movw	r22, r24
     7de:	cd 01       	movw	r24, r26
     7e0:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     7e4:	dc 01       	movw	r26, r24
     7e6:	cb 01       	movw	r24, r22
     7e8:	9a 8f       	std	Y+26, r25	; 0x1a
     7ea:	89 8f       	std	Y+25, r24	; 0x19
     7ec:	12 c0       	rjmp	.+36     	; 0x812 <initLCD+0x1ee>
     7ee:	80 e9       	ldi	r24, 0x90	; 144
     7f0:	91 e0       	ldi	r25, 0x01	; 1
     7f2:	9c 8f       	std	Y+28, r25	; 0x1c
     7f4:	8b 8f       	std	Y+27, r24	; 0x1b
     7f6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7f8:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7fa:	8c 01       	movw	r16, r24
     7fc:	c8 01       	movw	r24, r16
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	f1 f7       	brne	.-4      	; 0x7fe <initLCD+0x1da>
     802:	8c 01       	movw	r16, r24
     804:	1c 8f       	std	Y+28, r17	; 0x1c
     806:	0b 8f       	std	Y+27, r16	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     808:	89 8d       	ldd	r24, Y+25	; 0x19
     80a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	9a 8f       	std	Y+26, r25	; 0x1a
     810:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     812:	89 8d       	ldd	r24, Y+25	; 0x19
     814:	9a 8d       	ldd	r25, Y+26	; 0x1a
     816:	00 97       	sbiw	r24, 0x00	; 0
     818:	51 f7       	brne	.-44     	; 0x7ee <initLCD+0x1ca>
     81a:	17 c0       	rjmp	.+46     	; 0x84a <initLCD+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     81c:	6d 89       	ldd	r22, Y+21	; 0x15
     81e:	7e 89       	ldd	r23, Y+22	; 0x16
     820:	8f 89       	ldd	r24, Y+23	; 0x17
     822:	98 8d       	ldd	r25, Y+24	; 0x18
     824:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     828:	dc 01       	movw	r26, r24
     82a:	cb 01       	movw	r24, r22
     82c:	9a 8f       	std	Y+26, r25	; 0x1a
     82e:	89 8f       	std	Y+25, r24	; 0x19
     830:	89 8d       	ldd	r24, Y+25	; 0x19
     832:	9a 8d       	ldd	r25, Y+26	; 0x1a
     834:	9e 8f       	std	Y+30, r25	; 0x1e
     836:	8d 8f       	std	Y+29, r24	; 0x1d
     838:	8d 8d       	ldd	r24, Y+29	; 0x1d
     83a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     83c:	8c 01       	movw	r16, r24
     83e:	f8 01       	movw	r30, r16
     840:	31 97       	sbiw	r30, 0x01	; 1
     842:	f1 f7       	brne	.-4      	; 0x840 <initLCD+0x21c>
     844:	8f 01       	movw	r16, r30
     846:	1e 8f       	std	Y+30, r17	; 0x1e
     848:	0d 8f       	std	Y+29, r16	; 0x1d
	
}*/
void initLCD()
{
	_delay_ms(15);
	for (int i=0;i<3;i++)
     84a:	89 81       	ldd	r24, Y+1	; 0x01
     84c:	9a 81       	ldd	r25, Y+2	; 0x02
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	9a 83       	std	Y+2, r25	; 0x02
     852:	89 83       	std	Y+1, r24	; 0x01
     854:	89 81       	ldd	r24, Y+1	; 0x01
     856:	9a 81       	ldd	r25, Y+2	; 0x02
     858:	83 30       	cpi	r24, 0x03	; 3
     85a:	91 05       	cpc	r25, r1
     85c:	0c f4       	brge	.+2      	; 0x860 <__stack+0x1>
     85e:	72 cf       	rjmp	.-284    	; 0x744 <initLCD+0x120>
	{
		wyslijComend(0b00000011);
		_delay_ms(5);		
	}
	wyslijComend(0b00000010);
     860:	82 e0       	ldi	r24, 0x02	; 2
     862:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	a0 ea       	ldi	r26, 0xA0	; 160
     86c:	b0 e4       	ldi	r27, 0x40	; 64
     86e:	8f 8f       	std	Y+31, r24	; 0x1f
     870:	98 a3       	lds	r25, 0x58
     872:	a9 a3       	lds	r26, 0x59
     874:	ba a3       	lds	r27, 0x5a
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     876:	6f 8d       	ldd	r22, Y+31	; 0x1f
     878:	78 a1       	lds	r23, 0x48
     87a:	89 a1       	lds	r24, 0x49
     87c:	9a a1       	lds	r25, 0x4a
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	4a e7       	ldi	r20, 0x7A	; 122
     884:	55 e4       	ldi	r21, 0x45	; 69
     886:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     88a:	dc 01       	movw	r26, r24
     88c:	cb 01       	movw	r24, r22
     88e:	8b a3       	lds	r24, 0x5b
     890:	9c a3       	lds	r25, 0x5c
     892:	ad a3       	lds	r26, 0x5d
     894:	be a3       	lds	r27, 0x5e
	if (__tmp < 1.0)
     896:	11 e0       	ldi	r17, 0x01	; 1
     898:	6b a1       	lds	r22, 0x4b
     89a:	7c a1       	lds	r23, 0x4c
     89c:	8d a1       	lds	r24, 0x4d
     89e:	9e a1       	lds	r25, 0x4e
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	40 e8       	ldi	r20, 0x80	; 128
     8a6:	5f e3       	ldi	r21, 0x3F	; 63
     8a8:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     8ac:	88 23       	and	r24, r24
     8ae:	0c f0       	brlt	.+2      	; 0x8b2 <__stack+0x53>
     8b0:	10 e0       	ldi	r17, 0x00	; 0
     8b2:	11 23       	and	r17, r17
     8b4:	29 f0       	breq	.+10     	; 0x8c0 <__stack+0x61>
		__ticks = 1;
     8b6:	81 e0       	ldi	r24, 0x01	; 1
     8b8:	90 e0       	ldi	r25, 0x00	; 0
     8ba:	98 a7       	lds	r25, 0x78
     8bc:	8f a3       	lds	r24, 0x5f
     8be:	46 c0       	rjmp	.+140    	; 0x94c <__stack+0xed>
	else if (__tmp > 65535)
     8c0:	11 e0       	ldi	r17, 0x01	; 1
     8c2:	6b a1       	lds	r22, 0x4b
     8c4:	7c a1       	lds	r23, 0x4c
     8c6:	8d a1       	lds	r24, 0x4d
     8c8:	9e a1       	lds	r25, 0x4e
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	3f ef       	ldi	r19, 0xFF	; 255
     8ce:	4f e7       	ldi	r20, 0x7F	; 127
     8d0:	57 e4       	ldi	r21, 0x47	; 71
     8d2:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     8d6:	18 16       	cp	r1, r24
     8d8:	0c f0       	brlt	.+2      	; 0x8dc <__stack+0x7d>
     8da:	10 e0       	ldi	r17, 0x00	; 0
     8dc:	11 23       	and	r17, r17
     8de:	61 f1       	breq	.+88     	; 0x938 <__stack+0xd9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8e0:	6f 8d       	ldd	r22, Y+31	; 0x1f
     8e2:	78 a1       	lds	r23, 0x48
     8e4:	89 a1       	lds	r24, 0x49
     8e6:	9a a1       	lds	r25, 0x4a
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	40 e2       	ldi	r20, 0x20	; 32
     8ee:	51 e4       	ldi	r21, 0x41	; 65
     8f0:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     8f4:	dc 01       	movw	r26, r24
     8f6:	cb 01       	movw	r24, r22
     8f8:	bc 01       	movw	r22, r24
     8fa:	cd 01       	movw	r24, r26
     8fc:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     900:	dc 01       	movw	r26, r24
     902:	cb 01       	movw	r24, r22
     904:	98 a7       	lds	r25, 0x78
     906:	8f a3       	lds	r24, 0x5f
     908:	12 c0       	rjmp	.+36     	; 0x92e <__stack+0xcf>
     90a:	80 e9       	ldi	r24, 0x90	; 144
     90c:	91 e0       	ldi	r25, 0x01	; 1
     90e:	9a a7       	lds	r25, 0x7a
     910:	89 a7       	lds	r24, 0x79
     912:	89 a5       	lds	r24, 0x69
     914:	9a a5       	lds	r25, 0x6a
     916:	8c 01       	movw	r16, r24
     918:	c8 01       	movw	r24, r16
     91a:	01 97       	sbiw	r24, 0x01	; 1
     91c:	f1 f7       	brne	.-4      	; 0x91a <__stack+0xbb>
     91e:	8c 01       	movw	r16, r24
     920:	1a a7       	lds	r17, 0x7a
     922:	09 a7       	lds	r16, 0x79
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     924:	8f a1       	lds	r24, 0x4f
     926:	98 a5       	lds	r25, 0x68
     928:	01 97       	sbiw	r24, 0x01	; 1
     92a:	98 a7       	lds	r25, 0x78
     92c:	8f a3       	lds	r24, 0x5f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     92e:	8f a1       	lds	r24, 0x4f
     930:	98 a5       	lds	r25, 0x68
     932:	00 97       	sbiw	r24, 0x00	; 0
     934:	51 f7       	brne	.-44     	; 0x90a <__stack+0xab>
     936:	17 c0       	rjmp	.+46     	; 0x966 <__stack+0x107>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     938:	6b a1       	lds	r22, 0x4b
     93a:	7c a1       	lds	r23, 0x4c
     93c:	8d a1       	lds	r24, 0x4d
     93e:	9e a1       	lds	r25, 0x4e
     940:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     944:	dc 01       	movw	r26, r24
     946:	cb 01       	movw	r24, r22
     948:	98 a7       	lds	r25, 0x78
     94a:	8f a3       	lds	r24, 0x5f
     94c:	8f a1       	lds	r24, 0x4f
     94e:	98 a5       	lds	r25, 0x68
     950:	9c a7       	lds	r25, 0x7c
     952:	8b a7       	lds	r24, 0x7b
     954:	8b a5       	lds	r24, 0x6b
     956:	9c a5       	lds	r25, 0x6c
     958:	8c 01       	movw	r16, r24
     95a:	f8 01       	movw	r30, r16
     95c:	31 97       	sbiw	r30, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <__stack+0xfd>
     960:	8f 01       	movw	r16, r30
     962:	1c a7       	lds	r17, 0x7c
     964:	0b a7       	lds	r16, 0x7b
	_delay_ms(5);
	
	wyslijComend(0b00000010);
     966:	82 e0       	ldi	r24, 0x02	; 2
     968:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	a0 ea       	ldi	r26, 0xA0	; 160
     972:	b0 e4       	ldi	r27, 0x40	; 64
     974:	8d a7       	lds	r24, 0x7d
     976:	9e a7       	lds	r25, 0x7e
     978:	af a7       	lds	r26, 0x7f
     97a:	b8 ab       	sts	0x58, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     97c:	6d a5       	lds	r22, 0x6d
     97e:	7e a5       	lds	r23, 0x6e
     980:	8f a5       	lds	r24, 0x6f
     982:	98 a9       	sts	0x48, r25
     984:	20 e0       	ldi	r18, 0x00	; 0
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	4a e7       	ldi	r20, 0x7A	; 122
     98a:	55 e4       	ldi	r21, 0x45	; 69
     98c:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     990:	dc 01       	movw	r26, r24
     992:	cb 01       	movw	r24, r22
     994:	89 ab       	sts	0x59, r24
     996:	9a ab       	sts	0x5a, r25
     998:	ab ab       	sts	0x5b, r26
     99a:	bc ab       	sts	0x5c, r27
	if (__tmp < 1.0)
     99c:	11 e0       	ldi	r17, 0x01	; 1
     99e:	69 a9       	sts	0x49, r22
     9a0:	7a a9       	sts	0x4a, r23
     9a2:	8b a9       	sts	0x4b, r24
     9a4:	9c a9       	sts	0x4c, r25
     9a6:	20 e0       	ldi	r18, 0x00	; 0
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	40 e8       	ldi	r20, 0x80	; 128
     9ac:	5f e3       	ldi	r21, 0x3F	; 63
     9ae:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     9b2:	88 23       	and	r24, r24
     9b4:	0c f0       	brlt	.+2      	; 0x9b8 <__stack+0x159>
     9b6:	10 e0       	ldi	r17, 0x00	; 0
     9b8:	11 23       	and	r17, r17
     9ba:	29 f0       	breq	.+10     	; 0x9c6 <__stack+0x167>
		__ticks = 1;
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	9e ab       	sts	0x5e, r25
     9c2:	8d ab       	sts	0x5d, r24
     9c4:	46 c0       	rjmp	.+140    	; 0xa52 <__stack+0x1f3>
	else if (__tmp > 65535)
     9c6:	11 e0       	ldi	r17, 0x01	; 1
     9c8:	69 a9       	sts	0x49, r22
     9ca:	7a a9       	sts	0x4a, r23
     9cc:	8b a9       	sts	0x4b, r24
     9ce:	9c a9       	sts	0x4c, r25
     9d0:	20 e0       	ldi	r18, 0x00	; 0
     9d2:	3f ef       	ldi	r19, 0xFF	; 255
     9d4:	4f e7       	ldi	r20, 0x7F	; 127
     9d6:	57 e4       	ldi	r21, 0x47	; 71
     9d8:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     9dc:	18 16       	cp	r1, r24
     9de:	0c f0       	brlt	.+2      	; 0x9e2 <__stack+0x183>
     9e0:	10 e0       	ldi	r17, 0x00	; 0
     9e2:	11 23       	and	r17, r17
     9e4:	61 f1       	breq	.+88     	; 0xa3e <__stack+0x1df>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9e6:	6d a5       	lds	r22, 0x6d
     9e8:	7e a5       	lds	r23, 0x6e
     9ea:	8f a5       	lds	r24, 0x6f
     9ec:	98 a9       	sts	0x48, r25
     9ee:	20 e0       	ldi	r18, 0x00	; 0
     9f0:	30 e0       	ldi	r19, 0x00	; 0
     9f2:	40 e2       	ldi	r20, 0x20	; 32
     9f4:	51 e4       	ldi	r21, 0x41	; 65
     9f6:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     9fa:	dc 01       	movw	r26, r24
     9fc:	cb 01       	movw	r24, r22
     9fe:	bc 01       	movw	r22, r24
     a00:	cd 01       	movw	r24, r26
     a02:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     a06:	dc 01       	movw	r26, r24
     a08:	cb 01       	movw	r24, r22
     a0a:	9e ab       	sts	0x5e, r25
     a0c:	8d ab       	sts	0x5d, r24
     a0e:	12 c0       	rjmp	.+36     	; 0xa34 <__stack+0x1d5>
     a10:	80 e9       	ldi	r24, 0x90	; 144
     a12:	91 e0       	ldi	r25, 0x01	; 1
     a14:	98 af       	sts	0x78, r25
     a16:	8f ab       	sts	0x5f, r24
     a18:	8f a9       	sts	0x4f, r24
     a1a:	98 ad       	sts	0x68, r25
     a1c:	8c 01       	movw	r16, r24
     a1e:	c8 01       	movw	r24, r16
     a20:	01 97       	sbiw	r24, 0x01	; 1
     a22:	f1 f7       	brne	.-4      	; 0xa20 <__stack+0x1c1>
     a24:	8c 01       	movw	r16, r24
     a26:	18 af       	sts	0x78, r17
     a28:	0f ab       	sts	0x5f, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a2a:	8d a9       	sts	0x4d, r24
     a2c:	9e a9       	sts	0x4e, r25
     a2e:	01 97       	sbiw	r24, 0x01	; 1
     a30:	9e ab       	sts	0x5e, r25
     a32:	8d ab       	sts	0x5d, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a34:	8d a9       	sts	0x4d, r24
     a36:	9e a9       	sts	0x4e, r25
     a38:	00 97       	sbiw	r24, 0x00	; 0
     a3a:	51 f7       	brne	.-44     	; 0xa10 <__stack+0x1b1>
     a3c:	17 c0       	rjmp	.+46     	; 0xa6c <__stack+0x20d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a3e:	69 a9       	sts	0x49, r22
     a40:	7a a9       	sts	0x4a, r23
     a42:	8b a9       	sts	0x4b, r24
     a44:	9c a9       	sts	0x4c, r25
     a46:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     a4a:	dc 01       	movw	r26, r24
     a4c:	cb 01       	movw	r24, r22
     a4e:	9e ab       	sts	0x5e, r25
     a50:	8d ab       	sts	0x5d, r24
     a52:	8d a9       	sts	0x4d, r24
     a54:	9e a9       	sts	0x4e, r25
     a56:	9a af       	sts	0x7a, r25
     a58:	89 af       	sts	0x79, r24
     a5a:	89 ad       	sts	0x69, r24
     a5c:	9a ad       	sts	0x6a, r25
     a5e:	8c 01       	movw	r16, r24
     a60:	f8 01       	movw	r30, r16
     a62:	31 97       	sbiw	r30, 0x01	; 1
     a64:	f1 f7       	brne	.-4      	; 0xa62 <__stack+0x203>
     a66:	8f 01       	movw	r16, r30
     a68:	1a af       	sts	0x7a, r17
     a6a:	09 af       	sts	0x79, r16
	_delay_ms(5);
	wyslijComend(0b00001000);
     a6c:	88 e0       	ldi	r24, 0x08	; 8
     a6e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     a72:	80 e0       	ldi	r24, 0x00	; 0
     a74:	90 e0       	ldi	r25, 0x00	; 0
     a76:	a0 ea       	ldi	r26, 0xA0	; 160
     a78:	b0 e4       	ldi	r27, 0x40	; 64
     a7a:	8b af       	sts	0x7b, r24
     a7c:	9c af       	sts	0x7c, r25
     a7e:	ad af       	sts	0x7d, r26
     a80:	be af       	sts	0x7e, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     a82:	8e 01       	movw	r16, r28
     a84:	01 5c       	subi	r16, 0xC1	; 193
     a86:	1f 4f       	sbci	r17, 0xFF	; 255
     a88:	6b ad       	sts	0x6b, r22
     a8a:	7c ad       	sts	0x6c, r23
     a8c:	8d ad       	sts	0x6d, r24
     a8e:	9e ad       	sts	0x6e, r25
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	4a e7       	ldi	r20, 0x7A	; 122
     a96:	55 e4       	ldi	r21, 0x45	; 69
     a98:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     a9c:	dc 01       	movw	r26, r24
     a9e:	cb 01       	movw	r24, r22
     aa0:	f8 01       	movw	r30, r16
     aa2:	80 83       	st	Z, r24
     aa4:	91 83       	std	Z+1, r25	; 0x01
     aa6:	a2 83       	std	Z+2, r26	; 0x02
     aa8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     aaa:	ce 01       	movw	r24, r28
     aac:	cf 96       	adiw	r24, 0x3f	; 63
     aae:	11 e0       	ldi	r17, 0x01	; 1
     ab0:	fc 01       	movw	r30, r24
     ab2:	60 81       	ld	r22, Z
     ab4:	71 81       	ldd	r23, Z+1	; 0x01
     ab6:	82 81       	ldd	r24, Z+2	; 0x02
     ab8:	93 81       	ldd	r25, Z+3	; 0x03
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	40 e8       	ldi	r20, 0x80	; 128
     ac0:	5f e3       	ldi	r21, 0x3F	; 63
     ac2:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     ac6:	88 23       	and	r24, r24
     ac8:	0c f0       	brlt	.+2      	; 0xacc <__stack+0x26d>
     aca:	10 e0       	ldi	r17, 0x00	; 0
     acc:	11 23       	and	r17, r17
     ace:	49 f0       	breq	.+18     	; 0xae2 <__stack+0x283>
		__ticks = 1;
     ad0:	ce 01       	movw	r24, r28
     ad2:	8d 5b       	subi	r24, 0xBD	; 189
     ad4:	9f 4f       	sbci	r25, 0xFF	; 255
     ad6:	21 e0       	ldi	r18, 0x01	; 1
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	fc 01       	movw	r30, r24
     adc:	31 83       	std	Z+1, r19	; 0x01
     ade:	20 83       	st	Z, r18
     ae0:	6e c0       	rjmp	.+220    	; 0xbbe <__stack+0x35f>
	else if (__tmp > 65535)
     ae2:	ce 01       	movw	r24, r28
     ae4:	cf 96       	adiw	r24, 0x3f	; 63
     ae6:	11 e0       	ldi	r17, 0x01	; 1
     ae8:	fc 01       	movw	r30, r24
     aea:	60 81       	ld	r22, Z
     aec:	71 81       	ldd	r23, Z+1	; 0x01
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	20 e0       	ldi	r18, 0x00	; 0
     af4:	3f ef       	ldi	r19, 0xFF	; 255
     af6:	4f e7       	ldi	r20, 0x7F	; 127
     af8:	57 e4       	ldi	r21, 0x47	; 71
     afa:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     afe:	18 16       	cp	r1, r24
     b00:	0c f0       	brlt	.+2      	; 0xb04 <__stack+0x2a5>
     b02:	10 e0       	ldi	r17, 0x00	; 0
     b04:	11 23       	and	r17, r17
     b06:	09 f4       	brne	.+2      	; 0xb0a <__stack+0x2ab>
     b08:	49 c0       	rjmp	.+146    	; 0xb9c <__stack+0x33d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b0a:	6b ad       	sts	0x6b, r22
     b0c:	7c ad       	sts	0x6c, r23
     b0e:	8d ad       	sts	0x6d, r24
     b10:	9e ad       	sts	0x6e, r25
     b12:	20 e0       	ldi	r18, 0x00	; 0
     b14:	30 e0       	ldi	r19, 0x00	; 0
     b16:	40 e2       	ldi	r20, 0x20	; 32
     b18:	51 e4       	ldi	r21, 0x41	; 65
     b1a:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     b1e:	dc 01       	movw	r26, r24
     b20:	cb 01       	movw	r24, r22
     b22:	8e 01       	movw	r16, r28
     b24:	0d 5b       	subi	r16, 0xBD	; 189
     b26:	1f 4f       	sbci	r17, 0xFF	; 255
     b28:	bc 01       	movw	r22, r24
     b2a:	cd 01       	movw	r24, r26
     b2c:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     b30:	dc 01       	movw	r26, r24
     b32:	cb 01       	movw	r24, r22
     b34:	f8 01       	movw	r30, r16
     b36:	91 83       	std	Z+1, r25	; 0x01
     b38:	80 83       	st	Z, r24
     b3a:	27 c0       	rjmp	.+78     	; 0xb8a <__stack+0x32b>
     b3c:	ce 01       	movw	r24, r28
     b3e:	8b 5b       	subi	r24, 0xBB	; 187
     b40:	9f 4f       	sbci	r25, 0xFF	; 255
     b42:	20 e9       	ldi	r18, 0x90	; 144
     b44:	31 e0       	ldi	r19, 0x01	; 1
     b46:	fc 01       	movw	r30, r24
     b48:	31 83       	std	Z+1, r19	; 0x01
     b4a:	20 83       	st	Z, r18
     b4c:	ce 01       	movw	r24, r28
     b4e:	8b 5b       	subi	r24, 0xBB	; 187
     b50:	9f 4f       	sbci	r25, 0xFF	; 255
     b52:	fc 01       	movw	r30, r24
     b54:	80 81       	ld	r24, Z
     b56:	91 81       	ldd	r25, Z+1	; 0x01
     b58:	8c 01       	movw	r16, r24
     b5a:	c8 01       	movw	r24, r16
     b5c:	01 97       	sbiw	r24, 0x01	; 1
     b5e:	f1 f7       	brne	.-4      	; 0xb5c <__stack+0x2fd>
     b60:	8c 01       	movw	r16, r24
     b62:	ce 01       	movw	r24, r28
     b64:	8b 5b       	subi	r24, 0xBB	; 187
     b66:	9f 4f       	sbci	r25, 0xFF	; 255
     b68:	fc 01       	movw	r30, r24
     b6a:	11 83       	std	Z+1, r17	; 0x01
     b6c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b6e:	ce 01       	movw	r24, r28
     b70:	8d 5b       	subi	r24, 0xBD	; 189
     b72:	9f 4f       	sbci	r25, 0xFF	; 255
     b74:	9e 01       	movw	r18, r28
     b76:	2d 5b       	subi	r18, 0xBD	; 189
     b78:	3f 4f       	sbci	r19, 0xFF	; 255
     b7a:	f9 01       	movw	r30, r18
     b7c:	20 81       	ld	r18, Z
     b7e:	31 81       	ldd	r19, Z+1	; 0x01
     b80:	21 50       	subi	r18, 0x01	; 1
     b82:	30 40       	sbci	r19, 0x00	; 0
     b84:	fc 01       	movw	r30, r24
     b86:	31 83       	std	Z+1, r19	; 0x01
     b88:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b8a:	ce 01       	movw	r24, r28
     b8c:	8d 5b       	subi	r24, 0xBD	; 189
     b8e:	9f 4f       	sbci	r25, 0xFF	; 255
     b90:	fc 01       	movw	r30, r24
     b92:	80 81       	ld	r24, Z
     b94:	91 81       	ldd	r25, Z+1	; 0x01
     b96:	00 97       	sbiw	r24, 0x00	; 0
     b98:	89 f6       	brne	.-94     	; 0xb3c <__stack+0x2dd>
     b9a:	2e c0       	rjmp	.+92     	; 0xbf8 <__stack+0x399>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b9c:	8e 01       	movw	r16, r28
     b9e:	0d 5b       	subi	r16, 0xBD	; 189
     ba0:	1f 4f       	sbci	r17, 0xFF	; 255
     ba2:	ce 01       	movw	r24, r28
     ba4:	cf 96       	adiw	r24, 0x3f	; 63
     ba6:	fc 01       	movw	r30, r24
     ba8:	60 81       	ld	r22, Z
     baa:	71 81       	ldd	r23, Z+1	; 0x01
     bac:	82 81       	ldd	r24, Z+2	; 0x02
     bae:	93 81       	ldd	r25, Z+3	; 0x03
     bb0:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     bb4:	dc 01       	movw	r26, r24
     bb6:	cb 01       	movw	r24, r22
     bb8:	f8 01       	movw	r30, r16
     bba:	91 83       	std	Z+1, r25	; 0x01
     bbc:	80 83       	st	Z, r24
     bbe:	ce 01       	movw	r24, r28
     bc0:	89 5b       	subi	r24, 0xB9	; 185
     bc2:	9f 4f       	sbci	r25, 0xFF	; 255
     bc4:	9e 01       	movw	r18, r28
     bc6:	2d 5b       	subi	r18, 0xBD	; 189
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	f9 01       	movw	r30, r18
     bcc:	20 81       	ld	r18, Z
     bce:	31 81       	ldd	r19, Z+1	; 0x01
     bd0:	fc 01       	movw	r30, r24
     bd2:	31 83       	std	Z+1, r19	; 0x01
     bd4:	20 83       	st	Z, r18
     bd6:	ce 01       	movw	r24, r28
     bd8:	89 5b       	subi	r24, 0xB9	; 185
     bda:	9f 4f       	sbci	r25, 0xFF	; 255
     bdc:	fc 01       	movw	r30, r24
     bde:	80 81       	ld	r24, Z
     be0:	91 81       	ldd	r25, Z+1	; 0x01
     be2:	8c 01       	movw	r16, r24
     be4:	c8 01       	movw	r24, r16
     be6:	01 97       	sbiw	r24, 0x01	; 1
     be8:	f1 f7       	brne	.-4      	; 0xbe6 <__stack+0x387>
     bea:	8c 01       	movw	r16, r24
     bec:	ce 01       	movw	r24, r28
     bee:	89 5b       	subi	r24, 0xB9	; 185
     bf0:	9f 4f       	sbci	r25, 0xFF	; 255
     bf2:	fc 01       	movw	r30, r24
     bf4:	11 83       	std	Z+1, r17	; 0x01
     bf6:	00 83       	st	Z, r16
	_delay_ms(5);
	
	
	wyslijComend(0b00000000);
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     bfe:	9e 01       	movw	r18, r28
     c00:	27 5b       	subi	r18, 0xB7	; 183
     c02:	3f 4f       	sbci	r19, 0xFF	; 255
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	a0 ea       	ldi	r26, 0xA0	; 160
     c0a:	b0 e4       	ldi	r27, 0x40	; 64
     c0c:	f9 01       	movw	r30, r18
     c0e:	80 83       	st	Z, r24
     c10:	91 83       	std	Z+1, r25	; 0x01
     c12:	a2 83       	std	Z+2, r26	; 0x02
     c14:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     c16:	8e 01       	movw	r16, r28
     c18:	03 5b       	subi	r16, 0xB3	; 179
     c1a:	1f 4f       	sbci	r17, 0xFF	; 255
     c1c:	ce 01       	movw	r24, r28
     c1e:	87 5b       	subi	r24, 0xB7	; 183
     c20:	9f 4f       	sbci	r25, 0xFF	; 255
     c22:	fc 01       	movw	r30, r24
     c24:	60 81       	ld	r22, Z
     c26:	71 81       	ldd	r23, Z+1	; 0x01
     c28:	82 81       	ldd	r24, Z+2	; 0x02
     c2a:	93 81       	ldd	r25, Z+3	; 0x03
     c2c:	20 e0       	ldi	r18, 0x00	; 0
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	4a e7       	ldi	r20, 0x7A	; 122
     c32:	55 e4       	ldi	r21, 0x45	; 69
     c34:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     c38:	dc 01       	movw	r26, r24
     c3a:	cb 01       	movw	r24, r22
     c3c:	f8 01       	movw	r30, r16
     c3e:	80 83       	st	Z, r24
     c40:	91 83       	std	Z+1, r25	; 0x01
     c42:	a2 83       	std	Z+2, r26	; 0x02
     c44:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c46:	ce 01       	movw	r24, r28
     c48:	83 5b       	subi	r24, 0xB3	; 179
     c4a:	9f 4f       	sbci	r25, 0xFF	; 255
     c4c:	11 e0       	ldi	r17, 0x01	; 1
     c4e:	fc 01       	movw	r30, r24
     c50:	60 81       	ld	r22, Z
     c52:	71 81       	ldd	r23, Z+1	; 0x01
     c54:	82 81       	ldd	r24, Z+2	; 0x02
     c56:	93 81       	ldd	r25, Z+3	; 0x03
     c58:	20 e0       	ldi	r18, 0x00	; 0
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	40 e8       	ldi	r20, 0x80	; 128
     c5e:	5f e3       	ldi	r21, 0x3F	; 63
     c60:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     c64:	88 23       	and	r24, r24
     c66:	0c f0       	brlt	.+2      	; 0xc6a <__stack+0x40b>
     c68:	10 e0       	ldi	r17, 0x00	; 0
     c6a:	11 23       	and	r17, r17
     c6c:	49 f0       	breq	.+18     	; 0xc80 <__stack+0x421>
		__ticks = 1;
     c6e:	ce 01       	movw	r24, r28
     c70:	8f 5a       	subi	r24, 0xAF	; 175
     c72:	9f 4f       	sbci	r25, 0xFF	; 255
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	fc 01       	movw	r30, r24
     c7a:	31 83       	std	Z+1, r19	; 0x01
     c7c:	20 83       	st	Z, r18
     c7e:	74 c0       	rjmp	.+232    	; 0xd68 <__stack+0x509>
	else if (__tmp > 65535)
     c80:	ce 01       	movw	r24, r28
     c82:	83 5b       	subi	r24, 0xB3	; 179
     c84:	9f 4f       	sbci	r25, 0xFF	; 255
     c86:	11 e0       	ldi	r17, 0x01	; 1
     c88:	fc 01       	movw	r30, r24
     c8a:	60 81       	ld	r22, Z
     c8c:	71 81       	ldd	r23, Z+1	; 0x01
     c8e:	82 81       	ldd	r24, Z+2	; 0x02
     c90:	93 81       	ldd	r25, Z+3	; 0x03
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	3f ef       	ldi	r19, 0xFF	; 255
     c96:	4f e7       	ldi	r20, 0x7F	; 127
     c98:	57 e4       	ldi	r21, 0x47	; 71
     c9a:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     c9e:	18 16       	cp	r1, r24
     ca0:	0c f0       	brlt	.+2      	; 0xca4 <__stack+0x445>
     ca2:	10 e0       	ldi	r17, 0x00	; 0
     ca4:	11 23       	and	r17, r17
     ca6:	09 f4       	brne	.+2      	; 0xcaa <__stack+0x44b>
     ca8:	4d c0       	rjmp	.+154    	; 0xd44 <__stack+0x4e5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     caa:	ce 01       	movw	r24, r28
     cac:	87 5b       	subi	r24, 0xB7	; 183
     cae:	9f 4f       	sbci	r25, 0xFF	; 255
     cb0:	fc 01       	movw	r30, r24
     cb2:	60 81       	ld	r22, Z
     cb4:	71 81       	ldd	r23, Z+1	; 0x01
     cb6:	82 81       	ldd	r24, Z+2	; 0x02
     cb8:	93 81       	ldd	r25, Z+3	; 0x03
     cba:	20 e0       	ldi	r18, 0x00	; 0
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	40 e2       	ldi	r20, 0x20	; 32
     cc0:	51 e4       	ldi	r21, 0x41	; 65
     cc2:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     cc6:	dc 01       	movw	r26, r24
     cc8:	cb 01       	movw	r24, r22
     cca:	8e 01       	movw	r16, r28
     ccc:	0f 5a       	subi	r16, 0xAF	; 175
     cce:	1f 4f       	sbci	r17, 0xFF	; 255
     cd0:	bc 01       	movw	r22, r24
     cd2:	cd 01       	movw	r24, r26
     cd4:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     cd8:	dc 01       	movw	r26, r24
     cda:	cb 01       	movw	r24, r22
     cdc:	f8 01       	movw	r30, r16
     cde:	91 83       	std	Z+1, r25	; 0x01
     ce0:	80 83       	st	Z, r24
     ce2:	27 c0       	rjmp	.+78     	; 0xd32 <__stack+0x4d3>
     ce4:	ce 01       	movw	r24, r28
     ce6:	8d 5a       	subi	r24, 0xAD	; 173
     ce8:	9f 4f       	sbci	r25, 0xFF	; 255
     cea:	20 e9       	ldi	r18, 0x90	; 144
     cec:	31 e0       	ldi	r19, 0x01	; 1
     cee:	fc 01       	movw	r30, r24
     cf0:	31 83       	std	Z+1, r19	; 0x01
     cf2:	20 83       	st	Z, r18
     cf4:	ce 01       	movw	r24, r28
     cf6:	8d 5a       	subi	r24, 0xAD	; 173
     cf8:	9f 4f       	sbci	r25, 0xFF	; 255
     cfa:	fc 01       	movw	r30, r24
     cfc:	80 81       	ld	r24, Z
     cfe:	91 81       	ldd	r25, Z+1	; 0x01
     d00:	8c 01       	movw	r16, r24
     d02:	c8 01       	movw	r24, r16
     d04:	01 97       	sbiw	r24, 0x01	; 1
     d06:	f1 f7       	brne	.-4      	; 0xd04 <__stack+0x4a5>
     d08:	8c 01       	movw	r16, r24
     d0a:	ce 01       	movw	r24, r28
     d0c:	8d 5a       	subi	r24, 0xAD	; 173
     d0e:	9f 4f       	sbci	r25, 0xFF	; 255
     d10:	fc 01       	movw	r30, r24
     d12:	11 83       	std	Z+1, r17	; 0x01
     d14:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d16:	ce 01       	movw	r24, r28
     d18:	8f 5a       	subi	r24, 0xAF	; 175
     d1a:	9f 4f       	sbci	r25, 0xFF	; 255
     d1c:	9e 01       	movw	r18, r28
     d1e:	2f 5a       	subi	r18, 0xAF	; 175
     d20:	3f 4f       	sbci	r19, 0xFF	; 255
     d22:	f9 01       	movw	r30, r18
     d24:	20 81       	ld	r18, Z
     d26:	31 81       	ldd	r19, Z+1	; 0x01
     d28:	21 50       	subi	r18, 0x01	; 1
     d2a:	30 40       	sbci	r19, 0x00	; 0
     d2c:	fc 01       	movw	r30, r24
     d2e:	31 83       	std	Z+1, r19	; 0x01
     d30:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d32:	ce 01       	movw	r24, r28
     d34:	8f 5a       	subi	r24, 0xAF	; 175
     d36:	9f 4f       	sbci	r25, 0xFF	; 255
     d38:	fc 01       	movw	r30, r24
     d3a:	80 81       	ld	r24, Z
     d3c:	91 81       	ldd	r25, Z+1	; 0x01
     d3e:	00 97       	sbiw	r24, 0x00	; 0
     d40:	89 f6       	brne	.-94     	; 0xce4 <__stack+0x485>
     d42:	2f c0       	rjmp	.+94     	; 0xda2 <__stack+0x543>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d44:	8e 01       	movw	r16, r28
     d46:	0f 5a       	subi	r16, 0xAF	; 175
     d48:	1f 4f       	sbci	r17, 0xFF	; 255
     d4a:	ce 01       	movw	r24, r28
     d4c:	83 5b       	subi	r24, 0xB3	; 179
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	fc 01       	movw	r30, r24
     d52:	60 81       	ld	r22, Z
     d54:	71 81       	ldd	r23, Z+1	; 0x01
     d56:	82 81       	ldd	r24, Z+2	; 0x02
     d58:	93 81       	ldd	r25, Z+3	; 0x03
     d5a:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     d5e:	dc 01       	movw	r26, r24
     d60:	cb 01       	movw	r24, r22
     d62:	f8 01       	movw	r30, r16
     d64:	91 83       	std	Z+1, r25	; 0x01
     d66:	80 83       	st	Z, r24
     d68:	ce 01       	movw	r24, r28
     d6a:	8b 5a       	subi	r24, 0xAB	; 171
     d6c:	9f 4f       	sbci	r25, 0xFF	; 255
     d6e:	9e 01       	movw	r18, r28
     d70:	2f 5a       	subi	r18, 0xAF	; 175
     d72:	3f 4f       	sbci	r19, 0xFF	; 255
     d74:	f9 01       	movw	r30, r18
     d76:	20 81       	ld	r18, Z
     d78:	31 81       	ldd	r19, Z+1	; 0x01
     d7a:	fc 01       	movw	r30, r24
     d7c:	31 83       	std	Z+1, r19	; 0x01
     d7e:	20 83       	st	Z, r18
     d80:	ce 01       	movw	r24, r28
     d82:	8b 5a       	subi	r24, 0xAB	; 171
     d84:	9f 4f       	sbci	r25, 0xFF	; 255
     d86:	fc 01       	movw	r30, r24
     d88:	80 81       	ld	r24, Z
     d8a:	91 81       	ldd	r25, Z+1	; 0x01
     d8c:	8c 01       	movw	r16, r24
     d8e:	c8 01       	movw	r24, r16
     d90:	01 97       	sbiw	r24, 0x01	; 1
     d92:	f1 f7       	brne	.-4      	; 0xd90 <__stack+0x531>
     d94:	8c 01       	movw	r16, r24
     d96:	ce 01       	movw	r24, r28
     d98:	8b 5a       	subi	r24, 0xAB	; 171
     d9a:	9f 4f       	sbci	r25, 0xFF	; 255
     d9c:	fc 01       	movw	r30, r24
     d9e:	11 83       	std	Z+1, r17	; 0x01
     da0:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0b00001000);
     da2:	88 e0       	ldi	r24, 0x08	; 8
     da4:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     da8:	9e 01       	movw	r18, r28
     daa:	29 5a       	subi	r18, 0xA9	; 169
     dac:	3f 4f       	sbci	r19, 0xFF	; 255
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	a0 ea       	ldi	r26, 0xA0	; 160
     db4:	b0 e4       	ldi	r27, 0x40	; 64
     db6:	f9 01       	movw	r30, r18
     db8:	80 83       	st	Z, r24
     dba:	91 83       	std	Z+1, r25	; 0x01
     dbc:	a2 83       	std	Z+2, r26	; 0x02
     dbe:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     dc0:	8e 01       	movw	r16, r28
     dc2:	05 5a       	subi	r16, 0xA5	; 165
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	ce 01       	movw	r24, r28
     dc8:	89 5a       	subi	r24, 0xA9	; 169
     dca:	9f 4f       	sbci	r25, 0xFF	; 255
     dcc:	fc 01       	movw	r30, r24
     dce:	60 81       	ld	r22, Z
     dd0:	71 81       	ldd	r23, Z+1	; 0x01
     dd2:	82 81       	ldd	r24, Z+2	; 0x02
     dd4:	93 81       	ldd	r25, Z+3	; 0x03
     dd6:	20 e0       	ldi	r18, 0x00	; 0
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	4a e7       	ldi	r20, 0x7A	; 122
     ddc:	55 e4       	ldi	r21, 0x45	; 69
     dde:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     de2:	dc 01       	movw	r26, r24
     de4:	cb 01       	movw	r24, r22
     de6:	f8 01       	movw	r30, r16
     de8:	80 83       	st	Z, r24
     dea:	91 83       	std	Z+1, r25	; 0x01
     dec:	a2 83       	std	Z+2, r26	; 0x02
     dee:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     df0:	ce 01       	movw	r24, r28
     df2:	85 5a       	subi	r24, 0xA5	; 165
     df4:	9f 4f       	sbci	r25, 0xFF	; 255
     df6:	11 e0       	ldi	r17, 0x01	; 1
     df8:	fc 01       	movw	r30, r24
     dfa:	60 81       	ld	r22, Z
     dfc:	71 81       	ldd	r23, Z+1	; 0x01
     dfe:	82 81       	ldd	r24, Z+2	; 0x02
     e00:	93 81       	ldd	r25, Z+3	; 0x03
     e02:	20 e0       	ldi	r18, 0x00	; 0
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	40 e8       	ldi	r20, 0x80	; 128
     e08:	5f e3       	ldi	r21, 0x3F	; 63
     e0a:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     e0e:	88 23       	and	r24, r24
     e10:	0c f0       	brlt	.+2      	; 0xe14 <__stack+0x5b5>
     e12:	10 e0       	ldi	r17, 0x00	; 0
     e14:	11 23       	and	r17, r17
     e16:	49 f0       	breq	.+18     	; 0xe2a <__stack+0x5cb>
		__ticks = 1;
     e18:	ce 01       	movw	r24, r28
     e1a:	81 5a       	subi	r24, 0xA1	; 161
     e1c:	9f 4f       	sbci	r25, 0xFF	; 255
     e1e:	21 e0       	ldi	r18, 0x01	; 1
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	fc 01       	movw	r30, r24
     e24:	31 83       	std	Z+1, r19	; 0x01
     e26:	20 83       	st	Z, r18
     e28:	74 c0       	rjmp	.+232    	; 0xf12 <__stack+0x6b3>
	else if (__tmp > 65535)
     e2a:	ce 01       	movw	r24, r28
     e2c:	85 5a       	subi	r24, 0xA5	; 165
     e2e:	9f 4f       	sbci	r25, 0xFF	; 255
     e30:	11 e0       	ldi	r17, 0x01	; 1
     e32:	fc 01       	movw	r30, r24
     e34:	60 81       	ld	r22, Z
     e36:	71 81       	ldd	r23, Z+1	; 0x01
     e38:	82 81       	ldd	r24, Z+2	; 0x02
     e3a:	93 81       	ldd	r25, Z+3	; 0x03
     e3c:	20 e0       	ldi	r18, 0x00	; 0
     e3e:	3f ef       	ldi	r19, 0xFF	; 255
     e40:	4f e7       	ldi	r20, 0x7F	; 127
     e42:	57 e4       	ldi	r21, 0x47	; 71
     e44:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     e48:	18 16       	cp	r1, r24
     e4a:	0c f0       	brlt	.+2      	; 0xe4e <__stack+0x5ef>
     e4c:	10 e0       	ldi	r17, 0x00	; 0
     e4e:	11 23       	and	r17, r17
     e50:	09 f4       	brne	.+2      	; 0xe54 <__stack+0x5f5>
     e52:	4d c0       	rjmp	.+154    	; 0xeee <__stack+0x68f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e54:	ce 01       	movw	r24, r28
     e56:	89 5a       	subi	r24, 0xA9	; 169
     e58:	9f 4f       	sbci	r25, 0xFF	; 255
     e5a:	fc 01       	movw	r30, r24
     e5c:	60 81       	ld	r22, Z
     e5e:	71 81       	ldd	r23, Z+1	; 0x01
     e60:	82 81       	ldd	r24, Z+2	; 0x02
     e62:	93 81       	ldd	r25, Z+3	; 0x03
     e64:	20 e0       	ldi	r18, 0x00	; 0
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	40 e2       	ldi	r20, 0x20	; 32
     e6a:	51 e4       	ldi	r21, 0x41	; 65
     e6c:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     e70:	dc 01       	movw	r26, r24
     e72:	cb 01       	movw	r24, r22
     e74:	8e 01       	movw	r16, r28
     e76:	01 5a       	subi	r16, 0xA1	; 161
     e78:	1f 4f       	sbci	r17, 0xFF	; 255
     e7a:	bc 01       	movw	r22, r24
     e7c:	cd 01       	movw	r24, r26
     e7e:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     e82:	dc 01       	movw	r26, r24
     e84:	cb 01       	movw	r24, r22
     e86:	f8 01       	movw	r30, r16
     e88:	91 83       	std	Z+1, r25	; 0x01
     e8a:	80 83       	st	Z, r24
     e8c:	27 c0       	rjmp	.+78     	; 0xedc <__stack+0x67d>
     e8e:	ce 01       	movw	r24, r28
     e90:	8f 59       	subi	r24, 0x9F	; 159
     e92:	9f 4f       	sbci	r25, 0xFF	; 255
     e94:	20 e9       	ldi	r18, 0x90	; 144
     e96:	31 e0       	ldi	r19, 0x01	; 1
     e98:	fc 01       	movw	r30, r24
     e9a:	31 83       	std	Z+1, r19	; 0x01
     e9c:	20 83       	st	Z, r18
     e9e:	ce 01       	movw	r24, r28
     ea0:	8f 59       	subi	r24, 0x9F	; 159
     ea2:	9f 4f       	sbci	r25, 0xFF	; 255
     ea4:	fc 01       	movw	r30, r24
     ea6:	80 81       	ld	r24, Z
     ea8:	91 81       	ldd	r25, Z+1	; 0x01
     eaa:	8c 01       	movw	r16, r24
     eac:	c8 01       	movw	r24, r16
     eae:	01 97       	sbiw	r24, 0x01	; 1
     eb0:	f1 f7       	brne	.-4      	; 0xeae <__stack+0x64f>
     eb2:	8c 01       	movw	r16, r24
     eb4:	ce 01       	movw	r24, r28
     eb6:	8f 59       	subi	r24, 0x9F	; 159
     eb8:	9f 4f       	sbci	r25, 0xFF	; 255
     eba:	fc 01       	movw	r30, r24
     ebc:	11 83       	std	Z+1, r17	; 0x01
     ebe:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ec0:	ce 01       	movw	r24, r28
     ec2:	81 5a       	subi	r24, 0xA1	; 161
     ec4:	9f 4f       	sbci	r25, 0xFF	; 255
     ec6:	9e 01       	movw	r18, r28
     ec8:	21 5a       	subi	r18, 0xA1	; 161
     eca:	3f 4f       	sbci	r19, 0xFF	; 255
     ecc:	f9 01       	movw	r30, r18
     ece:	20 81       	ld	r18, Z
     ed0:	31 81       	ldd	r19, Z+1	; 0x01
     ed2:	21 50       	subi	r18, 0x01	; 1
     ed4:	30 40       	sbci	r19, 0x00	; 0
     ed6:	fc 01       	movw	r30, r24
     ed8:	31 83       	std	Z+1, r19	; 0x01
     eda:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     edc:	ce 01       	movw	r24, r28
     ede:	81 5a       	subi	r24, 0xA1	; 161
     ee0:	9f 4f       	sbci	r25, 0xFF	; 255
     ee2:	fc 01       	movw	r30, r24
     ee4:	80 81       	ld	r24, Z
     ee6:	91 81       	ldd	r25, Z+1	; 0x01
     ee8:	00 97       	sbiw	r24, 0x00	; 0
     eea:	89 f6       	brne	.-94     	; 0xe8e <__stack+0x62f>
     eec:	2f c0       	rjmp	.+94     	; 0xf4c <__stack+0x6ed>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eee:	8e 01       	movw	r16, r28
     ef0:	01 5a       	subi	r16, 0xA1	; 161
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	ce 01       	movw	r24, r28
     ef6:	85 5a       	subi	r24, 0xA5	; 165
     ef8:	9f 4f       	sbci	r25, 0xFF	; 255
     efa:	fc 01       	movw	r30, r24
     efc:	60 81       	ld	r22, Z
     efe:	71 81       	ldd	r23, Z+1	; 0x01
     f00:	82 81       	ldd	r24, Z+2	; 0x02
     f02:	93 81       	ldd	r25, Z+3	; 0x03
     f04:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
     f08:	dc 01       	movw	r26, r24
     f0a:	cb 01       	movw	r24, r22
     f0c:	f8 01       	movw	r30, r16
     f0e:	91 83       	std	Z+1, r25	; 0x01
     f10:	80 83       	st	Z, r24
     f12:	ce 01       	movw	r24, r28
     f14:	8d 59       	subi	r24, 0x9D	; 157
     f16:	9f 4f       	sbci	r25, 0xFF	; 255
     f18:	9e 01       	movw	r18, r28
     f1a:	21 5a       	subi	r18, 0xA1	; 161
     f1c:	3f 4f       	sbci	r19, 0xFF	; 255
     f1e:	f9 01       	movw	r30, r18
     f20:	20 81       	ld	r18, Z
     f22:	31 81       	ldd	r19, Z+1	; 0x01
     f24:	fc 01       	movw	r30, r24
     f26:	31 83       	std	Z+1, r19	; 0x01
     f28:	20 83       	st	Z, r18
     f2a:	ce 01       	movw	r24, r28
     f2c:	8d 59       	subi	r24, 0x9D	; 157
     f2e:	9f 4f       	sbci	r25, 0xFF	; 255
     f30:	fc 01       	movw	r30, r24
     f32:	80 81       	ld	r24, Z
     f34:	91 81       	ldd	r25, Z+1	; 0x01
     f36:	8c 01       	movw	r16, r24
     f38:	c8 01       	movw	r24, r16
     f3a:	01 97       	sbiw	r24, 0x01	; 1
     f3c:	f1 f7       	brne	.-4      	; 0xf3a <__stack+0x6db>
     f3e:	8c 01       	movw	r16, r24
     f40:	ce 01       	movw	r24, r28
     f42:	8d 59       	subi	r24, 0x9D	; 157
     f44:	9f 4f       	sbci	r25, 0xFF	; 255
     f46:	fc 01       	movw	r30, r24
     f48:	11 83       	std	Z+1, r17	; 0x01
     f4a:	00 83       	st	Z, r16
	_delay_ms(5);
	
	wyslijComend(0b00000000);
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
     f52:	9e 01       	movw	r18, r28
     f54:	2b 59       	subi	r18, 0x9B	; 155
     f56:	3f 4f       	sbci	r19, 0xFF	; 255
     f58:	80 e0       	ldi	r24, 0x00	; 0
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	a0 ea       	ldi	r26, 0xA0	; 160
     f5e:	b0 e4       	ldi	r27, 0x40	; 64
     f60:	f9 01       	movw	r30, r18
     f62:	80 83       	st	Z, r24
     f64:	91 83       	std	Z+1, r25	; 0x01
     f66:	a2 83       	std	Z+2, r26	; 0x02
     f68:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     f6a:	8e 01       	movw	r16, r28
     f6c:	07 59       	subi	r16, 0x97	; 151
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
     f70:	ce 01       	movw	r24, r28
     f72:	8b 59       	subi	r24, 0x9B	; 155
     f74:	9f 4f       	sbci	r25, 0xFF	; 255
     f76:	fc 01       	movw	r30, r24
     f78:	60 81       	ld	r22, Z
     f7a:	71 81       	ldd	r23, Z+1	; 0x01
     f7c:	82 81       	ldd	r24, Z+2	; 0x02
     f7e:	93 81       	ldd	r25, Z+3	; 0x03
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	30 e0       	ldi	r19, 0x00	; 0
     f84:	4a e7       	ldi	r20, 0x7A	; 122
     f86:	55 e4       	ldi	r21, 0x45	; 69
     f88:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
     f8c:	dc 01       	movw	r26, r24
     f8e:	cb 01       	movw	r24, r22
     f90:	f8 01       	movw	r30, r16
     f92:	80 83       	st	Z, r24
     f94:	91 83       	std	Z+1, r25	; 0x01
     f96:	a2 83       	std	Z+2, r26	; 0x02
     f98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     f9a:	ce 01       	movw	r24, r28
     f9c:	87 59       	subi	r24, 0x97	; 151
     f9e:	9f 4f       	sbci	r25, 0xFF	; 255
     fa0:	11 e0       	ldi	r17, 0x01	; 1
     fa2:	fc 01       	movw	r30, r24
     fa4:	60 81       	ld	r22, Z
     fa6:	71 81       	ldd	r23, Z+1	; 0x01
     fa8:	82 81       	ldd	r24, Z+2	; 0x02
     faa:	93 81       	ldd	r25, Z+3	; 0x03
     fac:	20 e0       	ldi	r18, 0x00	; 0
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	40 e8       	ldi	r20, 0x80	; 128
     fb2:	5f e3       	ldi	r21, 0x3F	; 63
     fb4:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
     fb8:	88 23       	and	r24, r24
     fba:	0c f0       	brlt	.+2      	; 0xfbe <__stack+0x75f>
     fbc:	10 e0       	ldi	r17, 0x00	; 0
     fbe:	11 23       	and	r17, r17
     fc0:	49 f0       	breq	.+18     	; 0xfd4 <__stack+0x775>
		__ticks = 1;
     fc2:	ce 01       	movw	r24, r28
     fc4:	83 59       	subi	r24, 0x93	; 147
     fc6:	9f 4f       	sbci	r25, 0xFF	; 255
     fc8:	21 e0       	ldi	r18, 0x01	; 1
     fca:	30 e0       	ldi	r19, 0x00	; 0
     fcc:	fc 01       	movw	r30, r24
     fce:	31 83       	std	Z+1, r19	; 0x01
     fd0:	20 83       	st	Z, r18
     fd2:	74 c0       	rjmp	.+232    	; 0x10bc <__stack+0x85d>
	else if (__tmp > 65535)
     fd4:	ce 01       	movw	r24, r28
     fd6:	87 59       	subi	r24, 0x97	; 151
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	11 e0       	ldi	r17, 0x01	; 1
     fdc:	fc 01       	movw	r30, r24
     fde:	60 81       	ld	r22, Z
     fe0:	71 81       	ldd	r23, Z+1	; 0x01
     fe2:	82 81       	ldd	r24, Z+2	; 0x02
     fe4:	93 81       	ldd	r25, Z+3	; 0x03
     fe6:	20 e0       	ldi	r18, 0x00	; 0
     fe8:	3f ef       	ldi	r19, 0xFF	; 255
     fea:	4f e7       	ldi	r20, 0x7F	; 127
     fec:	57 e4       	ldi	r21, 0x47	; 71
     fee:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     ff2:	18 16       	cp	r1, r24
     ff4:	0c f0       	brlt	.+2      	; 0xff8 <__stack+0x799>
     ff6:	10 e0       	ldi	r17, 0x00	; 0
     ff8:	11 23       	and	r17, r17
     ffa:	09 f4       	brne	.+2      	; 0xffe <__stack+0x79f>
     ffc:	4d c0       	rjmp	.+154    	; 0x1098 <__stack+0x839>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ffe:	ce 01       	movw	r24, r28
    1000:	8b 59       	subi	r24, 0x9B	; 155
    1002:	9f 4f       	sbci	r25, 0xFF	; 255
    1004:	fc 01       	movw	r30, r24
    1006:	60 81       	ld	r22, Z
    1008:	71 81       	ldd	r23, Z+1	; 0x01
    100a:	82 81       	ldd	r24, Z+2	; 0x02
    100c:	93 81       	ldd	r25, Z+3	; 0x03
    100e:	20 e0       	ldi	r18, 0x00	; 0
    1010:	30 e0       	ldi	r19, 0x00	; 0
    1012:	40 e2       	ldi	r20, 0x20	; 32
    1014:	51 e4       	ldi	r21, 0x41	; 65
    1016:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    101a:	dc 01       	movw	r26, r24
    101c:	cb 01       	movw	r24, r22
    101e:	8e 01       	movw	r16, r28
    1020:	03 59       	subi	r16, 0x93	; 147
    1022:	1f 4f       	sbci	r17, 0xFF	; 255
    1024:	bc 01       	movw	r22, r24
    1026:	cd 01       	movw	r24, r26
    1028:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    102c:	dc 01       	movw	r26, r24
    102e:	cb 01       	movw	r24, r22
    1030:	f8 01       	movw	r30, r16
    1032:	91 83       	std	Z+1, r25	; 0x01
    1034:	80 83       	st	Z, r24
    1036:	27 c0       	rjmp	.+78     	; 0x1086 <__stack+0x827>
    1038:	ce 01       	movw	r24, r28
    103a:	81 59       	subi	r24, 0x91	; 145
    103c:	9f 4f       	sbci	r25, 0xFF	; 255
    103e:	20 e9       	ldi	r18, 0x90	; 144
    1040:	31 e0       	ldi	r19, 0x01	; 1
    1042:	fc 01       	movw	r30, r24
    1044:	31 83       	std	Z+1, r19	; 0x01
    1046:	20 83       	st	Z, r18
    1048:	ce 01       	movw	r24, r28
    104a:	81 59       	subi	r24, 0x91	; 145
    104c:	9f 4f       	sbci	r25, 0xFF	; 255
    104e:	fc 01       	movw	r30, r24
    1050:	80 81       	ld	r24, Z
    1052:	91 81       	ldd	r25, Z+1	; 0x01
    1054:	8c 01       	movw	r16, r24
    1056:	c8 01       	movw	r24, r16
    1058:	01 97       	sbiw	r24, 0x01	; 1
    105a:	f1 f7       	brne	.-4      	; 0x1058 <__stack+0x7f9>
    105c:	8c 01       	movw	r16, r24
    105e:	ce 01       	movw	r24, r28
    1060:	81 59       	subi	r24, 0x91	; 145
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	fc 01       	movw	r30, r24
    1066:	11 83       	std	Z+1, r17	; 0x01
    1068:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    106a:	ce 01       	movw	r24, r28
    106c:	83 59       	subi	r24, 0x93	; 147
    106e:	9f 4f       	sbci	r25, 0xFF	; 255
    1070:	9e 01       	movw	r18, r28
    1072:	23 59       	subi	r18, 0x93	; 147
    1074:	3f 4f       	sbci	r19, 0xFF	; 255
    1076:	f9 01       	movw	r30, r18
    1078:	20 81       	ld	r18, Z
    107a:	31 81       	ldd	r19, Z+1	; 0x01
    107c:	21 50       	subi	r18, 0x01	; 1
    107e:	30 40       	sbci	r19, 0x00	; 0
    1080:	fc 01       	movw	r30, r24
    1082:	31 83       	std	Z+1, r19	; 0x01
    1084:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1086:	ce 01       	movw	r24, r28
    1088:	83 59       	subi	r24, 0x93	; 147
    108a:	9f 4f       	sbci	r25, 0xFF	; 255
    108c:	fc 01       	movw	r30, r24
    108e:	80 81       	ld	r24, Z
    1090:	91 81       	ldd	r25, Z+1	; 0x01
    1092:	00 97       	sbiw	r24, 0x00	; 0
    1094:	89 f6       	brne	.-94     	; 0x1038 <__stack+0x7d9>
    1096:	2f c0       	rjmp	.+94     	; 0x10f6 <__stack+0x897>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1098:	8e 01       	movw	r16, r28
    109a:	03 59       	subi	r16, 0x93	; 147
    109c:	1f 4f       	sbci	r17, 0xFF	; 255
    109e:	ce 01       	movw	r24, r28
    10a0:	87 59       	subi	r24, 0x97	; 151
    10a2:	9f 4f       	sbci	r25, 0xFF	; 255
    10a4:	fc 01       	movw	r30, r24
    10a6:	60 81       	ld	r22, Z
    10a8:	71 81       	ldd	r23, Z+1	; 0x01
    10aa:	82 81       	ldd	r24, Z+2	; 0x02
    10ac:	93 81       	ldd	r25, Z+3	; 0x03
    10ae:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    10b2:	dc 01       	movw	r26, r24
    10b4:	cb 01       	movw	r24, r22
    10b6:	f8 01       	movw	r30, r16
    10b8:	91 83       	std	Z+1, r25	; 0x01
    10ba:	80 83       	st	Z, r24
    10bc:	ce 01       	movw	r24, r28
    10be:	8f 58       	subi	r24, 0x8F	; 143
    10c0:	9f 4f       	sbci	r25, 0xFF	; 255
    10c2:	9e 01       	movw	r18, r28
    10c4:	23 59       	subi	r18, 0x93	; 147
    10c6:	3f 4f       	sbci	r19, 0xFF	; 255
    10c8:	f9 01       	movw	r30, r18
    10ca:	20 81       	ld	r18, Z
    10cc:	31 81       	ldd	r19, Z+1	; 0x01
    10ce:	fc 01       	movw	r30, r24
    10d0:	31 83       	std	Z+1, r19	; 0x01
    10d2:	20 83       	st	Z, r18
    10d4:	ce 01       	movw	r24, r28
    10d6:	8f 58       	subi	r24, 0x8F	; 143
    10d8:	9f 4f       	sbci	r25, 0xFF	; 255
    10da:	fc 01       	movw	r30, r24
    10dc:	80 81       	ld	r24, Z
    10de:	91 81       	ldd	r25, Z+1	; 0x01
    10e0:	8c 01       	movw	r16, r24
    10e2:	c8 01       	movw	r24, r16
    10e4:	01 97       	sbiw	r24, 0x01	; 1
    10e6:	f1 f7       	brne	.-4      	; 0x10e4 <__stack+0x885>
    10e8:	8c 01       	movw	r16, r24
    10ea:	ce 01       	movw	r24, r28
    10ec:	8f 58       	subi	r24, 0x8F	; 143
    10ee:	9f 4f       	sbci	r25, 0xFF	; 255
    10f0:	fc 01       	movw	r30, r24
    10f2:	11 83       	std	Z+1, r17	; 0x01
    10f4:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0b00000001);
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    10fc:	9e 01       	movw	r18, r28
    10fe:	2d 58       	subi	r18, 0x8D	; 141
    1100:	3f 4f       	sbci	r19, 0xFF	; 255
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	90 e0       	ldi	r25, 0x00	; 0
    1106:	a0 ea       	ldi	r26, 0xA0	; 160
    1108:	b0 e4       	ldi	r27, 0x40	; 64
    110a:	f9 01       	movw	r30, r18
    110c:	80 83       	st	Z, r24
    110e:	91 83       	std	Z+1, r25	; 0x01
    1110:	a2 83       	std	Z+2, r26	; 0x02
    1112:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1114:	8e 01       	movw	r16, r28
    1116:	09 58       	subi	r16, 0x89	; 137
    1118:	1f 4f       	sbci	r17, 0xFF	; 255
    111a:	ce 01       	movw	r24, r28
    111c:	8d 58       	subi	r24, 0x8D	; 141
    111e:	9f 4f       	sbci	r25, 0xFF	; 255
    1120:	fc 01       	movw	r30, r24
    1122:	60 81       	ld	r22, Z
    1124:	71 81       	ldd	r23, Z+1	; 0x01
    1126:	82 81       	ldd	r24, Z+2	; 0x02
    1128:	93 81       	ldd	r25, Z+3	; 0x03
    112a:	20 e0       	ldi	r18, 0x00	; 0
    112c:	30 e0       	ldi	r19, 0x00	; 0
    112e:	4a e7       	ldi	r20, 0x7A	; 122
    1130:	55 e4       	ldi	r21, 0x45	; 69
    1132:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1136:	dc 01       	movw	r26, r24
    1138:	cb 01       	movw	r24, r22
    113a:	f8 01       	movw	r30, r16
    113c:	80 83       	st	Z, r24
    113e:	91 83       	std	Z+1, r25	; 0x01
    1140:	a2 83       	std	Z+2, r26	; 0x02
    1142:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1144:	ce 01       	movw	r24, r28
    1146:	89 58       	subi	r24, 0x89	; 137
    1148:	9f 4f       	sbci	r25, 0xFF	; 255
    114a:	11 e0       	ldi	r17, 0x01	; 1
    114c:	fc 01       	movw	r30, r24
    114e:	60 81       	ld	r22, Z
    1150:	71 81       	ldd	r23, Z+1	; 0x01
    1152:	82 81       	ldd	r24, Z+2	; 0x02
    1154:	93 81       	ldd	r25, Z+3	; 0x03
    1156:	20 e0       	ldi	r18, 0x00	; 0
    1158:	30 e0       	ldi	r19, 0x00	; 0
    115a:	40 e8       	ldi	r20, 0x80	; 128
    115c:	5f e3       	ldi	r21, 0x3F	; 63
    115e:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    1162:	88 23       	and	r24, r24
    1164:	0c f0       	brlt	.+2      	; 0x1168 <__stack+0x909>
    1166:	10 e0       	ldi	r17, 0x00	; 0
    1168:	11 23       	and	r17, r17
    116a:	49 f0       	breq	.+18     	; 0x117e <__stack+0x91f>
		__ticks = 1;
    116c:	ce 01       	movw	r24, r28
    116e:	85 58       	subi	r24, 0x85	; 133
    1170:	9f 4f       	sbci	r25, 0xFF	; 255
    1172:	21 e0       	ldi	r18, 0x01	; 1
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	fc 01       	movw	r30, r24
    1178:	31 83       	std	Z+1, r19	; 0x01
    117a:	20 83       	st	Z, r18
    117c:	74 c0       	rjmp	.+232    	; 0x1266 <__stack+0xa07>
	else if (__tmp > 65535)
    117e:	ce 01       	movw	r24, r28
    1180:	89 58       	subi	r24, 0x89	; 137
    1182:	9f 4f       	sbci	r25, 0xFF	; 255
    1184:	11 e0       	ldi	r17, 0x01	; 1
    1186:	fc 01       	movw	r30, r24
    1188:	60 81       	ld	r22, Z
    118a:	71 81       	ldd	r23, Z+1	; 0x01
    118c:	82 81       	ldd	r24, Z+2	; 0x02
    118e:	93 81       	ldd	r25, Z+3	; 0x03
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	3f ef       	ldi	r19, 0xFF	; 255
    1194:	4f e7       	ldi	r20, 0x7F	; 127
    1196:	57 e4       	ldi	r21, 0x47	; 71
    1198:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    119c:	18 16       	cp	r1, r24
    119e:	0c f0       	brlt	.+2      	; 0x11a2 <__stack+0x943>
    11a0:	10 e0       	ldi	r17, 0x00	; 0
    11a2:	11 23       	and	r17, r17
    11a4:	09 f4       	brne	.+2      	; 0x11a8 <__stack+0x949>
    11a6:	4d c0       	rjmp	.+154    	; 0x1242 <__stack+0x9e3>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11a8:	ce 01       	movw	r24, r28
    11aa:	8d 58       	subi	r24, 0x8D	; 141
    11ac:	9f 4f       	sbci	r25, 0xFF	; 255
    11ae:	fc 01       	movw	r30, r24
    11b0:	60 81       	ld	r22, Z
    11b2:	71 81       	ldd	r23, Z+1	; 0x01
    11b4:	82 81       	ldd	r24, Z+2	; 0x02
    11b6:	93 81       	ldd	r25, Z+3	; 0x03
    11b8:	20 e0       	ldi	r18, 0x00	; 0
    11ba:	30 e0       	ldi	r19, 0x00	; 0
    11bc:	40 e2       	ldi	r20, 0x20	; 32
    11be:	51 e4       	ldi	r21, 0x41	; 65
    11c0:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    11c4:	dc 01       	movw	r26, r24
    11c6:	cb 01       	movw	r24, r22
    11c8:	8e 01       	movw	r16, r28
    11ca:	05 58       	subi	r16, 0x85	; 133
    11cc:	1f 4f       	sbci	r17, 0xFF	; 255
    11ce:	bc 01       	movw	r22, r24
    11d0:	cd 01       	movw	r24, r26
    11d2:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	f8 01       	movw	r30, r16
    11dc:	91 83       	std	Z+1, r25	; 0x01
    11de:	80 83       	st	Z, r24
    11e0:	27 c0       	rjmp	.+78     	; 0x1230 <__stack+0x9d1>
    11e2:	ce 01       	movw	r24, r28
    11e4:	83 58       	subi	r24, 0x83	; 131
    11e6:	9f 4f       	sbci	r25, 0xFF	; 255
    11e8:	20 e9       	ldi	r18, 0x90	; 144
    11ea:	31 e0       	ldi	r19, 0x01	; 1
    11ec:	fc 01       	movw	r30, r24
    11ee:	31 83       	std	Z+1, r19	; 0x01
    11f0:	20 83       	st	Z, r18
    11f2:	ce 01       	movw	r24, r28
    11f4:	83 58       	subi	r24, 0x83	; 131
    11f6:	9f 4f       	sbci	r25, 0xFF	; 255
    11f8:	fc 01       	movw	r30, r24
    11fa:	80 81       	ld	r24, Z
    11fc:	91 81       	ldd	r25, Z+1	; 0x01
    11fe:	8c 01       	movw	r16, r24
    1200:	c8 01       	movw	r24, r16
    1202:	01 97       	sbiw	r24, 0x01	; 1
    1204:	f1 f7       	brne	.-4      	; 0x1202 <__stack+0x9a3>
    1206:	8c 01       	movw	r16, r24
    1208:	ce 01       	movw	r24, r28
    120a:	83 58       	subi	r24, 0x83	; 131
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	fc 01       	movw	r30, r24
    1210:	11 83       	std	Z+1, r17	; 0x01
    1212:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1214:	ce 01       	movw	r24, r28
    1216:	85 58       	subi	r24, 0x85	; 133
    1218:	9f 4f       	sbci	r25, 0xFF	; 255
    121a:	9e 01       	movw	r18, r28
    121c:	25 58       	subi	r18, 0x85	; 133
    121e:	3f 4f       	sbci	r19, 0xFF	; 255
    1220:	f9 01       	movw	r30, r18
    1222:	20 81       	ld	r18, Z
    1224:	31 81       	ldd	r19, Z+1	; 0x01
    1226:	21 50       	subi	r18, 0x01	; 1
    1228:	30 40       	sbci	r19, 0x00	; 0
    122a:	fc 01       	movw	r30, r24
    122c:	31 83       	std	Z+1, r19	; 0x01
    122e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1230:	ce 01       	movw	r24, r28
    1232:	85 58       	subi	r24, 0x85	; 133
    1234:	9f 4f       	sbci	r25, 0xFF	; 255
    1236:	fc 01       	movw	r30, r24
    1238:	80 81       	ld	r24, Z
    123a:	91 81       	ldd	r25, Z+1	; 0x01
    123c:	00 97       	sbiw	r24, 0x00	; 0
    123e:	89 f6       	brne	.-94     	; 0x11e2 <__stack+0x983>
    1240:	2f c0       	rjmp	.+94     	; 0x12a0 <__stack+0xa41>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1242:	8e 01       	movw	r16, r28
    1244:	05 58       	subi	r16, 0x85	; 133
    1246:	1f 4f       	sbci	r17, 0xFF	; 255
    1248:	ce 01       	movw	r24, r28
    124a:	89 58       	subi	r24, 0x89	; 137
    124c:	9f 4f       	sbci	r25, 0xFF	; 255
    124e:	fc 01       	movw	r30, r24
    1250:	60 81       	ld	r22, Z
    1252:	71 81       	ldd	r23, Z+1	; 0x01
    1254:	82 81       	ldd	r24, Z+2	; 0x02
    1256:	93 81       	ldd	r25, Z+3	; 0x03
    1258:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    125c:	dc 01       	movw	r26, r24
    125e:	cb 01       	movw	r24, r22
    1260:	f8 01       	movw	r30, r16
    1262:	91 83       	std	Z+1, r25	; 0x01
    1264:	80 83       	st	Z, r24
    1266:	ce 01       	movw	r24, r28
    1268:	81 58       	subi	r24, 0x81	; 129
    126a:	9f 4f       	sbci	r25, 0xFF	; 255
    126c:	9e 01       	movw	r18, r28
    126e:	25 58       	subi	r18, 0x85	; 133
    1270:	3f 4f       	sbci	r19, 0xFF	; 255
    1272:	f9 01       	movw	r30, r18
    1274:	20 81       	ld	r18, Z
    1276:	31 81       	ldd	r19, Z+1	; 0x01
    1278:	fc 01       	movw	r30, r24
    127a:	31 83       	std	Z+1, r19	; 0x01
    127c:	20 83       	st	Z, r18
    127e:	ce 01       	movw	r24, r28
    1280:	81 58       	subi	r24, 0x81	; 129
    1282:	9f 4f       	sbci	r25, 0xFF	; 255
    1284:	fc 01       	movw	r30, r24
    1286:	80 81       	ld	r24, Z
    1288:	91 81       	ldd	r25, Z+1	; 0x01
    128a:	8c 01       	movw	r16, r24
    128c:	c8 01       	movw	r24, r16
    128e:	01 97       	sbiw	r24, 0x01	; 1
    1290:	f1 f7       	brne	.-4      	; 0x128e <__stack+0xa2f>
    1292:	8c 01       	movw	r16, r24
    1294:	ce 01       	movw	r24, r28
    1296:	81 58       	subi	r24, 0x81	; 129
    1298:	9f 4f       	sbci	r25, 0xFF	; 255
    129a:	fc 01       	movw	r30, r24
    129c:	11 83       	std	Z+1, r17	; 0x01
    129e:	00 83       	st	Z, r16
	_delay_ms(5);
	
	wyslijComend(0b00000000);
    12a0:	80 e0       	ldi	r24, 0x00	; 0
    12a2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    12a6:	9e 01       	movw	r18, r28
    12a8:	2f 57       	subi	r18, 0x7F	; 127
    12aa:	3f 4f       	sbci	r19, 0xFF	; 255
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	a0 ea       	ldi	r26, 0xA0	; 160
    12b2:	b0 e4       	ldi	r27, 0x40	; 64
    12b4:	f9 01       	movw	r30, r18
    12b6:	80 83       	st	Z, r24
    12b8:	91 83       	std	Z+1, r25	; 0x01
    12ba:	a2 83       	std	Z+2, r26	; 0x02
    12bc:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    12be:	8e 01       	movw	r16, r28
    12c0:	0b 57       	subi	r16, 0x7B	; 123
    12c2:	1f 4f       	sbci	r17, 0xFF	; 255
    12c4:	ce 01       	movw	r24, r28
    12c6:	8f 57       	subi	r24, 0x7F	; 127
    12c8:	9f 4f       	sbci	r25, 0xFF	; 255
    12ca:	fc 01       	movw	r30, r24
    12cc:	60 81       	ld	r22, Z
    12ce:	71 81       	ldd	r23, Z+1	; 0x01
    12d0:	82 81       	ldd	r24, Z+2	; 0x02
    12d2:	93 81       	ldd	r25, Z+3	; 0x03
    12d4:	20 e0       	ldi	r18, 0x00	; 0
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	4a e7       	ldi	r20, 0x7A	; 122
    12da:	55 e4       	ldi	r21, 0x45	; 69
    12dc:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    12e0:	dc 01       	movw	r26, r24
    12e2:	cb 01       	movw	r24, r22
    12e4:	f8 01       	movw	r30, r16
    12e6:	80 83       	st	Z, r24
    12e8:	91 83       	std	Z+1, r25	; 0x01
    12ea:	a2 83       	std	Z+2, r26	; 0x02
    12ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12ee:	ce 01       	movw	r24, r28
    12f0:	8b 57       	subi	r24, 0x7B	; 123
    12f2:	9f 4f       	sbci	r25, 0xFF	; 255
    12f4:	11 e0       	ldi	r17, 0x01	; 1
    12f6:	fc 01       	movw	r30, r24
    12f8:	60 81       	ld	r22, Z
    12fa:	71 81       	ldd	r23, Z+1	; 0x01
    12fc:	82 81       	ldd	r24, Z+2	; 0x02
    12fe:	93 81       	ldd	r25, Z+3	; 0x03
    1300:	20 e0       	ldi	r18, 0x00	; 0
    1302:	30 e0       	ldi	r19, 0x00	; 0
    1304:	40 e8       	ldi	r20, 0x80	; 128
    1306:	5f e3       	ldi	r21, 0x3F	; 63
    1308:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    130c:	88 23       	and	r24, r24
    130e:	0c f0       	brlt	.+2      	; 0x1312 <__stack+0xab3>
    1310:	10 e0       	ldi	r17, 0x00	; 0
    1312:	11 23       	and	r17, r17
    1314:	49 f0       	breq	.+18     	; 0x1328 <__stack+0xac9>
		__ticks = 1;
    1316:	ce 01       	movw	r24, r28
    1318:	87 57       	subi	r24, 0x77	; 119
    131a:	9f 4f       	sbci	r25, 0xFF	; 255
    131c:	21 e0       	ldi	r18, 0x01	; 1
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	fc 01       	movw	r30, r24
    1322:	31 83       	std	Z+1, r19	; 0x01
    1324:	20 83       	st	Z, r18
    1326:	74 c0       	rjmp	.+232    	; 0x1410 <__stack+0xbb1>
	else if (__tmp > 65535)
    1328:	ce 01       	movw	r24, r28
    132a:	8b 57       	subi	r24, 0x7B	; 123
    132c:	9f 4f       	sbci	r25, 0xFF	; 255
    132e:	11 e0       	ldi	r17, 0x01	; 1
    1330:	fc 01       	movw	r30, r24
    1332:	60 81       	ld	r22, Z
    1334:	71 81       	ldd	r23, Z+1	; 0x01
    1336:	82 81       	ldd	r24, Z+2	; 0x02
    1338:	93 81       	ldd	r25, Z+3	; 0x03
    133a:	20 e0       	ldi	r18, 0x00	; 0
    133c:	3f ef       	ldi	r19, 0xFF	; 255
    133e:	4f e7       	ldi	r20, 0x7F	; 127
    1340:	57 e4       	ldi	r21, 0x47	; 71
    1342:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    1346:	18 16       	cp	r1, r24
    1348:	0c f0       	brlt	.+2      	; 0x134c <__stack+0xaed>
    134a:	10 e0       	ldi	r17, 0x00	; 0
    134c:	11 23       	and	r17, r17
    134e:	09 f4       	brne	.+2      	; 0x1352 <__stack+0xaf3>
    1350:	4d c0       	rjmp	.+154    	; 0x13ec <__stack+0xb8d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1352:	ce 01       	movw	r24, r28
    1354:	8f 57       	subi	r24, 0x7F	; 127
    1356:	9f 4f       	sbci	r25, 0xFF	; 255
    1358:	fc 01       	movw	r30, r24
    135a:	60 81       	ld	r22, Z
    135c:	71 81       	ldd	r23, Z+1	; 0x01
    135e:	82 81       	ldd	r24, Z+2	; 0x02
    1360:	93 81       	ldd	r25, Z+3	; 0x03
    1362:	20 e0       	ldi	r18, 0x00	; 0
    1364:	30 e0       	ldi	r19, 0x00	; 0
    1366:	40 e2       	ldi	r20, 0x20	; 32
    1368:	51 e4       	ldi	r21, 0x41	; 65
    136a:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    136e:	dc 01       	movw	r26, r24
    1370:	cb 01       	movw	r24, r22
    1372:	8e 01       	movw	r16, r28
    1374:	07 57       	subi	r16, 0x77	; 119
    1376:	1f 4f       	sbci	r17, 0xFF	; 255
    1378:	bc 01       	movw	r22, r24
    137a:	cd 01       	movw	r24, r26
    137c:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1380:	dc 01       	movw	r26, r24
    1382:	cb 01       	movw	r24, r22
    1384:	f8 01       	movw	r30, r16
    1386:	91 83       	std	Z+1, r25	; 0x01
    1388:	80 83       	st	Z, r24
    138a:	27 c0       	rjmp	.+78     	; 0x13da <__stack+0xb7b>
    138c:	ce 01       	movw	r24, r28
    138e:	85 57       	subi	r24, 0x75	; 117
    1390:	9f 4f       	sbci	r25, 0xFF	; 255
    1392:	20 e9       	ldi	r18, 0x90	; 144
    1394:	31 e0       	ldi	r19, 0x01	; 1
    1396:	fc 01       	movw	r30, r24
    1398:	31 83       	std	Z+1, r19	; 0x01
    139a:	20 83       	st	Z, r18
    139c:	ce 01       	movw	r24, r28
    139e:	85 57       	subi	r24, 0x75	; 117
    13a0:	9f 4f       	sbci	r25, 0xFF	; 255
    13a2:	fc 01       	movw	r30, r24
    13a4:	80 81       	ld	r24, Z
    13a6:	91 81       	ldd	r25, Z+1	; 0x01
    13a8:	8c 01       	movw	r16, r24
    13aa:	c8 01       	movw	r24, r16
    13ac:	01 97       	sbiw	r24, 0x01	; 1
    13ae:	f1 f7       	brne	.-4      	; 0x13ac <__stack+0xb4d>
    13b0:	8c 01       	movw	r16, r24
    13b2:	ce 01       	movw	r24, r28
    13b4:	85 57       	subi	r24, 0x75	; 117
    13b6:	9f 4f       	sbci	r25, 0xFF	; 255
    13b8:	fc 01       	movw	r30, r24
    13ba:	11 83       	std	Z+1, r17	; 0x01
    13bc:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13be:	ce 01       	movw	r24, r28
    13c0:	87 57       	subi	r24, 0x77	; 119
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	9e 01       	movw	r18, r28
    13c6:	27 57       	subi	r18, 0x77	; 119
    13c8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ca:	f9 01       	movw	r30, r18
    13cc:	20 81       	ld	r18, Z
    13ce:	31 81       	ldd	r19, Z+1	; 0x01
    13d0:	21 50       	subi	r18, 0x01	; 1
    13d2:	30 40       	sbci	r19, 0x00	; 0
    13d4:	fc 01       	movw	r30, r24
    13d6:	31 83       	std	Z+1, r19	; 0x01
    13d8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13da:	ce 01       	movw	r24, r28
    13dc:	87 57       	subi	r24, 0x77	; 119
    13de:	9f 4f       	sbci	r25, 0xFF	; 255
    13e0:	fc 01       	movw	r30, r24
    13e2:	80 81       	ld	r24, Z
    13e4:	91 81       	ldd	r25, Z+1	; 0x01
    13e6:	00 97       	sbiw	r24, 0x00	; 0
    13e8:	89 f6       	brne	.-94     	; 0x138c <__stack+0xb2d>
    13ea:	2f c0       	rjmp	.+94     	; 0x144a <__stack+0xbeb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13ec:	8e 01       	movw	r16, r28
    13ee:	07 57       	subi	r16, 0x77	; 119
    13f0:	1f 4f       	sbci	r17, 0xFF	; 255
    13f2:	ce 01       	movw	r24, r28
    13f4:	8b 57       	subi	r24, 0x7B	; 123
    13f6:	9f 4f       	sbci	r25, 0xFF	; 255
    13f8:	fc 01       	movw	r30, r24
    13fa:	60 81       	ld	r22, Z
    13fc:	71 81       	ldd	r23, Z+1	; 0x01
    13fe:	82 81       	ldd	r24, Z+2	; 0x02
    1400:	93 81       	ldd	r25, Z+3	; 0x03
    1402:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1406:	dc 01       	movw	r26, r24
    1408:	cb 01       	movw	r24, r22
    140a:	f8 01       	movw	r30, r16
    140c:	91 83       	std	Z+1, r25	; 0x01
    140e:	80 83       	st	Z, r24
    1410:	ce 01       	movw	r24, r28
    1412:	83 57       	subi	r24, 0x73	; 115
    1414:	9f 4f       	sbci	r25, 0xFF	; 255
    1416:	9e 01       	movw	r18, r28
    1418:	27 57       	subi	r18, 0x77	; 119
    141a:	3f 4f       	sbci	r19, 0xFF	; 255
    141c:	f9 01       	movw	r30, r18
    141e:	20 81       	ld	r18, Z
    1420:	31 81       	ldd	r19, Z+1	; 0x01
    1422:	fc 01       	movw	r30, r24
    1424:	31 83       	std	Z+1, r19	; 0x01
    1426:	20 83       	st	Z, r18
    1428:	ce 01       	movw	r24, r28
    142a:	83 57       	subi	r24, 0x73	; 115
    142c:	9f 4f       	sbci	r25, 0xFF	; 255
    142e:	fc 01       	movw	r30, r24
    1430:	80 81       	ld	r24, Z
    1432:	91 81       	ldd	r25, Z+1	; 0x01
    1434:	8c 01       	movw	r16, r24
    1436:	c8 01       	movw	r24, r16
    1438:	01 97       	sbiw	r24, 0x01	; 1
    143a:	f1 f7       	brne	.-4      	; 0x1438 <__stack+0xbd9>
    143c:	8c 01       	movw	r16, r24
    143e:	ce 01       	movw	r24, r28
    1440:	83 57       	subi	r24, 0x73	; 115
    1442:	9f 4f       	sbci	r25, 0xFF	; 255
    1444:	fc 01       	movw	r30, r24
    1446:	11 83       	std	Z+1, r17	; 0x01
    1448:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0b00000110);
    144a:	86 e0       	ldi	r24, 0x06	; 6
    144c:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    1450:	9e 01       	movw	r18, r28
    1452:	21 57       	subi	r18, 0x71	; 113
    1454:	3f 4f       	sbci	r19, 0xFF	; 255
    1456:	80 e0       	ldi	r24, 0x00	; 0
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	a0 ea       	ldi	r26, 0xA0	; 160
    145c:	b0 e4       	ldi	r27, 0x40	; 64
    145e:	f9 01       	movw	r30, r18
    1460:	80 83       	st	Z, r24
    1462:	91 83       	std	Z+1, r25	; 0x01
    1464:	a2 83       	std	Z+2, r26	; 0x02
    1466:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1468:	8e 01       	movw	r16, r28
    146a:	0d 56       	subi	r16, 0x6D	; 109
    146c:	1f 4f       	sbci	r17, 0xFF	; 255
    146e:	ce 01       	movw	r24, r28
    1470:	81 57       	subi	r24, 0x71	; 113
    1472:	9f 4f       	sbci	r25, 0xFF	; 255
    1474:	fc 01       	movw	r30, r24
    1476:	60 81       	ld	r22, Z
    1478:	71 81       	ldd	r23, Z+1	; 0x01
    147a:	82 81       	ldd	r24, Z+2	; 0x02
    147c:	93 81       	ldd	r25, Z+3	; 0x03
    147e:	20 e0       	ldi	r18, 0x00	; 0
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	4a e7       	ldi	r20, 0x7A	; 122
    1484:	55 e4       	ldi	r21, 0x45	; 69
    1486:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    148a:	dc 01       	movw	r26, r24
    148c:	cb 01       	movw	r24, r22
    148e:	f8 01       	movw	r30, r16
    1490:	80 83       	st	Z, r24
    1492:	91 83       	std	Z+1, r25	; 0x01
    1494:	a2 83       	std	Z+2, r26	; 0x02
    1496:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1498:	ce 01       	movw	r24, r28
    149a:	8d 56       	subi	r24, 0x6D	; 109
    149c:	9f 4f       	sbci	r25, 0xFF	; 255
    149e:	11 e0       	ldi	r17, 0x01	; 1
    14a0:	fc 01       	movw	r30, r24
    14a2:	60 81       	ld	r22, Z
    14a4:	71 81       	ldd	r23, Z+1	; 0x01
    14a6:	82 81       	ldd	r24, Z+2	; 0x02
    14a8:	93 81       	ldd	r25, Z+3	; 0x03
    14aa:	20 e0       	ldi	r18, 0x00	; 0
    14ac:	30 e0       	ldi	r19, 0x00	; 0
    14ae:	40 e8       	ldi	r20, 0x80	; 128
    14b0:	5f e3       	ldi	r21, 0x3F	; 63
    14b2:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    14b6:	88 23       	and	r24, r24
    14b8:	0c f0       	brlt	.+2      	; 0x14bc <__stack+0xc5d>
    14ba:	10 e0       	ldi	r17, 0x00	; 0
    14bc:	11 23       	and	r17, r17
    14be:	49 f0       	breq	.+18     	; 0x14d2 <__stack+0xc73>
		__ticks = 1;
    14c0:	ce 01       	movw	r24, r28
    14c2:	89 56       	subi	r24, 0x69	; 105
    14c4:	9f 4f       	sbci	r25, 0xFF	; 255
    14c6:	21 e0       	ldi	r18, 0x01	; 1
    14c8:	30 e0       	ldi	r19, 0x00	; 0
    14ca:	fc 01       	movw	r30, r24
    14cc:	31 83       	std	Z+1, r19	; 0x01
    14ce:	20 83       	st	Z, r18
    14d0:	74 c0       	rjmp	.+232    	; 0x15ba <__stack+0xd5b>
	else if (__tmp > 65535)
    14d2:	ce 01       	movw	r24, r28
    14d4:	8d 56       	subi	r24, 0x6D	; 109
    14d6:	9f 4f       	sbci	r25, 0xFF	; 255
    14d8:	11 e0       	ldi	r17, 0x01	; 1
    14da:	fc 01       	movw	r30, r24
    14dc:	60 81       	ld	r22, Z
    14de:	71 81       	ldd	r23, Z+1	; 0x01
    14e0:	82 81       	ldd	r24, Z+2	; 0x02
    14e2:	93 81       	ldd	r25, Z+3	; 0x03
    14e4:	20 e0       	ldi	r18, 0x00	; 0
    14e6:	3f ef       	ldi	r19, 0xFF	; 255
    14e8:	4f e7       	ldi	r20, 0x7F	; 127
    14ea:	57 e4       	ldi	r21, 0x47	; 71
    14ec:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    14f0:	18 16       	cp	r1, r24
    14f2:	0c f0       	brlt	.+2      	; 0x14f6 <__stack+0xc97>
    14f4:	10 e0       	ldi	r17, 0x00	; 0
    14f6:	11 23       	and	r17, r17
    14f8:	09 f4       	brne	.+2      	; 0x14fc <__stack+0xc9d>
    14fa:	4d c0       	rjmp	.+154    	; 0x1596 <__stack+0xd37>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14fc:	ce 01       	movw	r24, r28
    14fe:	81 57       	subi	r24, 0x71	; 113
    1500:	9f 4f       	sbci	r25, 0xFF	; 255
    1502:	fc 01       	movw	r30, r24
    1504:	60 81       	ld	r22, Z
    1506:	71 81       	ldd	r23, Z+1	; 0x01
    1508:	82 81       	ldd	r24, Z+2	; 0x02
    150a:	93 81       	ldd	r25, Z+3	; 0x03
    150c:	20 e0       	ldi	r18, 0x00	; 0
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	40 e2       	ldi	r20, 0x20	; 32
    1512:	51 e4       	ldi	r21, 0x41	; 65
    1514:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1518:	dc 01       	movw	r26, r24
    151a:	cb 01       	movw	r24, r22
    151c:	8e 01       	movw	r16, r28
    151e:	09 56       	subi	r16, 0x69	; 105
    1520:	1f 4f       	sbci	r17, 0xFF	; 255
    1522:	bc 01       	movw	r22, r24
    1524:	cd 01       	movw	r24, r26
    1526:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    152a:	dc 01       	movw	r26, r24
    152c:	cb 01       	movw	r24, r22
    152e:	f8 01       	movw	r30, r16
    1530:	91 83       	std	Z+1, r25	; 0x01
    1532:	80 83       	st	Z, r24
    1534:	27 c0       	rjmp	.+78     	; 0x1584 <__stack+0xd25>
    1536:	ce 01       	movw	r24, r28
    1538:	87 56       	subi	r24, 0x67	; 103
    153a:	9f 4f       	sbci	r25, 0xFF	; 255
    153c:	20 e9       	ldi	r18, 0x90	; 144
    153e:	31 e0       	ldi	r19, 0x01	; 1
    1540:	fc 01       	movw	r30, r24
    1542:	31 83       	std	Z+1, r19	; 0x01
    1544:	20 83       	st	Z, r18
    1546:	ce 01       	movw	r24, r28
    1548:	87 56       	subi	r24, 0x67	; 103
    154a:	9f 4f       	sbci	r25, 0xFF	; 255
    154c:	fc 01       	movw	r30, r24
    154e:	80 81       	ld	r24, Z
    1550:	91 81       	ldd	r25, Z+1	; 0x01
    1552:	8c 01       	movw	r16, r24
    1554:	c8 01       	movw	r24, r16
    1556:	01 97       	sbiw	r24, 0x01	; 1
    1558:	f1 f7       	brne	.-4      	; 0x1556 <__stack+0xcf7>
    155a:	8c 01       	movw	r16, r24
    155c:	ce 01       	movw	r24, r28
    155e:	87 56       	subi	r24, 0x67	; 103
    1560:	9f 4f       	sbci	r25, 0xFF	; 255
    1562:	fc 01       	movw	r30, r24
    1564:	11 83       	std	Z+1, r17	; 0x01
    1566:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1568:	ce 01       	movw	r24, r28
    156a:	89 56       	subi	r24, 0x69	; 105
    156c:	9f 4f       	sbci	r25, 0xFF	; 255
    156e:	9e 01       	movw	r18, r28
    1570:	29 56       	subi	r18, 0x69	; 105
    1572:	3f 4f       	sbci	r19, 0xFF	; 255
    1574:	f9 01       	movw	r30, r18
    1576:	20 81       	ld	r18, Z
    1578:	31 81       	ldd	r19, Z+1	; 0x01
    157a:	21 50       	subi	r18, 0x01	; 1
    157c:	30 40       	sbci	r19, 0x00	; 0
    157e:	fc 01       	movw	r30, r24
    1580:	31 83       	std	Z+1, r19	; 0x01
    1582:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1584:	ce 01       	movw	r24, r28
    1586:	89 56       	subi	r24, 0x69	; 105
    1588:	9f 4f       	sbci	r25, 0xFF	; 255
    158a:	fc 01       	movw	r30, r24
    158c:	80 81       	ld	r24, Z
    158e:	91 81       	ldd	r25, Z+1	; 0x01
    1590:	00 97       	sbiw	r24, 0x00	; 0
    1592:	89 f6       	brne	.-94     	; 0x1536 <__stack+0xcd7>
    1594:	2f c0       	rjmp	.+94     	; 0x15f4 <__stack+0xd95>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1596:	8e 01       	movw	r16, r28
    1598:	09 56       	subi	r16, 0x69	; 105
    159a:	1f 4f       	sbci	r17, 0xFF	; 255
    159c:	ce 01       	movw	r24, r28
    159e:	8d 56       	subi	r24, 0x6D	; 109
    15a0:	9f 4f       	sbci	r25, 0xFF	; 255
    15a2:	fc 01       	movw	r30, r24
    15a4:	60 81       	ld	r22, Z
    15a6:	71 81       	ldd	r23, Z+1	; 0x01
    15a8:	82 81       	ldd	r24, Z+2	; 0x02
    15aa:	93 81       	ldd	r25, Z+3	; 0x03
    15ac:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    15b0:	dc 01       	movw	r26, r24
    15b2:	cb 01       	movw	r24, r22
    15b4:	f8 01       	movw	r30, r16
    15b6:	91 83       	std	Z+1, r25	; 0x01
    15b8:	80 83       	st	Z, r24
    15ba:	ce 01       	movw	r24, r28
    15bc:	85 56       	subi	r24, 0x65	; 101
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	9e 01       	movw	r18, r28
    15c2:	29 56       	subi	r18, 0x69	; 105
    15c4:	3f 4f       	sbci	r19, 0xFF	; 255
    15c6:	f9 01       	movw	r30, r18
    15c8:	20 81       	ld	r18, Z
    15ca:	31 81       	ldd	r19, Z+1	; 0x01
    15cc:	fc 01       	movw	r30, r24
    15ce:	31 83       	std	Z+1, r19	; 0x01
    15d0:	20 83       	st	Z, r18
    15d2:	ce 01       	movw	r24, r28
    15d4:	85 56       	subi	r24, 0x65	; 101
    15d6:	9f 4f       	sbci	r25, 0xFF	; 255
    15d8:	fc 01       	movw	r30, r24
    15da:	80 81       	ld	r24, Z
    15dc:	91 81       	ldd	r25, Z+1	; 0x01
    15de:	8c 01       	movw	r16, r24
    15e0:	c8 01       	movw	r24, r16
    15e2:	01 97       	sbiw	r24, 0x01	; 1
    15e4:	f1 f7       	brne	.-4      	; 0x15e2 <__stack+0xd83>
    15e6:	8c 01       	movw	r16, r24
    15e8:	ce 01       	movw	r24, r28
    15ea:	85 56       	subi	r24, 0x65	; 101
    15ec:	9f 4f       	sbci	r25, 0xFF	; 255
    15ee:	fc 01       	movw	r30, r24
    15f0:	11 83       	std	Z+1, r17	; 0x01
    15f2:	00 83       	st	Z, r16
	_delay_ms(5);
	
	wyslijComend(0x00);
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    15fa:	9e 01       	movw	r18, r28
    15fc:	23 56       	subi	r18, 0x63	; 99
    15fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1600:	80 e0       	ldi	r24, 0x00	; 0
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	a0 ea       	ldi	r26, 0xA0	; 160
    1606:	b0 e4       	ldi	r27, 0x40	; 64
    1608:	f9 01       	movw	r30, r18
    160a:	80 83       	st	Z, r24
    160c:	91 83       	std	Z+1, r25	; 0x01
    160e:	a2 83       	std	Z+2, r26	; 0x02
    1610:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1612:	8e 01       	movw	r16, r28
    1614:	0f 55       	subi	r16, 0x5F	; 95
    1616:	1f 4f       	sbci	r17, 0xFF	; 255
    1618:	ce 01       	movw	r24, r28
    161a:	83 56       	subi	r24, 0x63	; 99
    161c:	9f 4f       	sbci	r25, 0xFF	; 255
    161e:	fc 01       	movw	r30, r24
    1620:	60 81       	ld	r22, Z
    1622:	71 81       	ldd	r23, Z+1	; 0x01
    1624:	82 81       	ldd	r24, Z+2	; 0x02
    1626:	93 81       	ldd	r25, Z+3	; 0x03
    1628:	20 e0       	ldi	r18, 0x00	; 0
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	4a e7       	ldi	r20, 0x7A	; 122
    162e:	55 e4       	ldi	r21, 0x45	; 69
    1630:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1634:	dc 01       	movw	r26, r24
    1636:	cb 01       	movw	r24, r22
    1638:	f8 01       	movw	r30, r16
    163a:	80 83       	st	Z, r24
    163c:	91 83       	std	Z+1, r25	; 0x01
    163e:	a2 83       	std	Z+2, r26	; 0x02
    1640:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1642:	ce 01       	movw	r24, r28
    1644:	8f 55       	subi	r24, 0x5F	; 95
    1646:	9f 4f       	sbci	r25, 0xFF	; 255
    1648:	11 e0       	ldi	r17, 0x01	; 1
    164a:	fc 01       	movw	r30, r24
    164c:	60 81       	ld	r22, Z
    164e:	71 81       	ldd	r23, Z+1	; 0x01
    1650:	82 81       	ldd	r24, Z+2	; 0x02
    1652:	93 81       	ldd	r25, Z+3	; 0x03
    1654:	20 e0       	ldi	r18, 0x00	; 0
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	40 e8       	ldi	r20, 0x80	; 128
    165a:	5f e3       	ldi	r21, 0x3F	; 63
    165c:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    1660:	88 23       	and	r24, r24
    1662:	0c f0       	brlt	.+2      	; 0x1666 <__stack+0xe07>
    1664:	10 e0       	ldi	r17, 0x00	; 0
    1666:	11 23       	and	r17, r17
    1668:	49 f0       	breq	.+18     	; 0x167c <__stack+0xe1d>
		__ticks = 1;
    166a:	ce 01       	movw	r24, r28
    166c:	8b 55       	subi	r24, 0x5B	; 91
    166e:	9f 4f       	sbci	r25, 0xFF	; 255
    1670:	21 e0       	ldi	r18, 0x01	; 1
    1672:	30 e0       	ldi	r19, 0x00	; 0
    1674:	fc 01       	movw	r30, r24
    1676:	31 83       	std	Z+1, r19	; 0x01
    1678:	20 83       	st	Z, r18
    167a:	74 c0       	rjmp	.+232    	; 0x1764 <__stack+0xf05>
	else if (__tmp > 65535)
    167c:	ce 01       	movw	r24, r28
    167e:	8f 55       	subi	r24, 0x5F	; 95
    1680:	9f 4f       	sbci	r25, 0xFF	; 255
    1682:	11 e0       	ldi	r17, 0x01	; 1
    1684:	fc 01       	movw	r30, r24
    1686:	60 81       	ld	r22, Z
    1688:	71 81       	ldd	r23, Z+1	; 0x01
    168a:	82 81       	ldd	r24, Z+2	; 0x02
    168c:	93 81       	ldd	r25, Z+3	; 0x03
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	3f ef       	ldi	r19, 0xFF	; 255
    1692:	4f e7       	ldi	r20, 0x7F	; 127
    1694:	57 e4       	ldi	r21, 0x47	; 71
    1696:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    169a:	18 16       	cp	r1, r24
    169c:	0c f0       	brlt	.+2      	; 0x16a0 <__stack+0xe41>
    169e:	10 e0       	ldi	r17, 0x00	; 0
    16a0:	11 23       	and	r17, r17
    16a2:	09 f4       	brne	.+2      	; 0x16a6 <__stack+0xe47>
    16a4:	4d c0       	rjmp	.+154    	; 0x1740 <__stack+0xee1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a6:	ce 01       	movw	r24, r28
    16a8:	83 56       	subi	r24, 0x63	; 99
    16aa:	9f 4f       	sbci	r25, 0xFF	; 255
    16ac:	fc 01       	movw	r30, r24
    16ae:	60 81       	ld	r22, Z
    16b0:	71 81       	ldd	r23, Z+1	; 0x01
    16b2:	82 81       	ldd	r24, Z+2	; 0x02
    16b4:	93 81       	ldd	r25, Z+3	; 0x03
    16b6:	20 e0       	ldi	r18, 0x00	; 0
    16b8:	30 e0       	ldi	r19, 0x00	; 0
    16ba:	40 e2       	ldi	r20, 0x20	; 32
    16bc:	51 e4       	ldi	r21, 0x41	; 65
    16be:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    16c2:	dc 01       	movw	r26, r24
    16c4:	cb 01       	movw	r24, r22
    16c6:	8e 01       	movw	r16, r28
    16c8:	0b 55       	subi	r16, 0x5B	; 91
    16ca:	1f 4f       	sbci	r17, 0xFF	; 255
    16cc:	bc 01       	movw	r22, r24
    16ce:	cd 01       	movw	r24, r26
    16d0:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    16d4:	dc 01       	movw	r26, r24
    16d6:	cb 01       	movw	r24, r22
    16d8:	f8 01       	movw	r30, r16
    16da:	91 83       	std	Z+1, r25	; 0x01
    16dc:	80 83       	st	Z, r24
    16de:	27 c0       	rjmp	.+78     	; 0x172e <__stack+0xecf>
    16e0:	ce 01       	movw	r24, r28
    16e2:	89 55       	subi	r24, 0x59	; 89
    16e4:	9f 4f       	sbci	r25, 0xFF	; 255
    16e6:	20 e9       	ldi	r18, 0x90	; 144
    16e8:	31 e0       	ldi	r19, 0x01	; 1
    16ea:	fc 01       	movw	r30, r24
    16ec:	31 83       	std	Z+1, r19	; 0x01
    16ee:	20 83       	st	Z, r18
    16f0:	ce 01       	movw	r24, r28
    16f2:	89 55       	subi	r24, 0x59	; 89
    16f4:	9f 4f       	sbci	r25, 0xFF	; 255
    16f6:	fc 01       	movw	r30, r24
    16f8:	80 81       	ld	r24, Z
    16fa:	91 81       	ldd	r25, Z+1	; 0x01
    16fc:	8c 01       	movw	r16, r24
    16fe:	c8 01       	movw	r24, r16
    1700:	01 97       	sbiw	r24, 0x01	; 1
    1702:	f1 f7       	brne	.-4      	; 0x1700 <__stack+0xea1>
    1704:	8c 01       	movw	r16, r24
    1706:	ce 01       	movw	r24, r28
    1708:	89 55       	subi	r24, 0x59	; 89
    170a:	9f 4f       	sbci	r25, 0xFF	; 255
    170c:	fc 01       	movw	r30, r24
    170e:	11 83       	std	Z+1, r17	; 0x01
    1710:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1712:	ce 01       	movw	r24, r28
    1714:	8b 55       	subi	r24, 0x5B	; 91
    1716:	9f 4f       	sbci	r25, 0xFF	; 255
    1718:	9e 01       	movw	r18, r28
    171a:	2b 55       	subi	r18, 0x5B	; 91
    171c:	3f 4f       	sbci	r19, 0xFF	; 255
    171e:	f9 01       	movw	r30, r18
    1720:	20 81       	ld	r18, Z
    1722:	31 81       	ldd	r19, Z+1	; 0x01
    1724:	21 50       	subi	r18, 0x01	; 1
    1726:	30 40       	sbci	r19, 0x00	; 0
    1728:	fc 01       	movw	r30, r24
    172a:	31 83       	std	Z+1, r19	; 0x01
    172c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    172e:	ce 01       	movw	r24, r28
    1730:	8b 55       	subi	r24, 0x5B	; 91
    1732:	9f 4f       	sbci	r25, 0xFF	; 255
    1734:	fc 01       	movw	r30, r24
    1736:	80 81       	ld	r24, Z
    1738:	91 81       	ldd	r25, Z+1	; 0x01
    173a:	00 97       	sbiw	r24, 0x00	; 0
    173c:	89 f6       	brne	.-94     	; 0x16e0 <__stack+0xe81>
    173e:	2f c0       	rjmp	.+94     	; 0x179e <__stack+0xf3f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1740:	8e 01       	movw	r16, r28
    1742:	0b 55       	subi	r16, 0x5B	; 91
    1744:	1f 4f       	sbci	r17, 0xFF	; 255
    1746:	ce 01       	movw	r24, r28
    1748:	8f 55       	subi	r24, 0x5F	; 95
    174a:	9f 4f       	sbci	r25, 0xFF	; 255
    174c:	fc 01       	movw	r30, r24
    174e:	60 81       	ld	r22, Z
    1750:	71 81       	ldd	r23, Z+1	; 0x01
    1752:	82 81       	ldd	r24, Z+2	; 0x02
    1754:	93 81       	ldd	r25, Z+3	; 0x03
    1756:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    175a:	dc 01       	movw	r26, r24
    175c:	cb 01       	movw	r24, r22
    175e:	f8 01       	movw	r30, r16
    1760:	91 83       	std	Z+1, r25	; 0x01
    1762:	80 83       	st	Z, r24
    1764:	ce 01       	movw	r24, r28
    1766:	87 55       	subi	r24, 0x57	; 87
    1768:	9f 4f       	sbci	r25, 0xFF	; 255
    176a:	9e 01       	movw	r18, r28
    176c:	2b 55       	subi	r18, 0x5B	; 91
    176e:	3f 4f       	sbci	r19, 0xFF	; 255
    1770:	f9 01       	movw	r30, r18
    1772:	20 81       	ld	r18, Z
    1774:	31 81       	ldd	r19, Z+1	; 0x01
    1776:	fc 01       	movw	r30, r24
    1778:	31 83       	std	Z+1, r19	; 0x01
    177a:	20 83       	st	Z, r18
    177c:	ce 01       	movw	r24, r28
    177e:	87 55       	subi	r24, 0x57	; 87
    1780:	9f 4f       	sbci	r25, 0xFF	; 255
    1782:	fc 01       	movw	r30, r24
    1784:	80 81       	ld	r24, Z
    1786:	91 81       	ldd	r25, Z+1	; 0x01
    1788:	8c 01       	movw	r16, r24
    178a:	c8 01       	movw	r24, r16
    178c:	01 97       	sbiw	r24, 0x01	; 1
    178e:	f1 f7       	brne	.-4      	; 0x178c <__stack+0xf2d>
    1790:	8c 01       	movw	r16, r24
    1792:	ce 01       	movw	r24, r28
    1794:	87 55       	subi	r24, 0x57	; 87
    1796:	9f 4f       	sbci	r25, 0xFF	; 255
    1798:	fc 01       	movw	r30, r24
    179a:	11 83       	std	Z+1, r17	; 0x01
    179c:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0x0F);
    179e:	8f e0       	ldi	r24, 0x0F	; 15
    17a0:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    17a4:	9e 01       	movw	r18, r28
    17a6:	25 55       	subi	r18, 0x55	; 85
    17a8:	3f 4f       	sbci	r19, 0xFF	; 255
    17aa:	80 e0       	ldi	r24, 0x00	; 0
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	a0 ea       	ldi	r26, 0xA0	; 160
    17b0:	b0 e4       	ldi	r27, 0x40	; 64
    17b2:	f9 01       	movw	r30, r18
    17b4:	80 83       	st	Z, r24
    17b6:	91 83       	std	Z+1, r25	; 0x01
    17b8:	a2 83       	std	Z+2, r26	; 0x02
    17ba:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    17bc:	8e 01       	movw	r16, r28
    17be:	01 55       	subi	r16, 0x51	; 81
    17c0:	1f 4f       	sbci	r17, 0xFF	; 255
    17c2:	ce 01       	movw	r24, r28
    17c4:	85 55       	subi	r24, 0x55	; 85
    17c6:	9f 4f       	sbci	r25, 0xFF	; 255
    17c8:	fc 01       	movw	r30, r24
    17ca:	60 81       	ld	r22, Z
    17cc:	71 81       	ldd	r23, Z+1	; 0x01
    17ce:	82 81       	ldd	r24, Z+2	; 0x02
    17d0:	93 81       	ldd	r25, Z+3	; 0x03
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	4a e7       	ldi	r20, 0x7A	; 122
    17d8:	55 e4       	ldi	r21, 0x45	; 69
    17da:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    17de:	dc 01       	movw	r26, r24
    17e0:	cb 01       	movw	r24, r22
    17e2:	f8 01       	movw	r30, r16
    17e4:	80 83       	st	Z, r24
    17e6:	91 83       	std	Z+1, r25	; 0x01
    17e8:	a2 83       	std	Z+2, r26	; 0x02
    17ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17ec:	ce 01       	movw	r24, r28
    17ee:	81 55       	subi	r24, 0x51	; 81
    17f0:	9f 4f       	sbci	r25, 0xFF	; 255
    17f2:	11 e0       	ldi	r17, 0x01	; 1
    17f4:	fc 01       	movw	r30, r24
    17f6:	60 81       	ld	r22, Z
    17f8:	71 81       	ldd	r23, Z+1	; 0x01
    17fa:	82 81       	ldd	r24, Z+2	; 0x02
    17fc:	93 81       	ldd	r25, Z+3	; 0x03
    17fe:	20 e0       	ldi	r18, 0x00	; 0
    1800:	30 e0       	ldi	r19, 0x00	; 0
    1802:	40 e8       	ldi	r20, 0x80	; 128
    1804:	5f e3       	ldi	r21, 0x3F	; 63
    1806:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    180a:	88 23       	and	r24, r24
    180c:	0c f0       	brlt	.+2      	; 0x1810 <__stack+0xfb1>
    180e:	10 e0       	ldi	r17, 0x00	; 0
    1810:	11 23       	and	r17, r17
    1812:	49 f0       	breq	.+18     	; 0x1826 <__stack+0xfc7>
		__ticks = 1;
    1814:	ce 01       	movw	r24, r28
    1816:	8d 54       	subi	r24, 0x4D	; 77
    1818:	9f 4f       	sbci	r25, 0xFF	; 255
    181a:	21 e0       	ldi	r18, 0x01	; 1
    181c:	30 e0       	ldi	r19, 0x00	; 0
    181e:	fc 01       	movw	r30, r24
    1820:	31 83       	std	Z+1, r19	; 0x01
    1822:	20 83       	st	Z, r18
    1824:	74 c0       	rjmp	.+232    	; 0x190e <__stack+0x10af>
	else if (__tmp > 65535)
    1826:	ce 01       	movw	r24, r28
    1828:	81 55       	subi	r24, 0x51	; 81
    182a:	9f 4f       	sbci	r25, 0xFF	; 255
    182c:	11 e0       	ldi	r17, 0x01	; 1
    182e:	fc 01       	movw	r30, r24
    1830:	60 81       	ld	r22, Z
    1832:	71 81       	ldd	r23, Z+1	; 0x01
    1834:	82 81       	ldd	r24, Z+2	; 0x02
    1836:	93 81       	ldd	r25, Z+3	; 0x03
    1838:	20 e0       	ldi	r18, 0x00	; 0
    183a:	3f ef       	ldi	r19, 0xFF	; 255
    183c:	4f e7       	ldi	r20, 0x7F	; 127
    183e:	57 e4       	ldi	r21, 0x47	; 71
    1840:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    1844:	18 16       	cp	r1, r24
    1846:	0c f0       	brlt	.+2      	; 0x184a <__stack+0xfeb>
    1848:	10 e0       	ldi	r17, 0x00	; 0
    184a:	11 23       	and	r17, r17
    184c:	09 f4       	brne	.+2      	; 0x1850 <__stack+0xff1>
    184e:	4d c0       	rjmp	.+154    	; 0x18ea <__stack+0x108b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1850:	ce 01       	movw	r24, r28
    1852:	85 55       	subi	r24, 0x55	; 85
    1854:	9f 4f       	sbci	r25, 0xFF	; 255
    1856:	fc 01       	movw	r30, r24
    1858:	60 81       	ld	r22, Z
    185a:	71 81       	ldd	r23, Z+1	; 0x01
    185c:	82 81       	ldd	r24, Z+2	; 0x02
    185e:	93 81       	ldd	r25, Z+3	; 0x03
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	40 e2       	ldi	r20, 0x20	; 32
    1866:	51 e4       	ldi	r21, 0x41	; 65
    1868:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    186c:	dc 01       	movw	r26, r24
    186e:	cb 01       	movw	r24, r22
    1870:	8e 01       	movw	r16, r28
    1872:	0d 54       	subi	r16, 0x4D	; 77
    1874:	1f 4f       	sbci	r17, 0xFF	; 255
    1876:	bc 01       	movw	r22, r24
    1878:	cd 01       	movw	r24, r26
    187a:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    187e:	dc 01       	movw	r26, r24
    1880:	cb 01       	movw	r24, r22
    1882:	f8 01       	movw	r30, r16
    1884:	91 83       	std	Z+1, r25	; 0x01
    1886:	80 83       	st	Z, r24
    1888:	27 c0       	rjmp	.+78     	; 0x18d8 <__stack+0x1079>
    188a:	ce 01       	movw	r24, r28
    188c:	8b 54       	subi	r24, 0x4B	; 75
    188e:	9f 4f       	sbci	r25, 0xFF	; 255
    1890:	20 e9       	ldi	r18, 0x90	; 144
    1892:	31 e0       	ldi	r19, 0x01	; 1
    1894:	fc 01       	movw	r30, r24
    1896:	31 83       	std	Z+1, r19	; 0x01
    1898:	20 83       	st	Z, r18
    189a:	ce 01       	movw	r24, r28
    189c:	8b 54       	subi	r24, 0x4B	; 75
    189e:	9f 4f       	sbci	r25, 0xFF	; 255
    18a0:	fc 01       	movw	r30, r24
    18a2:	80 81       	ld	r24, Z
    18a4:	91 81       	ldd	r25, Z+1	; 0x01
    18a6:	8c 01       	movw	r16, r24
    18a8:	c8 01       	movw	r24, r16
    18aa:	01 97       	sbiw	r24, 0x01	; 1
    18ac:	f1 f7       	brne	.-4      	; 0x18aa <__stack+0x104b>
    18ae:	8c 01       	movw	r16, r24
    18b0:	ce 01       	movw	r24, r28
    18b2:	8b 54       	subi	r24, 0x4B	; 75
    18b4:	9f 4f       	sbci	r25, 0xFF	; 255
    18b6:	fc 01       	movw	r30, r24
    18b8:	11 83       	std	Z+1, r17	; 0x01
    18ba:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18bc:	ce 01       	movw	r24, r28
    18be:	8d 54       	subi	r24, 0x4D	; 77
    18c0:	9f 4f       	sbci	r25, 0xFF	; 255
    18c2:	9e 01       	movw	r18, r28
    18c4:	2d 54       	subi	r18, 0x4D	; 77
    18c6:	3f 4f       	sbci	r19, 0xFF	; 255
    18c8:	f9 01       	movw	r30, r18
    18ca:	20 81       	ld	r18, Z
    18cc:	31 81       	ldd	r19, Z+1	; 0x01
    18ce:	21 50       	subi	r18, 0x01	; 1
    18d0:	30 40       	sbci	r19, 0x00	; 0
    18d2:	fc 01       	movw	r30, r24
    18d4:	31 83       	std	Z+1, r19	; 0x01
    18d6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d8:	ce 01       	movw	r24, r28
    18da:	8d 54       	subi	r24, 0x4D	; 77
    18dc:	9f 4f       	sbci	r25, 0xFF	; 255
    18de:	fc 01       	movw	r30, r24
    18e0:	80 81       	ld	r24, Z
    18e2:	91 81       	ldd	r25, Z+1	; 0x01
    18e4:	00 97       	sbiw	r24, 0x00	; 0
    18e6:	89 f6       	brne	.-94     	; 0x188a <__stack+0x102b>
    18e8:	2f c0       	rjmp	.+94     	; 0x1948 <__stack+0x10e9>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ea:	8e 01       	movw	r16, r28
    18ec:	0d 54       	subi	r16, 0x4D	; 77
    18ee:	1f 4f       	sbci	r17, 0xFF	; 255
    18f0:	ce 01       	movw	r24, r28
    18f2:	81 55       	subi	r24, 0x51	; 81
    18f4:	9f 4f       	sbci	r25, 0xFF	; 255
    18f6:	fc 01       	movw	r30, r24
    18f8:	60 81       	ld	r22, Z
    18fa:	71 81       	ldd	r23, Z+1	; 0x01
    18fc:	82 81       	ldd	r24, Z+2	; 0x02
    18fe:	93 81       	ldd	r25, Z+3	; 0x03
    1900:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1904:	dc 01       	movw	r26, r24
    1906:	cb 01       	movw	r24, r22
    1908:	f8 01       	movw	r30, r16
    190a:	91 83       	std	Z+1, r25	; 0x01
    190c:	80 83       	st	Z, r24
    190e:	ce 01       	movw	r24, r28
    1910:	89 54       	subi	r24, 0x49	; 73
    1912:	9f 4f       	sbci	r25, 0xFF	; 255
    1914:	9e 01       	movw	r18, r28
    1916:	2d 54       	subi	r18, 0x4D	; 77
    1918:	3f 4f       	sbci	r19, 0xFF	; 255
    191a:	f9 01       	movw	r30, r18
    191c:	20 81       	ld	r18, Z
    191e:	31 81       	ldd	r19, Z+1	; 0x01
    1920:	fc 01       	movw	r30, r24
    1922:	31 83       	std	Z+1, r19	; 0x01
    1924:	20 83       	st	Z, r18
    1926:	ce 01       	movw	r24, r28
    1928:	89 54       	subi	r24, 0x49	; 73
    192a:	9f 4f       	sbci	r25, 0xFF	; 255
    192c:	fc 01       	movw	r30, r24
    192e:	80 81       	ld	r24, Z
    1930:	91 81       	ldd	r25, Z+1	; 0x01
    1932:	8c 01       	movw	r16, r24
    1934:	c8 01       	movw	r24, r16
    1936:	01 97       	sbiw	r24, 0x01	; 1
    1938:	f1 f7       	brne	.-4      	; 0x1936 <__stack+0x10d7>
    193a:	8c 01       	movw	r16, r24
    193c:	ce 01       	movw	r24, r28
    193e:	89 54       	subi	r24, 0x49	; 73
    1940:	9f 4f       	sbci	r25, 0xFF	; 255
    1942:	fc 01       	movw	r30, r24
    1944:	11 83       	std	Z+1, r17	; 0x01
    1946:	00 83       	st	Z, r16
	_delay_ms(5);
    wyslijComend(0x80);//Do pierwszej lini
    1948:	80 e8       	ldi	r24, 0x80	; 128
    194a:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    194e:	9e 01       	movw	r18, r28
    1950:	27 54       	subi	r18, 0x47	; 71
    1952:	3f 4f       	sbci	r19, 0xFF	; 255
    1954:	80 e0       	ldi	r24, 0x00	; 0
    1956:	90 e0       	ldi	r25, 0x00	; 0
    1958:	a0 ea       	ldi	r26, 0xA0	; 160
    195a:	b0 e4       	ldi	r27, 0x40	; 64
    195c:	f9 01       	movw	r30, r18
    195e:	80 83       	st	Z, r24
    1960:	91 83       	std	Z+1, r25	; 0x01
    1962:	a2 83       	std	Z+2, r26	; 0x02
    1964:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1966:	8e 01       	movw	r16, r28
    1968:	03 54       	subi	r16, 0x43	; 67
    196a:	1f 4f       	sbci	r17, 0xFF	; 255
    196c:	ce 01       	movw	r24, r28
    196e:	87 54       	subi	r24, 0x47	; 71
    1970:	9f 4f       	sbci	r25, 0xFF	; 255
    1972:	fc 01       	movw	r30, r24
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	82 81       	ldd	r24, Z+2	; 0x02
    197a:	93 81       	ldd	r25, Z+3	; 0x03
    197c:	20 e0       	ldi	r18, 0x00	; 0
    197e:	30 e0       	ldi	r19, 0x00	; 0
    1980:	4a e7       	ldi	r20, 0x7A	; 122
    1982:	55 e4       	ldi	r21, 0x45	; 69
    1984:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1988:	dc 01       	movw	r26, r24
    198a:	cb 01       	movw	r24, r22
    198c:	f8 01       	movw	r30, r16
    198e:	80 83       	st	Z, r24
    1990:	91 83       	std	Z+1, r25	; 0x01
    1992:	a2 83       	std	Z+2, r26	; 0x02
    1994:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1996:	ce 01       	movw	r24, r28
    1998:	83 54       	subi	r24, 0x43	; 67
    199a:	9f 4f       	sbci	r25, 0xFF	; 255
    199c:	11 e0       	ldi	r17, 0x01	; 1
    199e:	fc 01       	movw	r30, r24
    19a0:	60 81       	ld	r22, Z
    19a2:	71 81       	ldd	r23, Z+1	; 0x01
    19a4:	82 81       	ldd	r24, Z+2	; 0x02
    19a6:	93 81       	ldd	r25, Z+3	; 0x03
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	40 e8       	ldi	r20, 0x80	; 128
    19ae:	5f e3       	ldi	r21, 0x3F	; 63
    19b0:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    19b4:	88 23       	and	r24, r24
    19b6:	0c f0       	brlt	.+2      	; 0x19ba <__stack+0x115b>
    19b8:	10 e0       	ldi	r17, 0x00	; 0
    19ba:	11 23       	and	r17, r17
    19bc:	49 f0       	breq	.+18     	; 0x19d0 <__stack+0x1171>
		__ticks = 1;
    19be:	ce 01       	movw	r24, r28
    19c0:	8f 53       	subi	r24, 0x3F	; 63
    19c2:	9f 4f       	sbci	r25, 0xFF	; 255
    19c4:	21 e0       	ldi	r18, 0x01	; 1
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	fc 01       	movw	r30, r24
    19ca:	31 83       	std	Z+1, r19	; 0x01
    19cc:	20 83       	st	Z, r18
    19ce:	74 c0       	rjmp	.+232    	; 0x1ab8 <__stack+0x1259>
	else if (__tmp > 65535)
    19d0:	ce 01       	movw	r24, r28
    19d2:	83 54       	subi	r24, 0x43	; 67
    19d4:	9f 4f       	sbci	r25, 0xFF	; 255
    19d6:	11 e0       	ldi	r17, 0x01	; 1
    19d8:	fc 01       	movw	r30, r24
    19da:	60 81       	ld	r22, Z
    19dc:	71 81       	ldd	r23, Z+1	; 0x01
    19de:	82 81       	ldd	r24, Z+2	; 0x02
    19e0:	93 81       	ldd	r25, Z+3	; 0x03
    19e2:	20 e0       	ldi	r18, 0x00	; 0
    19e4:	3f ef       	ldi	r19, 0xFF	; 255
    19e6:	4f e7       	ldi	r20, 0x7F	; 127
    19e8:	57 e4       	ldi	r21, 0x47	; 71
    19ea:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    19ee:	18 16       	cp	r1, r24
    19f0:	0c f0       	brlt	.+2      	; 0x19f4 <__stack+0x1195>
    19f2:	10 e0       	ldi	r17, 0x00	; 0
    19f4:	11 23       	and	r17, r17
    19f6:	09 f4       	brne	.+2      	; 0x19fa <__stack+0x119b>
    19f8:	4d c0       	rjmp	.+154    	; 0x1a94 <__stack+0x1235>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19fa:	ce 01       	movw	r24, r28
    19fc:	87 54       	subi	r24, 0x47	; 71
    19fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1a00:	fc 01       	movw	r30, r24
    1a02:	60 81       	ld	r22, Z
    1a04:	71 81       	ldd	r23, Z+1	; 0x01
    1a06:	82 81       	ldd	r24, Z+2	; 0x02
    1a08:	93 81       	ldd	r25, Z+3	; 0x03
    1a0a:	20 e0       	ldi	r18, 0x00	; 0
    1a0c:	30 e0       	ldi	r19, 0x00	; 0
    1a0e:	40 e2       	ldi	r20, 0x20	; 32
    1a10:	51 e4       	ldi	r21, 0x41	; 65
    1a12:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1a16:	dc 01       	movw	r26, r24
    1a18:	cb 01       	movw	r24, r22
    1a1a:	8e 01       	movw	r16, r28
    1a1c:	0f 53       	subi	r16, 0x3F	; 63
    1a1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a20:	bc 01       	movw	r22, r24
    1a22:	cd 01       	movw	r24, r26
    1a24:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1a28:	dc 01       	movw	r26, r24
    1a2a:	cb 01       	movw	r24, r22
    1a2c:	f8 01       	movw	r30, r16
    1a2e:	91 83       	std	Z+1, r25	; 0x01
    1a30:	80 83       	st	Z, r24
    1a32:	27 c0       	rjmp	.+78     	; 0x1a82 <__stack+0x1223>
    1a34:	ce 01       	movw	r24, r28
    1a36:	8d 53       	subi	r24, 0x3D	; 61
    1a38:	9f 4f       	sbci	r25, 0xFF	; 255
    1a3a:	20 e9       	ldi	r18, 0x90	; 144
    1a3c:	31 e0       	ldi	r19, 0x01	; 1
    1a3e:	fc 01       	movw	r30, r24
    1a40:	31 83       	std	Z+1, r19	; 0x01
    1a42:	20 83       	st	Z, r18
    1a44:	ce 01       	movw	r24, r28
    1a46:	8d 53       	subi	r24, 0x3D	; 61
    1a48:	9f 4f       	sbci	r25, 0xFF	; 255
    1a4a:	fc 01       	movw	r30, r24
    1a4c:	80 81       	ld	r24, Z
    1a4e:	91 81       	ldd	r25, Z+1	; 0x01
    1a50:	8c 01       	movw	r16, r24
    1a52:	c8 01       	movw	r24, r16
    1a54:	01 97       	sbiw	r24, 0x01	; 1
    1a56:	f1 f7       	brne	.-4      	; 0x1a54 <__stack+0x11f5>
    1a58:	8c 01       	movw	r16, r24
    1a5a:	ce 01       	movw	r24, r28
    1a5c:	8d 53       	subi	r24, 0x3D	; 61
    1a5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a60:	fc 01       	movw	r30, r24
    1a62:	11 83       	std	Z+1, r17	; 0x01
    1a64:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a66:	ce 01       	movw	r24, r28
    1a68:	8f 53       	subi	r24, 0x3F	; 63
    1a6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6c:	9e 01       	movw	r18, r28
    1a6e:	2f 53       	subi	r18, 0x3F	; 63
    1a70:	3f 4f       	sbci	r19, 0xFF	; 255
    1a72:	f9 01       	movw	r30, r18
    1a74:	20 81       	ld	r18, Z
    1a76:	31 81       	ldd	r19, Z+1	; 0x01
    1a78:	21 50       	subi	r18, 0x01	; 1
    1a7a:	30 40       	sbci	r19, 0x00	; 0
    1a7c:	fc 01       	movw	r30, r24
    1a7e:	31 83       	std	Z+1, r19	; 0x01
    1a80:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a82:	ce 01       	movw	r24, r28
    1a84:	8f 53       	subi	r24, 0x3F	; 63
    1a86:	9f 4f       	sbci	r25, 0xFF	; 255
    1a88:	fc 01       	movw	r30, r24
    1a8a:	80 81       	ld	r24, Z
    1a8c:	91 81       	ldd	r25, Z+1	; 0x01
    1a8e:	00 97       	sbiw	r24, 0x00	; 0
    1a90:	89 f6       	brne	.-94     	; 0x1a34 <__stack+0x11d5>
    1a92:	2f c0       	rjmp	.+94     	; 0x1af2 <__stack+0x1293>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a94:	8e 01       	movw	r16, r28
    1a96:	0f 53       	subi	r16, 0x3F	; 63
    1a98:	1f 4f       	sbci	r17, 0xFF	; 255
    1a9a:	ce 01       	movw	r24, r28
    1a9c:	83 54       	subi	r24, 0x43	; 67
    1a9e:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa0:	fc 01       	movw	r30, r24
    1aa2:	60 81       	ld	r22, Z
    1aa4:	71 81       	ldd	r23, Z+1	; 0x01
    1aa6:	82 81       	ldd	r24, Z+2	; 0x02
    1aa8:	93 81       	ldd	r25, Z+3	; 0x03
    1aaa:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1aae:	dc 01       	movw	r26, r24
    1ab0:	cb 01       	movw	r24, r22
    1ab2:	f8 01       	movw	r30, r16
    1ab4:	91 83       	std	Z+1, r25	; 0x01
    1ab6:	80 83       	st	Z, r24
    1ab8:	ce 01       	movw	r24, r28
    1aba:	8b 53       	subi	r24, 0x3B	; 59
    1abc:	9f 4f       	sbci	r25, 0xFF	; 255
    1abe:	9e 01       	movw	r18, r28
    1ac0:	2f 53       	subi	r18, 0x3F	; 63
    1ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac4:	f9 01       	movw	r30, r18
    1ac6:	20 81       	ld	r18, Z
    1ac8:	31 81       	ldd	r19, Z+1	; 0x01
    1aca:	fc 01       	movw	r30, r24
    1acc:	31 83       	std	Z+1, r19	; 0x01
    1ace:	20 83       	st	Z, r18
    1ad0:	ce 01       	movw	r24, r28
    1ad2:	8b 53       	subi	r24, 0x3B	; 59
    1ad4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ad6:	fc 01       	movw	r30, r24
    1ad8:	80 81       	ld	r24, Z
    1ada:	91 81       	ldd	r25, Z+1	; 0x01
    1adc:	8c 01       	movw	r16, r24
    1ade:	c8 01       	movw	r24, r16
    1ae0:	01 97       	sbiw	r24, 0x01	; 1
    1ae2:	f1 f7       	brne	.-4      	; 0x1ae0 <__stack+0x1281>
    1ae4:	8c 01       	movw	r16, r24
    1ae6:	ce 01       	movw	r24, r28
    1ae8:	8b 53       	subi	r24, 0x3B	; 59
    1aea:	9f 4f       	sbci	r25, 0xFF	; 255
    1aec:	fc 01       	movw	r30, r24
    1aee:	11 83       	std	Z+1, r17	; 0x01
    1af0:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0x00);
    1af2:	80 e0       	ldi	r24, 0x00	; 0
    1af4:	0e 94 db 00 	call	0x1b6	; 0x1b6 <wyslijComend>
    1af8:	9e 01       	movw	r18, r28
    1afa:	29 53       	subi	r18, 0x39	; 57
    1afc:	3f 4f       	sbci	r19, 0xFF	; 255
    1afe:	80 e0       	ldi	r24, 0x00	; 0
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	a0 ea       	ldi	r26, 0xA0	; 160
    1b04:	b0 e4       	ldi	r27, 0x40	; 64
    1b06:	f9 01       	movw	r30, r18
    1b08:	80 83       	st	Z, r24
    1b0a:	91 83       	std	Z+1, r25	; 0x01
    1b0c:	a2 83       	std	Z+2, r26	; 0x02
    1b0e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1b10:	8e 01       	movw	r16, r28
    1b12:	05 53       	subi	r16, 0x35	; 53
    1b14:	1f 4f       	sbci	r17, 0xFF	; 255
    1b16:	ce 01       	movw	r24, r28
    1b18:	89 53       	subi	r24, 0x39	; 57
    1b1a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	60 81       	ld	r22, Z
    1b20:	71 81       	ldd	r23, Z+1	; 0x01
    1b22:	82 81       	ldd	r24, Z+2	; 0x02
    1b24:	93 81       	ldd	r25, Z+3	; 0x03
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	4a e7       	ldi	r20, 0x7A	; 122
    1b2c:	55 e4       	ldi	r21, 0x45	; 69
    1b2e:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1b32:	dc 01       	movw	r26, r24
    1b34:	cb 01       	movw	r24, r22
    1b36:	f8 01       	movw	r30, r16
    1b38:	80 83       	st	Z, r24
    1b3a:	91 83       	std	Z+1, r25	; 0x01
    1b3c:	a2 83       	std	Z+2, r26	; 0x02
    1b3e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b40:	ce 01       	movw	r24, r28
    1b42:	85 53       	subi	r24, 0x35	; 53
    1b44:	9f 4f       	sbci	r25, 0xFF	; 255
    1b46:	11 e0       	ldi	r17, 0x01	; 1
    1b48:	fc 01       	movw	r30, r24
    1b4a:	60 81       	ld	r22, Z
    1b4c:	71 81       	ldd	r23, Z+1	; 0x01
    1b4e:	82 81       	ldd	r24, Z+2	; 0x02
    1b50:	93 81       	ldd	r25, Z+3	; 0x03
    1b52:	20 e0       	ldi	r18, 0x00	; 0
    1b54:	30 e0       	ldi	r19, 0x00	; 0
    1b56:	40 e8       	ldi	r20, 0x80	; 128
    1b58:	5f e3       	ldi	r21, 0x3F	; 63
    1b5a:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__cmpsf2>
    1b5e:	88 23       	and	r24, r24
    1b60:	0c f0       	brlt	.+2      	; 0x1b64 <__stack+0x1305>
    1b62:	10 e0       	ldi	r17, 0x00	; 0
    1b64:	11 23       	and	r17, r17
    1b66:	49 f0       	breq	.+18     	; 0x1b7a <__stack+0x131b>
		__ticks = 1;
    1b68:	ce 01       	movw	r24, r28
    1b6a:	81 53       	subi	r24, 0x31	; 49
    1b6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b6e:	21 e0       	ldi	r18, 0x01	; 1
    1b70:	30 e0       	ldi	r19, 0x00	; 0
    1b72:	fc 01       	movw	r30, r24
    1b74:	31 83       	std	Z+1, r19	; 0x01
    1b76:	20 83       	st	Z, r18
    1b78:	74 c0       	rjmp	.+232    	; 0x1c62 <__stack+0x1403>
	else if (__tmp > 65535)
    1b7a:	ce 01       	movw	r24, r28
    1b7c:	85 53       	subi	r24, 0x35	; 53
    1b7e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b80:	11 e0       	ldi	r17, 0x01	; 1
    1b82:	fc 01       	movw	r30, r24
    1b84:	60 81       	ld	r22, Z
    1b86:	71 81       	ldd	r23, Z+1	; 0x01
    1b88:	82 81       	ldd	r24, Z+2	; 0x02
    1b8a:	93 81       	ldd	r25, Z+3	; 0x03
    1b8c:	20 e0       	ldi	r18, 0x00	; 0
    1b8e:	3f ef       	ldi	r19, 0xFF	; 255
    1b90:	4f e7       	ldi	r20, 0x7F	; 127
    1b92:	57 e4       	ldi	r21, 0x47	; 71
    1b94:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
    1b98:	18 16       	cp	r1, r24
    1b9a:	0c f0       	brlt	.+2      	; 0x1b9e <__stack+0x133f>
    1b9c:	10 e0       	ldi	r17, 0x00	; 0
    1b9e:	11 23       	and	r17, r17
    1ba0:	09 f4       	brne	.+2      	; 0x1ba4 <__stack+0x1345>
    1ba2:	4d c0       	rjmp	.+154    	; 0x1c3e <__stack+0x13df>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ba4:	ce 01       	movw	r24, r28
    1ba6:	89 53       	subi	r24, 0x39	; 57
    1ba8:	9f 4f       	sbci	r25, 0xFF	; 255
    1baa:	fc 01       	movw	r30, r24
    1bac:	60 81       	ld	r22, Z
    1bae:	71 81       	ldd	r23, Z+1	; 0x01
    1bb0:	82 81       	ldd	r24, Z+2	; 0x02
    1bb2:	93 81       	ldd	r25, Z+3	; 0x03
    1bb4:	20 e0       	ldi	r18, 0x00	; 0
    1bb6:	30 e0       	ldi	r19, 0x00	; 0
    1bb8:	40 e2       	ldi	r20, 0x20	; 32
    1bba:	51 e4       	ldi	r21, 0x41	; 65
    1bbc:	0e 94 fa 0e 	call	0x1df4	; 0x1df4 <__mulsf3>
    1bc0:	dc 01       	movw	r26, r24
    1bc2:	cb 01       	movw	r24, r22
    1bc4:	8e 01       	movw	r16, r28
    1bc6:	01 53       	subi	r16, 0x31	; 49
    1bc8:	1f 4f       	sbci	r17, 0xFF	; 255
    1bca:	bc 01       	movw	r22, r24
    1bcc:	cd 01       	movw	r24, r26
    1bce:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	cb 01       	movw	r24, r22
    1bd6:	f8 01       	movw	r30, r16
    1bd8:	91 83       	std	Z+1, r25	; 0x01
    1bda:	80 83       	st	Z, r24
    1bdc:	27 c0       	rjmp	.+78     	; 0x1c2c <__stack+0x13cd>
    1bde:	ce 01       	movw	r24, r28
    1be0:	8f 52       	subi	r24, 0x2F	; 47
    1be2:	9f 4f       	sbci	r25, 0xFF	; 255
    1be4:	20 e9       	ldi	r18, 0x90	; 144
    1be6:	31 e0       	ldi	r19, 0x01	; 1
    1be8:	fc 01       	movw	r30, r24
    1bea:	31 83       	std	Z+1, r19	; 0x01
    1bec:	20 83       	st	Z, r18
    1bee:	ce 01       	movw	r24, r28
    1bf0:	8f 52       	subi	r24, 0x2F	; 47
    1bf2:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf4:	fc 01       	movw	r30, r24
    1bf6:	80 81       	ld	r24, Z
    1bf8:	91 81       	ldd	r25, Z+1	; 0x01
    1bfa:	8c 01       	movw	r16, r24
    1bfc:	c8 01       	movw	r24, r16
    1bfe:	01 97       	sbiw	r24, 0x01	; 1
    1c00:	f1 f7       	brne	.-4      	; 0x1bfe <__stack+0x139f>
    1c02:	8c 01       	movw	r16, r24
    1c04:	ce 01       	movw	r24, r28
    1c06:	8f 52       	subi	r24, 0x2F	; 47
    1c08:	9f 4f       	sbci	r25, 0xFF	; 255
    1c0a:	fc 01       	movw	r30, r24
    1c0c:	11 83       	std	Z+1, r17	; 0x01
    1c0e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c10:	ce 01       	movw	r24, r28
    1c12:	81 53       	subi	r24, 0x31	; 49
    1c14:	9f 4f       	sbci	r25, 0xFF	; 255
    1c16:	9e 01       	movw	r18, r28
    1c18:	21 53       	subi	r18, 0x31	; 49
    1c1a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c1c:	f9 01       	movw	r30, r18
    1c1e:	20 81       	ld	r18, Z
    1c20:	31 81       	ldd	r19, Z+1	; 0x01
    1c22:	21 50       	subi	r18, 0x01	; 1
    1c24:	30 40       	sbci	r19, 0x00	; 0
    1c26:	fc 01       	movw	r30, r24
    1c28:	31 83       	std	Z+1, r19	; 0x01
    1c2a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c2c:	ce 01       	movw	r24, r28
    1c2e:	81 53       	subi	r24, 0x31	; 49
    1c30:	9f 4f       	sbci	r25, 0xFF	; 255
    1c32:	fc 01       	movw	r30, r24
    1c34:	80 81       	ld	r24, Z
    1c36:	91 81       	ldd	r25, Z+1	; 0x01
    1c38:	00 97       	sbiw	r24, 0x00	; 0
    1c3a:	89 f6       	brne	.-94     	; 0x1bde <__stack+0x137f>
    1c3c:	2f c0       	rjmp	.+94     	; 0x1c9c <__stack+0x143d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c3e:	8e 01       	movw	r16, r28
    1c40:	01 53       	subi	r16, 0x31	; 49
    1c42:	1f 4f       	sbci	r17, 0xFF	; 255
    1c44:	ce 01       	movw	r24, r28
    1c46:	85 53       	subi	r24, 0x35	; 53
    1c48:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4a:	fc 01       	movw	r30, r24
    1c4c:	60 81       	ld	r22, Z
    1c4e:	71 81       	ldd	r23, Z+1	; 0x01
    1c50:	82 81       	ldd	r24, Z+2	; 0x02
    1c52:	93 81       	ldd	r25, Z+3	; 0x03
    1c54:	0e 94 7d 0e 	call	0x1cfa	; 0x1cfa <__fixunssfsi>
    1c58:	dc 01       	movw	r26, r24
    1c5a:	cb 01       	movw	r24, r22
    1c5c:	f8 01       	movw	r30, r16
    1c5e:	91 83       	std	Z+1, r25	; 0x01
    1c60:	80 83       	st	Z, r24
    1c62:	ce 01       	movw	r24, r28
    1c64:	8d 52       	subi	r24, 0x2D	; 45
    1c66:	9f 4f       	sbci	r25, 0xFF	; 255
    1c68:	9e 01       	movw	r18, r28
    1c6a:	21 53       	subi	r18, 0x31	; 49
    1c6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c6e:	f9 01       	movw	r30, r18
    1c70:	20 81       	ld	r18, Z
    1c72:	31 81       	ldd	r19, Z+1	; 0x01
    1c74:	fc 01       	movw	r30, r24
    1c76:	31 83       	std	Z+1, r19	; 0x01
    1c78:	20 83       	st	Z, r18
    1c7a:	ce 01       	movw	r24, r28
    1c7c:	8d 52       	subi	r24, 0x2D	; 45
    1c7e:	9f 4f       	sbci	r25, 0xFF	; 255
    1c80:	fc 01       	movw	r30, r24
    1c82:	80 81       	ld	r24, Z
    1c84:	91 81       	ldd	r25, Z+1	; 0x01
    1c86:	8c 01       	movw	r16, r24
    1c88:	c8 01       	movw	r24, r16
    1c8a:	01 97       	sbiw	r24, 0x01	; 1
    1c8c:	f1 f7       	brne	.-4      	; 0x1c8a <__stack+0x142b>
    1c8e:	8c 01       	movw	r16, r24
    1c90:	ce 01       	movw	r24, r28
    1c92:	8d 52       	subi	r24, 0x2D	; 45
    1c94:	9f 4f       	sbci	r25, 0xFF	; 255
    1c96:	fc 01       	movw	r30, r24
    1c98:	11 83       	std	Z+1, r17	; 0x01
    1c9a:	00 83       	st	Z, r16
	//wyslijComend(0x05);//Tryb pisanie [      _DCBA]
	//wyslijComend(0x06);//Tryb pisanie [      ABCD_]
	//wyslijComend(0x07);//Tryb pisanie [ABCD_      ]
	
	
}
    1c9c:	cc 52       	subi	r28, 0x2C	; 44
    1c9e:	df 4f       	sbci	r29, 0xFF	; 255
    1ca0:	0f b6       	in	r0, 0x3f	; 63
    1ca2:	f8 94       	cli
    1ca4:	de bf       	out	0x3e, r29	; 62
    1ca6:	0f be       	out	0x3f, r0	; 63
    1ca8:	cd bf       	out	0x3d, r28	; 61
    1caa:	df 91       	pop	r29
    1cac:	cf 91       	pop	r28
    1cae:	1f 91       	pop	r17
    1cb0:	0f 91       	pop	r16
    1cb2:	08 95       	ret

00001cb4 <main>:

int main(void)
{
    1cb4:	cf 93       	push	r28
    1cb6:	df 93       	push	r29
    1cb8:	00 d0       	rcall	.+0      	; 0x1cba <main+0x6>
    1cba:	cd b7       	in	r28, 0x3d	; 61
    1cbc:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xFF;
    1cbe:	8a e3       	ldi	r24, 0x3A	; 58
    1cc0:	90 e0       	ldi	r25, 0x00	; 0
    1cc2:	2f ef       	ldi	r18, 0xFF	; 255
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	20 83       	st	Z, r18
	initLCD();
    1cc8:	0e 94 12 03 	call	0x624	; 0x624 <initLCD>
	//wyslijDane(33);
	//wyslijNapis("ABCDTEST");
    int i=20;
    1ccc:	84 e1       	ldi	r24, 0x14	; 20
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	9a 83       	std	Y+2, r25	; 0x02
    1cd2:	89 83       	std	Y+1, r24	; 0x01
	
	while(1)
	{
		
		
		SetDisplay(2,i--,4);
    1cd4:	29 81       	ldd	r18, Y+1	; 0x01
    1cd6:	3a 81       	ldd	r19, Y+2	; 0x02
    1cd8:	89 81       	ldd	r24, Y+1	; 0x01
    1cda:	9a 81       	ldd	r25, Y+2	; 0x02
    1cdc:	01 97       	sbiw	r24, 0x01	; 1
    1cde:	9a 83       	std	Y+2, r25	; 0x02
    1ce0:	89 83       	std	Y+1, r24	; 0x01
    1ce2:	82 e0       	ldi	r24, 0x02	; 2
    1ce4:	90 e0       	ldi	r25, 0x00	; 0
    1ce6:	b9 01       	movw	r22, r18
    1ce8:	44 e0       	ldi	r20, 0x04	; 4
    1cea:	50 e0       	ldi	r21, 0x00	; 0
    1cec:	0e 94 b0 01 	call	0x360	; 0x360 <SetDisplay>
	}
    1cf0:	f1 cf       	rjmp	.-30     	; 0x1cd4 <main+0x20>

00001cf2 <__cmpsf2>:
    1cf2:	2f d0       	rcall	.+94     	; 0x1d52 <__fp_cmp>
    1cf4:	08 f4       	brcc	.+2      	; 0x1cf8 <__cmpsf2+0x6>
    1cf6:	81 e0       	ldi	r24, 0x01	; 1
    1cf8:	08 95       	ret

00001cfa <__fixunssfsi>:
    1cfa:	57 d0       	rcall	.+174    	; 0x1daa <__fp_splitA>
    1cfc:	88 f0       	brcs	.+34     	; 0x1d20 <__fixunssfsi+0x26>
    1cfe:	9f 57       	subi	r25, 0x7F	; 127
    1d00:	90 f0       	brcs	.+36     	; 0x1d26 <__fixunssfsi+0x2c>
    1d02:	b9 2f       	mov	r27, r25
    1d04:	99 27       	eor	r25, r25
    1d06:	b7 51       	subi	r27, 0x17	; 23
    1d08:	a0 f0       	brcs	.+40     	; 0x1d32 <__fixunssfsi+0x38>
    1d0a:	d1 f0       	breq	.+52     	; 0x1d40 <__fixunssfsi+0x46>
    1d0c:	66 0f       	add	r22, r22
    1d0e:	77 1f       	adc	r23, r23
    1d10:	88 1f       	adc	r24, r24
    1d12:	99 1f       	adc	r25, r25
    1d14:	1a f0       	brmi	.+6      	; 0x1d1c <__fixunssfsi+0x22>
    1d16:	ba 95       	dec	r27
    1d18:	c9 f7       	brne	.-14     	; 0x1d0c <__fixunssfsi+0x12>
    1d1a:	12 c0       	rjmp	.+36     	; 0x1d40 <__fixunssfsi+0x46>
    1d1c:	b1 30       	cpi	r27, 0x01	; 1
    1d1e:	81 f0       	breq	.+32     	; 0x1d40 <__fixunssfsi+0x46>
    1d20:	5e d0       	rcall	.+188    	; 0x1dde <__fp_zero>
    1d22:	b1 e0       	ldi	r27, 0x01	; 1
    1d24:	08 95       	ret
    1d26:	5b c0       	rjmp	.+182    	; 0x1dde <__fp_zero>
    1d28:	67 2f       	mov	r22, r23
    1d2a:	78 2f       	mov	r23, r24
    1d2c:	88 27       	eor	r24, r24
    1d2e:	b8 5f       	subi	r27, 0xF8	; 248
    1d30:	39 f0       	breq	.+14     	; 0x1d40 <__fixunssfsi+0x46>
    1d32:	b9 3f       	cpi	r27, 0xF9	; 249
    1d34:	cc f3       	brlt	.-14     	; 0x1d28 <__fixunssfsi+0x2e>
    1d36:	86 95       	lsr	r24
    1d38:	77 95       	ror	r23
    1d3a:	67 95       	ror	r22
    1d3c:	b3 95       	inc	r27
    1d3e:	d9 f7       	brne	.-10     	; 0x1d36 <__fixunssfsi+0x3c>
    1d40:	3e f4       	brtc	.+14     	; 0x1d50 <__fixunssfsi+0x56>
    1d42:	90 95       	com	r25
    1d44:	80 95       	com	r24
    1d46:	70 95       	com	r23
    1d48:	61 95       	neg	r22
    1d4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d50:	08 95       	ret

00001d52 <__fp_cmp>:
    1d52:	99 0f       	add	r25, r25
    1d54:	00 08       	sbc	r0, r0
    1d56:	55 0f       	add	r21, r21
    1d58:	aa 0b       	sbc	r26, r26
    1d5a:	e0 e8       	ldi	r30, 0x80	; 128
    1d5c:	fe ef       	ldi	r31, 0xFE	; 254
    1d5e:	16 16       	cp	r1, r22
    1d60:	17 06       	cpc	r1, r23
    1d62:	e8 07       	cpc	r30, r24
    1d64:	f9 07       	cpc	r31, r25
    1d66:	c0 f0       	brcs	.+48     	; 0x1d98 <__fp_cmp+0x46>
    1d68:	12 16       	cp	r1, r18
    1d6a:	13 06       	cpc	r1, r19
    1d6c:	e4 07       	cpc	r30, r20
    1d6e:	f5 07       	cpc	r31, r21
    1d70:	98 f0       	brcs	.+38     	; 0x1d98 <__fp_cmp+0x46>
    1d72:	62 1b       	sub	r22, r18
    1d74:	73 0b       	sbc	r23, r19
    1d76:	84 0b       	sbc	r24, r20
    1d78:	95 0b       	sbc	r25, r21
    1d7a:	39 f4       	brne	.+14     	; 0x1d8a <__fp_cmp+0x38>
    1d7c:	0a 26       	eor	r0, r26
    1d7e:	61 f0       	breq	.+24     	; 0x1d98 <__fp_cmp+0x46>
    1d80:	23 2b       	or	r18, r19
    1d82:	24 2b       	or	r18, r20
    1d84:	25 2b       	or	r18, r21
    1d86:	21 f4       	brne	.+8      	; 0x1d90 <__fp_cmp+0x3e>
    1d88:	08 95       	ret
    1d8a:	0a 26       	eor	r0, r26
    1d8c:	09 f4       	brne	.+2      	; 0x1d90 <__fp_cmp+0x3e>
    1d8e:	a1 40       	sbci	r26, 0x01	; 1
    1d90:	a6 95       	lsr	r26
    1d92:	8f ef       	ldi	r24, 0xFF	; 255
    1d94:	81 1d       	adc	r24, r1
    1d96:	81 1d       	adc	r24, r1
    1d98:	08 95       	ret

00001d9a <__fp_split3>:
    1d9a:	57 fd       	sbrc	r21, 7
    1d9c:	90 58       	subi	r25, 0x80	; 128
    1d9e:	44 0f       	add	r20, r20
    1da0:	55 1f       	adc	r21, r21
    1da2:	59 f0       	breq	.+22     	; 0x1dba <__fp_splitA+0x10>
    1da4:	5f 3f       	cpi	r21, 0xFF	; 255
    1da6:	71 f0       	breq	.+28     	; 0x1dc4 <__fp_splitA+0x1a>
    1da8:	47 95       	ror	r20

00001daa <__fp_splitA>:
    1daa:	88 0f       	add	r24, r24
    1dac:	97 fb       	bst	r25, 7
    1dae:	99 1f       	adc	r25, r25
    1db0:	61 f0       	breq	.+24     	; 0x1dca <__fp_splitA+0x20>
    1db2:	9f 3f       	cpi	r25, 0xFF	; 255
    1db4:	79 f0       	breq	.+30     	; 0x1dd4 <__fp_splitA+0x2a>
    1db6:	87 95       	ror	r24
    1db8:	08 95       	ret
    1dba:	12 16       	cp	r1, r18
    1dbc:	13 06       	cpc	r1, r19
    1dbe:	14 06       	cpc	r1, r20
    1dc0:	55 1f       	adc	r21, r21
    1dc2:	f2 cf       	rjmp	.-28     	; 0x1da8 <__fp_split3+0xe>
    1dc4:	46 95       	lsr	r20
    1dc6:	f1 df       	rcall	.-30     	; 0x1daa <__fp_splitA>
    1dc8:	08 c0       	rjmp	.+16     	; 0x1dda <__fp_splitA+0x30>
    1dca:	16 16       	cp	r1, r22
    1dcc:	17 06       	cpc	r1, r23
    1dce:	18 06       	cpc	r1, r24
    1dd0:	99 1f       	adc	r25, r25
    1dd2:	f1 cf       	rjmp	.-30     	; 0x1db6 <__fp_splitA+0xc>
    1dd4:	86 95       	lsr	r24
    1dd6:	71 05       	cpc	r23, r1
    1dd8:	61 05       	cpc	r22, r1
    1dda:	08 94       	sec
    1ddc:	08 95       	ret

00001dde <__fp_zero>:
    1dde:	e8 94       	clt

00001de0 <__fp_szero>:
    1de0:	bb 27       	eor	r27, r27
    1de2:	66 27       	eor	r22, r22
    1de4:	77 27       	eor	r23, r23
    1de6:	cb 01       	movw	r24, r22
    1de8:	97 f9       	bld	r25, 7
    1dea:	08 95       	ret

00001dec <__gesf2>:
    1dec:	b2 df       	rcall	.-156    	; 0x1d52 <__fp_cmp>
    1dee:	08 f4       	brcc	.+2      	; 0x1df2 <__gesf2+0x6>
    1df0:	8f ef       	ldi	r24, 0xFF	; 255
    1df2:	08 95       	ret

00001df4 <__mulsf3>:
    1df4:	0b d0       	rcall	.+22     	; 0x1e0c <__mulsf3x>
    1df6:	78 c0       	rjmp	.+240    	; 0x1ee8 <__fp_round>
    1df8:	69 d0       	rcall	.+210    	; 0x1ecc <__fp_pscA>
    1dfa:	28 f0       	brcs	.+10     	; 0x1e06 <__mulsf3+0x12>
    1dfc:	6e d0       	rcall	.+220    	; 0x1eda <__fp_pscB>
    1dfe:	18 f0       	brcs	.+6      	; 0x1e06 <__mulsf3+0x12>
    1e00:	95 23       	and	r25, r21
    1e02:	09 f0       	breq	.+2      	; 0x1e06 <__mulsf3+0x12>
    1e04:	5a c0       	rjmp	.+180    	; 0x1eba <__fp_inf>
    1e06:	5f c0       	rjmp	.+190    	; 0x1ec6 <__fp_nan>
    1e08:	11 24       	eor	r1, r1
    1e0a:	ea cf       	rjmp	.-44     	; 0x1de0 <__fp_szero>

00001e0c <__mulsf3x>:
    1e0c:	c6 df       	rcall	.-116    	; 0x1d9a <__fp_split3>
    1e0e:	a0 f3       	brcs	.-24     	; 0x1df8 <__mulsf3+0x4>

00001e10 <__mulsf3_pse>:
    1e10:	95 9f       	mul	r25, r21
    1e12:	d1 f3       	breq	.-12     	; 0x1e08 <__mulsf3+0x14>
    1e14:	95 0f       	add	r25, r21
    1e16:	50 e0       	ldi	r21, 0x00	; 0
    1e18:	55 1f       	adc	r21, r21
    1e1a:	62 9f       	mul	r22, r18
    1e1c:	f0 01       	movw	r30, r0
    1e1e:	72 9f       	mul	r23, r18
    1e20:	bb 27       	eor	r27, r27
    1e22:	f0 0d       	add	r31, r0
    1e24:	b1 1d       	adc	r27, r1
    1e26:	63 9f       	mul	r22, r19
    1e28:	aa 27       	eor	r26, r26
    1e2a:	f0 0d       	add	r31, r0
    1e2c:	b1 1d       	adc	r27, r1
    1e2e:	aa 1f       	adc	r26, r26
    1e30:	64 9f       	mul	r22, r20
    1e32:	66 27       	eor	r22, r22
    1e34:	b0 0d       	add	r27, r0
    1e36:	a1 1d       	adc	r26, r1
    1e38:	66 1f       	adc	r22, r22
    1e3a:	82 9f       	mul	r24, r18
    1e3c:	22 27       	eor	r18, r18
    1e3e:	b0 0d       	add	r27, r0
    1e40:	a1 1d       	adc	r26, r1
    1e42:	62 1f       	adc	r22, r18
    1e44:	73 9f       	mul	r23, r19
    1e46:	b0 0d       	add	r27, r0
    1e48:	a1 1d       	adc	r26, r1
    1e4a:	62 1f       	adc	r22, r18
    1e4c:	83 9f       	mul	r24, r19
    1e4e:	a0 0d       	add	r26, r0
    1e50:	61 1d       	adc	r22, r1
    1e52:	22 1f       	adc	r18, r18
    1e54:	74 9f       	mul	r23, r20
    1e56:	33 27       	eor	r19, r19
    1e58:	a0 0d       	add	r26, r0
    1e5a:	61 1d       	adc	r22, r1
    1e5c:	23 1f       	adc	r18, r19
    1e5e:	84 9f       	mul	r24, r20
    1e60:	60 0d       	add	r22, r0
    1e62:	21 1d       	adc	r18, r1
    1e64:	82 2f       	mov	r24, r18
    1e66:	76 2f       	mov	r23, r22
    1e68:	6a 2f       	mov	r22, r26
    1e6a:	11 24       	eor	r1, r1
    1e6c:	9f 57       	subi	r25, 0x7F	; 127
    1e6e:	50 40       	sbci	r21, 0x00	; 0
    1e70:	8a f0       	brmi	.+34     	; 0x1e94 <__mulsf3_pse+0x84>
    1e72:	e1 f0       	breq	.+56     	; 0x1eac <__mulsf3_pse+0x9c>
    1e74:	88 23       	and	r24, r24
    1e76:	4a f0       	brmi	.+18     	; 0x1e8a <__mulsf3_pse+0x7a>
    1e78:	ee 0f       	add	r30, r30
    1e7a:	ff 1f       	adc	r31, r31
    1e7c:	bb 1f       	adc	r27, r27
    1e7e:	66 1f       	adc	r22, r22
    1e80:	77 1f       	adc	r23, r23
    1e82:	88 1f       	adc	r24, r24
    1e84:	91 50       	subi	r25, 0x01	; 1
    1e86:	50 40       	sbci	r21, 0x00	; 0
    1e88:	a9 f7       	brne	.-22     	; 0x1e74 <__mulsf3_pse+0x64>
    1e8a:	9e 3f       	cpi	r25, 0xFE	; 254
    1e8c:	51 05       	cpc	r21, r1
    1e8e:	70 f0       	brcs	.+28     	; 0x1eac <__mulsf3_pse+0x9c>
    1e90:	14 c0       	rjmp	.+40     	; 0x1eba <__fp_inf>
    1e92:	a6 cf       	rjmp	.-180    	; 0x1de0 <__fp_szero>
    1e94:	5f 3f       	cpi	r21, 0xFF	; 255
    1e96:	ec f3       	brlt	.-6      	; 0x1e92 <__mulsf3_pse+0x82>
    1e98:	98 3e       	cpi	r25, 0xE8	; 232
    1e9a:	dc f3       	brlt	.-10     	; 0x1e92 <__mulsf3_pse+0x82>
    1e9c:	86 95       	lsr	r24
    1e9e:	77 95       	ror	r23
    1ea0:	67 95       	ror	r22
    1ea2:	b7 95       	ror	r27
    1ea4:	f7 95       	ror	r31
    1ea6:	e7 95       	ror	r30
    1ea8:	9f 5f       	subi	r25, 0xFF	; 255
    1eaa:	c1 f7       	brne	.-16     	; 0x1e9c <__mulsf3_pse+0x8c>
    1eac:	fe 2b       	or	r31, r30
    1eae:	88 0f       	add	r24, r24
    1eb0:	91 1d       	adc	r25, r1
    1eb2:	96 95       	lsr	r25
    1eb4:	87 95       	ror	r24
    1eb6:	97 f9       	bld	r25, 7
    1eb8:	08 95       	ret

00001eba <__fp_inf>:
    1eba:	97 f9       	bld	r25, 7
    1ebc:	9f 67       	ori	r25, 0x7F	; 127
    1ebe:	80 e8       	ldi	r24, 0x80	; 128
    1ec0:	70 e0       	ldi	r23, 0x00	; 0
    1ec2:	60 e0       	ldi	r22, 0x00	; 0
    1ec4:	08 95       	ret

00001ec6 <__fp_nan>:
    1ec6:	9f ef       	ldi	r25, 0xFF	; 255
    1ec8:	80 ec       	ldi	r24, 0xC0	; 192
    1eca:	08 95       	ret

00001ecc <__fp_pscA>:
    1ecc:	00 24       	eor	r0, r0
    1ece:	0a 94       	dec	r0
    1ed0:	16 16       	cp	r1, r22
    1ed2:	17 06       	cpc	r1, r23
    1ed4:	18 06       	cpc	r1, r24
    1ed6:	09 06       	cpc	r0, r25
    1ed8:	08 95       	ret

00001eda <__fp_pscB>:
    1eda:	00 24       	eor	r0, r0
    1edc:	0a 94       	dec	r0
    1ede:	12 16       	cp	r1, r18
    1ee0:	13 06       	cpc	r1, r19
    1ee2:	14 06       	cpc	r1, r20
    1ee4:	05 06       	cpc	r0, r21
    1ee6:	08 95       	ret

00001ee8 <__fp_round>:
    1ee8:	09 2e       	mov	r0, r25
    1eea:	03 94       	inc	r0
    1eec:	00 0c       	add	r0, r0
    1eee:	11 f4       	brne	.+4      	; 0x1ef4 <__fp_round+0xc>
    1ef0:	88 23       	and	r24, r24
    1ef2:	52 f0       	brmi	.+20     	; 0x1f08 <__fp_round+0x20>
    1ef4:	bb 0f       	add	r27, r27
    1ef6:	40 f4       	brcc	.+16     	; 0x1f08 <__fp_round+0x20>
    1ef8:	bf 2b       	or	r27, r31
    1efa:	11 f4       	brne	.+4      	; 0x1f00 <__fp_round+0x18>
    1efc:	60 ff       	sbrs	r22, 0
    1efe:	04 c0       	rjmp	.+8      	; 0x1f08 <__fp_round+0x20>
    1f00:	6f 5f       	subi	r22, 0xFF	; 255
    1f02:	7f 4f       	sbci	r23, 0xFF	; 255
    1f04:	8f 4f       	sbci	r24, 0xFF	; 255
    1f06:	9f 4f       	sbci	r25, 0xFF	; 255
    1f08:	08 95       	ret

00001f0a <_exit>:
    1f0a:	f8 94       	cli

00001f0c <__stop_program>:
    1f0c:	ff cf       	rjmp	.-2      	; 0x1f0c <__stop_program>
