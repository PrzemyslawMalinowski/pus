
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000193c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000193c  000019b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001638  00000000  00000000  000019b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000057e  00000000  00000000  00002fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  00003568  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ad7  00000000  00000000  00003608  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001a9  00000000  00000000  000040df  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000067e  00000000  00000000  00004288  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  00004908  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000011b  00000000  00000000  00004a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001f9  00000000  00000000  00004b37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e3       	ldi	r30, 0x3C	; 60
      68:	f9 e1       	ldi	r31, 0x19	; 25
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 36       	cpi	r26, 0x60	; 96
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a0 e6       	ldi	r26, 0x60	; 96
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 36       	cpi	r26, 0x60	; 96
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 84 0b 	call	0x1708	; 0x1708 <main>
      8a:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <wyluskajStare>:
 */ 

#include <stdio.h>
#include <avr/io.h>

void wyluskajStare(uint8_t vale){
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	0f 92       	push	r0
      98:	cd b7       	in	r28, 0x3d	; 61
      9a:	de b7       	in	r29, 0x3e	; 62
      9c:	89 83       	std	Y+1, r24	; 0x01
	PORTA = (PORTA&0xF0)|((vale&0xF0)>>4);
      9e:	8b e3       	ldi	r24, 0x3B	; 59
      a0:	90 e0       	ldi	r25, 0x00	; 0
      a2:	2b e3       	ldi	r18, 0x3B	; 59
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	f9 01       	movw	r30, r18
      a8:	20 81       	ld	r18, Z
      aa:	32 2f       	mov	r19, r18
      ac:	30 7f       	andi	r19, 0xF0	; 240
      ae:	29 81       	ldd	r18, Y+1	; 0x01
      b0:	22 95       	swap	r18
      b2:	2f 70       	andi	r18, 0x0F	; 15
      b4:	23 2b       	or	r18, r19
      b6:	fc 01       	movw	r30, r24
      b8:	20 83       	st	Z, r18
}
      ba:	0f 90       	pop	r0
      bc:	df 91       	pop	r29
      be:	cf 91       	pop	r28
      c0:	08 95       	ret

000000c2 <wyluskajMlode>:

void wyluskajMlode(uint8_t vale){
      c2:	cf 93       	push	r28
      c4:	df 93       	push	r29
      c6:	0f 92       	push	r0
      c8:	cd b7       	in	r28, 0x3d	; 61
      ca:	de b7       	in	r29, 0x3e	; 62
      cc:	89 83       	std	Y+1, r24	; 0x01
	PORTA = (PORTA&0xF0)|(vale & 0x0F);
      ce:	8b e3       	ldi	r24, 0x3B	; 59
      d0:	90 e0       	ldi	r25, 0x00	; 0
      d2:	2b e3       	ldi	r18, 0x3B	; 59
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	f9 01       	movw	r30, r18
      d8:	20 81       	ld	r18, Z
      da:	32 2f       	mov	r19, r18
      dc:	30 7f       	andi	r19, 0xF0	; 240
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	2f 70       	andi	r18, 0x0F	; 15
      e2:	23 2b       	or	r18, r19
      e4:	fc 01       	movw	r30, r24
      e6:	20 83       	st	Z, r18
}
      e8:	0f 90       	pop	r0
      ea:	df 91       	pop	r29
      ec:	cf 91       	pop	r28
      ee:	08 95       	ret

000000f0 <wyslijDane>:

void wyslijDane(uint8_t v){
      f0:	cf 93       	push	r28
      f2:	df 93       	push	r29
      f4:	0f 92       	push	r0
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	89 83       	std	Y+1, r24	; 0x01
		
	PORTA =  (PORTA | 0b01000000);//Wlac		
      fc:	8b e3       	ldi	r24, 0x3B	; 59
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	2b e3       	ldi	r18, 0x3B	; 59
     102:	30 e0       	ldi	r19, 0x00	; 0
     104:	f9 01       	movw	r30, r18
     106:	20 81       	ld	r18, Z
     108:	20 64       	ori	r18, 0x40	; 64
     10a:	fc 01       	movw	r30, r24
     10c:	20 83       	st	Z, r18
	PORTA =  (PORTA | 0b10000000);//Nadajemy literki
     10e:	8b e3       	ldi	r24, 0x3B	; 59
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	2b e3       	ldi	r18, 0x3B	; 59
     114:	30 e0       	ldi	r19, 0x00	; 0
     116:	f9 01       	movw	r30, r18
     118:	20 81       	ld	r18, Z
     11a:	20 68       	ori	r18, 0x80	; 128
     11c:	fc 01       	movw	r30, r24
     11e:	20 83       	st	Z, r18
	wyluskajStare(v);
     120:	89 81       	ldd	r24, Y+1	; 0x01
     122:	0e 94 49 00 	call	0x92	; 0x92 <wyluskajStare>
	PORTA =  (PORTA & 0b10111111); //Wylacz lock
     126:	8b e3       	ldi	r24, 0x3B	; 59
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	2b e3       	ldi	r18, 0x3B	; 59
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	f9 01       	movw	r30, r18
     130:	20 81       	ld	r18, Z
     132:	2f 7b       	andi	r18, 0xBF	; 191
     134:	fc 01       	movw	r30, r24
     136:	20 83       	st	Z, r18
	
	PORTA =  (PORTA | 0b01000000);//Lock
     138:	8b e3       	ldi	r24, 0x3B	; 59
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	2b e3       	ldi	r18, 0x3B	; 59
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	f9 01       	movw	r30, r18
     142:	20 81       	ld	r18, Z
     144:	20 64       	ori	r18, 0x40	; 64
     146:	fc 01       	movw	r30, r24
     148:	20 83       	st	Z, r18
	wyluskajMlode(v);
     14a:	89 81       	ldd	r24, Y+1	; 0x01
     14c:	0e 94 61 00 	call	0xc2	; 0xc2 <wyluskajMlode>
	PORTA =  (PORTA & 0b10111111); //Wylacz lock
     150:	8b e3       	ldi	r24, 0x3B	; 59
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	2b e3       	ldi	r18, 0x3B	; 59
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	f9 01       	movw	r30, r18
     15a:	20 81       	ld	r18, Z
     15c:	2f 7b       	andi	r18, 0xBF	; 191
     15e:	fc 01       	movw	r30, r24
     160:	20 83       	st	Z, r18
	PORTA &=  0b10111111;
     162:	8b e3       	ldi	r24, 0x3B	; 59
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	2b e3       	ldi	r18, 0x3B	; 59
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	f9 01       	movw	r30, r18
     16c:	20 81       	ld	r18, Z
     16e:	2f 7b       	andi	r18, 0xBF	; 191
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18
	PORTA =  (PORTA & 0b10111111); //Wylacz lock
     174:	8b e3       	ldi	r24, 0x3B	; 59
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	2b e3       	ldi	r18, 0x3B	; 59
     17a:	30 e0       	ldi	r19, 0x00	; 0
     17c:	f9 01       	movw	r30, r18
     17e:	20 81       	ld	r18, Z
     180:	2f 7b       	andi	r18, 0xBF	; 191
     182:	fc 01       	movw	r30, r24
     184:	20 83       	st	Z, r18
	
}
     186:	0f 90       	pop	r0
     188:	df 91       	pop	r29
     18a:	cf 91       	pop	r28
     18c:	08 95       	ret

0000018e <wyslijComend>:
void wyslijComend(uint8_t v){
     18e:	cf 93       	push	r28
     190:	df 93       	push	r29
     192:	0f 92       	push	r0
     194:	cd b7       	in	r28, 0x3d	; 61
     196:	de b7       	in	r29, 0x3e	; 62
     198:	89 83       	std	Y+1, r24	; 0x01
	PORTA |= 0x40;
     19a:	8b e3       	ldi	r24, 0x3B	; 59
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	2b e3       	ldi	r18, 0x3B	; 59
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	f9 01       	movw	r30, r18
     1a4:	20 81       	ld	r18, Z
     1a6:	20 64       	ori	r18, 0x40	; 64
     1a8:	fc 01       	movw	r30, r24
     1aa:	20 83       	st	Z, r18
	PORTA =  ((PORTA & 0xF0)|( v & 0x0F));
     1ac:	8b e3       	ldi	r24, 0x3B	; 59
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	2b e3       	ldi	r18, 0x3B	; 59
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	f9 01       	movw	r30, r18
     1b6:	20 81       	ld	r18, Z
     1b8:	32 2f       	mov	r19, r18
     1ba:	30 7f       	andi	r19, 0xF0	; 240
     1bc:	29 81       	ldd	r18, Y+1	; 0x01
     1be:	2f 70       	andi	r18, 0x0F	; 15
     1c0:	23 2b       	or	r18, r19
     1c2:	fc 01       	movw	r30, r24
     1c4:	20 83       	st	Z, r18
	PORTA &= ~0x40;
     1c6:	8b e3       	ldi	r24, 0x3B	; 59
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	2b e3       	ldi	r18, 0x3B	; 59
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	f9 01       	movw	r30, r18
     1d0:	20 81       	ld	r18, Z
     1d2:	2f 7b       	andi	r18, 0xBF	; 191
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18

}
     1d8:	0f 90       	pop	r0
     1da:	df 91       	pop	r29
     1dc:	cf 91       	pop	r28
     1de:	08 95       	ret

000001e0 <wyslijNapis>:

void wyslijNapis(char* text){
     1e0:	cf 93       	push	r28
     1e2:	df 93       	push	r29
     1e4:	00 d0       	rcall	.+0      	; 0x1e6 <wyslijNapis+0x6>
     1e6:	cd b7       	in	r28, 0x3d	; 61
     1e8:	de b7       	in	r29, 0x3e	; 62
     1ea:	9a 83       	std	Y+2, r25	; 0x02
     1ec:	89 83       	std	Y+1, r24	; 0x01
	while (*text != 0)
     1ee:	0b c0       	rjmp	.+22     	; 0x206 <wyslijNapis+0x26>
	{
		wyslijDane(*text);
     1f0:	89 81       	ldd	r24, Y+1	; 0x01
     1f2:	9a 81       	ldd	r25, Y+2	; 0x02
     1f4:	fc 01       	movw	r30, r24
     1f6:	80 81       	ld	r24, Z
     1f8:	0e 94 78 00 	call	0xf0	; 0xf0 <wyslijDane>
		text++;
     1fc:	89 81       	ldd	r24, Y+1	; 0x01
     1fe:	9a 81       	ldd	r25, Y+2	; 0x02
     200:	01 96       	adiw	r24, 0x01	; 1
     202:	9a 83       	std	Y+2, r25	; 0x02
     204:	89 83       	std	Y+1, r24	; 0x01
	PORTA &= ~0x40;

}

void wyslijNapis(char* text){
	while (*text != 0)
     206:	89 81       	ldd	r24, Y+1	; 0x01
     208:	9a 81       	ldd	r25, Y+2	; 0x02
     20a:	fc 01       	movw	r30, r24
     20c:	80 81       	ld	r24, Z
     20e:	88 23       	and	r24, r24
     210:	79 f7       	brne	.-34     	; 0x1f0 <wyslijNapis+0x10>
	{
		wyslijDane(*text);
		text++;
	}
     212:	0f 90       	pop	r0
     214:	0f 90       	pop	r0
     216:	df 91       	pop	r29
     218:	cf 91       	pop	r28
     21a:	08 95       	ret

0000021c <initLCD>:
#include <util/delay.h>

#include "dodatki.h"

void initLCD()
{
     21c:	0f 93       	push	r16
     21e:	1f 93       	push	r17
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	cd b7       	in	r28, 0x3d	; 61
     226:	de b7       	in	r29, 0x3e	; 62
     228:	c6 5c       	subi	r28, 0xC6	; 198
     22a:	d0 40       	sbci	r29, 0x00	; 0
     22c:	0f b6       	in	r0, 0x3f	; 63
     22e:	f8 94       	cli
     230:	de bf       	out	0x3e, r29	; 62
     232:	0f be       	out	0x3f, r0	; 63
     234:	cd bf       	out	0x3d, r28	; 61
     236:	80 e0       	ldi	r24, 0x00	; 0
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	a0 e7       	ldi	r26, 0x70	; 112
     23c:	b1 e4       	ldi	r27, 0x41	; 65
     23e:	8b 83       	std	Y+3, r24	; 0x03
     240:	9c 83       	std	Y+4, r25	; 0x04
     242:	ad 83       	std	Y+5, r26	; 0x05
     244:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     246:	6b 81       	ldd	r22, Y+3	; 0x03
     248:	7c 81       	ldd	r23, Y+4	; 0x04
     24a:	8d 81       	ldd	r24, Y+5	; 0x05
     24c:	9e 81       	ldd	r25, Y+6	; 0x06
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	4a e7       	ldi	r20, 0x7A	; 122
     254:	55 e4       	ldi	r21, 0x45	; 69
     256:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     25a:	dc 01       	movw	r26, r24
     25c:	cb 01       	movw	r24, r22
     25e:	8f 83       	std	Y+7, r24	; 0x07
     260:	98 87       	std	Y+8, r25	; 0x08
     262:	a9 87       	std	Y+9, r26	; 0x09
     264:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     266:	11 e0       	ldi	r17, 0x01	; 1
     268:	6f 81       	ldd	r22, Y+7	; 0x07
     26a:	78 85       	ldd	r23, Y+8	; 0x08
     26c:	89 85       	ldd	r24, Y+9	; 0x09
     26e:	9a 85       	ldd	r25, Y+10	; 0x0a
     270:	20 e0       	ldi	r18, 0x00	; 0
     272:	30 e0       	ldi	r19, 0x00	; 0
     274:	40 e8       	ldi	r20, 0x80	; 128
     276:	5f e3       	ldi	r21, 0x3F	; 63
     278:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     27c:	88 23       	and	r24, r24
     27e:	0c f0       	brlt	.+2      	; 0x282 <initLCD+0x66>
     280:	10 e0       	ldi	r17, 0x00	; 0
     282:	11 23       	and	r17, r17
     284:	29 f0       	breq	.+10     	; 0x290 <initLCD+0x74>
		__ticks = 1;
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	9c 87       	std	Y+12, r25	; 0x0c
     28c:	8b 87       	std	Y+11, r24	; 0x0b
     28e:	46 c0       	rjmp	.+140    	; 0x31c <initLCD+0x100>
	else if (__tmp > 65535)
     290:	11 e0       	ldi	r17, 0x01	; 1
     292:	6f 81       	ldd	r22, Y+7	; 0x07
     294:	78 85       	ldd	r23, Y+8	; 0x08
     296:	89 85       	ldd	r24, Y+9	; 0x09
     298:	9a 85       	ldd	r25, Y+10	; 0x0a
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	3f ef       	ldi	r19, 0xFF	; 255
     29e:	4f e7       	ldi	r20, 0x7F	; 127
     2a0:	57 e4       	ldi	r21, 0x47	; 71
     2a2:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     2a6:	18 16       	cp	r1, r24
     2a8:	0c f0       	brlt	.+2      	; 0x2ac <initLCD+0x90>
     2aa:	10 e0       	ldi	r17, 0x00	; 0
     2ac:	11 23       	and	r17, r17
     2ae:	61 f1       	breq	.+88     	; 0x308 <initLCD+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2b0:	6b 81       	ldd	r22, Y+3	; 0x03
     2b2:	7c 81       	ldd	r23, Y+4	; 0x04
     2b4:	8d 81       	ldd	r24, Y+5	; 0x05
     2b6:	9e 81       	ldd	r25, Y+6	; 0x06
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e2       	ldi	r20, 0x20	; 32
     2be:	51 e4       	ldi	r21, 0x41	; 65
     2c0:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     2c4:	dc 01       	movw	r26, r24
     2c6:	cb 01       	movw	r24, r22
     2c8:	bc 01       	movw	r22, r24
     2ca:	cd 01       	movw	r24, r26
     2cc:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     2d0:	dc 01       	movw	r26, r24
     2d2:	cb 01       	movw	r24, r22
     2d4:	9c 87       	std	Y+12, r25	; 0x0c
     2d6:	8b 87       	std	Y+11, r24	; 0x0b
     2d8:	12 c0       	rjmp	.+36     	; 0x2fe <initLCD+0xe2>
     2da:	80 e9       	ldi	r24, 0x90	; 144
     2dc:	91 e0       	ldi	r25, 0x01	; 1
     2de:	9e 87       	std	Y+14, r25	; 0x0e
     2e0:	8d 87       	std	Y+13, r24	; 0x0d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2e2:	8d 85       	ldd	r24, Y+13	; 0x0d
     2e4:	9e 85       	ldd	r25, Y+14	; 0x0e
     2e6:	8c 01       	movw	r16, r24
     2e8:	c8 01       	movw	r24, r16
     2ea:	01 97       	sbiw	r24, 0x01	; 1
     2ec:	f1 f7       	brne	.-4      	; 0x2ea <initLCD+0xce>
     2ee:	8c 01       	movw	r16, r24
     2f0:	1e 87       	std	Y+14, r17	; 0x0e
     2f2:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2f4:	8b 85       	ldd	r24, Y+11	; 0x0b
     2f6:	9c 85       	ldd	r25, Y+12	; 0x0c
     2f8:	01 97       	sbiw	r24, 0x01	; 1
     2fa:	9c 87       	std	Y+12, r25	; 0x0c
     2fc:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2fe:	8b 85       	ldd	r24, Y+11	; 0x0b
     300:	9c 85       	ldd	r25, Y+12	; 0x0c
     302:	00 97       	sbiw	r24, 0x00	; 0
     304:	51 f7       	brne	.-44     	; 0x2da <initLCD+0xbe>
     306:	17 c0       	rjmp	.+46     	; 0x336 <initLCD+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     308:	6f 81       	ldd	r22, Y+7	; 0x07
     30a:	78 85       	ldd	r23, Y+8	; 0x08
     30c:	89 85       	ldd	r24, Y+9	; 0x09
     30e:	9a 85       	ldd	r25, Y+10	; 0x0a
     310:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     314:	dc 01       	movw	r26, r24
     316:	cb 01       	movw	r24, r22
     318:	9c 87       	std	Y+12, r25	; 0x0c
     31a:	8b 87       	std	Y+11, r24	; 0x0b
     31c:	8b 85       	ldd	r24, Y+11	; 0x0b
     31e:	9c 85       	ldd	r25, Y+12	; 0x0c
     320:	98 8b       	std	Y+16, r25	; 0x10
     322:	8f 87       	std	Y+15, r24	; 0x0f
     324:	8f 85       	ldd	r24, Y+15	; 0x0f
     326:	98 89       	ldd	r25, Y+16	; 0x10
     328:	8c 01       	movw	r16, r24
     32a:	f8 01       	movw	r30, r16
     32c:	31 97       	sbiw	r30, 0x01	; 1
     32e:	f1 f7       	brne	.-4      	; 0x32c <initLCD+0x110>
     330:	8f 01       	movw	r16, r30
     332:	18 8b       	std	Y+16, r17	; 0x10
     334:	0f 87       	std	Y+15, r16	; 0x0f
	_delay_ms(15);
	for (int i=0;i<3;i++)
     336:	1a 82       	std	Y+2, r1	; 0x02
     338:	19 82       	std	Y+1, r1	; 0x01
     33a:	88 c0       	rjmp	.+272    	; 0x44c <initLCD+0x230>
	{
		wyslijComend(0b00000011);
     33c:	83 e0       	ldi	r24, 0x03	; 3
     33e:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	a0 ea       	ldi	r26, 0xA0	; 160
     348:	b0 e4       	ldi	r27, 0x40	; 64
     34a:	89 8b       	std	Y+17, r24	; 0x11
     34c:	9a 8b       	std	Y+18, r25	; 0x12
     34e:	ab 8b       	std	Y+19, r26	; 0x13
     350:	bc 8b       	std	Y+20, r27	; 0x14
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     352:	69 89       	ldd	r22, Y+17	; 0x11
     354:	7a 89       	ldd	r23, Y+18	; 0x12
     356:	8b 89       	ldd	r24, Y+19	; 0x13
     358:	9c 89       	ldd	r25, Y+20	; 0x14
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	4a e7       	ldi	r20, 0x7A	; 122
     360:	55 e4       	ldi	r21, 0x45	; 69
     362:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     366:	dc 01       	movw	r26, r24
     368:	cb 01       	movw	r24, r22
     36a:	8d 8b       	std	Y+21, r24	; 0x15
     36c:	9e 8b       	std	Y+22, r25	; 0x16
     36e:	af 8b       	std	Y+23, r26	; 0x17
     370:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     372:	11 e0       	ldi	r17, 0x01	; 1
     374:	6d 89       	ldd	r22, Y+21	; 0x15
     376:	7e 89       	ldd	r23, Y+22	; 0x16
     378:	8f 89       	ldd	r24, Y+23	; 0x17
     37a:	98 8d       	ldd	r25, Y+24	; 0x18
     37c:	20 e0       	ldi	r18, 0x00	; 0
     37e:	30 e0       	ldi	r19, 0x00	; 0
     380:	40 e8       	ldi	r20, 0x80	; 128
     382:	5f e3       	ldi	r21, 0x3F	; 63
     384:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     388:	88 23       	and	r24, r24
     38a:	0c f0       	brlt	.+2      	; 0x38e <initLCD+0x172>
     38c:	10 e0       	ldi	r17, 0x00	; 0
     38e:	11 23       	and	r17, r17
     390:	29 f0       	breq	.+10     	; 0x39c <initLCD+0x180>
		__ticks = 1;
     392:	81 e0       	ldi	r24, 0x01	; 1
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	9a 8f       	std	Y+26, r25	; 0x1a
     398:	89 8f       	std	Y+25, r24	; 0x19
     39a:	46 c0       	rjmp	.+140    	; 0x428 <initLCD+0x20c>
	else if (__tmp > 65535)
     39c:	11 e0       	ldi	r17, 0x01	; 1
     39e:	6d 89       	ldd	r22, Y+21	; 0x15
     3a0:	7e 89       	ldd	r23, Y+22	; 0x16
     3a2:	8f 89       	ldd	r24, Y+23	; 0x17
     3a4:	98 8d       	ldd	r25, Y+24	; 0x18
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	3f ef       	ldi	r19, 0xFF	; 255
     3aa:	4f e7       	ldi	r20, 0x7F	; 127
     3ac:	57 e4       	ldi	r21, 0x47	; 71
     3ae:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     3b2:	18 16       	cp	r1, r24
     3b4:	0c f0       	brlt	.+2      	; 0x3b8 <initLCD+0x19c>
     3b6:	10 e0       	ldi	r17, 0x00	; 0
     3b8:	11 23       	and	r17, r17
     3ba:	61 f1       	breq	.+88     	; 0x414 <initLCD+0x1f8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3bc:	69 89       	ldd	r22, Y+17	; 0x11
     3be:	7a 89       	ldd	r23, Y+18	; 0x12
     3c0:	8b 89       	ldd	r24, Y+19	; 0x13
     3c2:	9c 89       	ldd	r25, Y+20	; 0x14
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e2       	ldi	r20, 0x20	; 32
     3ca:	51 e4       	ldi	r21, 0x41	; 65
     3cc:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     3d0:	dc 01       	movw	r26, r24
     3d2:	cb 01       	movw	r24, r22
     3d4:	bc 01       	movw	r22, r24
     3d6:	cd 01       	movw	r24, r26
     3d8:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     3dc:	dc 01       	movw	r26, r24
     3de:	cb 01       	movw	r24, r22
     3e0:	9a 8f       	std	Y+26, r25	; 0x1a
     3e2:	89 8f       	std	Y+25, r24	; 0x19
     3e4:	12 c0       	rjmp	.+36     	; 0x40a <initLCD+0x1ee>
     3e6:	80 e9       	ldi	r24, 0x90	; 144
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	9c 8f       	std	Y+28, r25	; 0x1c
     3ec:	8b 8f       	std	Y+27, r24	; 0x1b
     3ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
     3f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     3f2:	8c 01       	movw	r16, r24
     3f4:	c8 01       	movw	r24, r16
     3f6:	01 97       	sbiw	r24, 0x01	; 1
     3f8:	f1 f7       	brne	.-4      	; 0x3f6 <initLCD+0x1da>
     3fa:	8c 01       	movw	r16, r24
     3fc:	1c 8f       	std	Y+28, r17	; 0x1c
     3fe:	0b 8f       	std	Y+27, r16	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     400:	89 8d       	ldd	r24, Y+25	; 0x19
     402:	9a 8d       	ldd	r25, Y+26	; 0x1a
     404:	01 97       	sbiw	r24, 0x01	; 1
     406:	9a 8f       	std	Y+26, r25	; 0x1a
     408:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     40a:	89 8d       	ldd	r24, Y+25	; 0x19
     40c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     40e:	00 97       	sbiw	r24, 0x00	; 0
     410:	51 f7       	brne	.-44     	; 0x3e6 <initLCD+0x1ca>
     412:	17 c0       	rjmp	.+46     	; 0x442 <initLCD+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     414:	6d 89       	ldd	r22, Y+21	; 0x15
     416:	7e 89       	ldd	r23, Y+22	; 0x16
     418:	8f 89       	ldd	r24, Y+23	; 0x17
     41a:	98 8d       	ldd	r25, Y+24	; 0x18
     41c:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     420:	dc 01       	movw	r26, r24
     422:	cb 01       	movw	r24, r22
     424:	9a 8f       	std	Y+26, r25	; 0x1a
     426:	89 8f       	std	Y+25, r24	; 0x19
     428:	89 8d       	ldd	r24, Y+25	; 0x19
     42a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     42c:	9e 8f       	std	Y+30, r25	; 0x1e
     42e:	8d 8f       	std	Y+29, r24	; 0x1d
     430:	8d 8d       	ldd	r24, Y+29	; 0x1d
     432:	9e 8d       	ldd	r25, Y+30	; 0x1e
     434:	8c 01       	movw	r16, r24
     436:	f8 01       	movw	r30, r16
     438:	31 97       	sbiw	r30, 0x01	; 1
     43a:	f1 f7       	brne	.-4      	; 0x438 <initLCD+0x21c>
     43c:	8f 01       	movw	r16, r30
     43e:	1e 8f       	std	Y+30, r17	; 0x1e
     440:	0d 8f       	std	Y+29, r16	; 0x1d
#include "dodatki.h"

void initLCD()
{
	_delay_ms(15);
	for (int i=0;i<3;i++)
     442:	89 81       	ldd	r24, Y+1	; 0x01
     444:	9a 81       	ldd	r25, Y+2	; 0x02
     446:	01 96       	adiw	r24, 0x01	; 1
     448:	9a 83       	std	Y+2, r25	; 0x02
     44a:	89 83       	std	Y+1, r24	; 0x01
     44c:	89 81       	ldd	r24, Y+1	; 0x01
     44e:	9a 81       	ldd	r25, Y+2	; 0x02
     450:	83 30       	cpi	r24, 0x03	; 3
     452:	91 05       	cpc	r25, r1
     454:	0c f4       	brge	.+2      	; 0x458 <initLCD+0x23c>
     456:	72 cf       	rjmp	.-284    	; 0x33c <initLCD+0x120>
	{
		wyslijComend(0b00000011);
		_delay_ms(5);		
	}
	wyslijComend(0b00000010);
     458:	82 e0       	ldi	r24, 0x02	; 2
     45a:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	a0 ea       	ldi	r26, 0xA0	; 160
     464:	b0 e4       	ldi	r27, 0x40	; 64
     466:	8f 8f       	std	Y+31, r24	; 0x1f
     468:	98 a3       	lds	r25, 0x58
     46a:	a9 a3       	lds	r26, 0x59
     46c:	ba a3       	lds	r27, 0x5a
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     46e:	6f 8d       	ldd	r22, Y+31	; 0x1f
     470:	78 a1       	lds	r23, 0x48
     472:	89 a1       	lds	r24, 0x49
     474:	9a a1       	lds	r25, 0x4a
     476:	20 e0       	ldi	r18, 0x00	; 0
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	4a e7       	ldi	r20, 0x7A	; 122
     47c:	55 e4       	ldi	r21, 0x45	; 69
     47e:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     482:	dc 01       	movw	r26, r24
     484:	cb 01       	movw	r24, r22
     486:	8b a3       	lds	r24, 0x5b
     488:	9c a3       	lds	r25, 0x5c
     48a:	ad a3       	lds	r26, 0x5d
     48c:	be a3       	lds	r27, 0x5e
	if (__tmp < 1.0)
     48e:	11 e0       	ldi	r17, 0x01	; 1
     490:	6b a1       	lds	r22, 0x4b
     492:	7c a1       	lds	r23, 0x4c
     494:	8d a1       	lds	r24, 0x4d
     496:	9e a1       	lds	r25, 0x4e
     498:	20 e0       	ldi	r18, 0x00	; 0
     49a:	30 e0       	ldi	r19, 0x00	; 0
     49c:	40 e8       	ldi	r20, 0x80	; 128
     49e:	5f e3       	ldi	r21, 0x3F	; 63
     4a0:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     4a4:	88 23       	and	r24, r24
     4a6:	0c f0       	brlt	.+2      	; 0x4aa <initLCD+0x28e>
     4a8:	10 e0       	ldi	r17, 0x00	; 0
     4aa:	11 23       	and	r17, r17
     4ac:	29 f0       	breq	.+10     	; 0x4b8 <initLCD+0x29c>
		__ticks = 1;
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	98 a7       	lds	r25, 0x78
     4b4:	8f a3       	lds	r24, 0x5f
     4b6:	46 c0       	rjmp	.+140    	; 0x544 <initLCD+0x328>
	else if (__tmp > 65535)
     4b8:	11 e0       	ldi	r17, 0x01	; 1
     4ba:	6b a1       	lds	r22, 0x4b
     4bc:	7c a1       	lds	r23, 0x4c
     4be:	8d a1       	lds	r24, 0x4d
     4c0:	9e a1       	lds	r25, 0x4e
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	3f ef       	ldi	r19, 0xFF	; 255
     4c6:	4f e7       	ldi	r20, 0x7F	; 127
     4c8:	57 e4       	ldi	r21, 0x47	; 71
     4ca:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     4ce:	18 16       	cp	r1, r24
     4d0:	0c f0       	brlt	.+2      	; 0x4d4 <initLCD+0x2b8>
     4d2:	10 e0       	ldi	r17, 0x00	; 0
     4d4:	11 23       	and	r17, r17
     4d6:	61 f1       	breq	.+88     	; 0x530 <initLCD+0x314>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4d8:	6f 8d       	ldd	r22, Y+31	; 0x1f
     4da:	78 a1       	lds	r23, 0x48
     4dc:	89 a1       	lds	r24, 0x49
     4de:	9a a1       	lds	r25, 0x4a
     4e0:	20 e0       	ldi	r18, 0x00	; 0
     4e2:	30 e0       	ldi	r19, 0x00	; 0
     4e4:	40 e2       	ldi	r20, 0x20	; 32
     4e6:	51 e4       	ldi	r21, 0x41	; 65
     4e8:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     4ec:	dc 01       	movw	r26, r24
     4ee:	cb 01       	movw	r24, r22
     4f0:	bc 01       	movw	r22, r24
     4f2:	cd 01       	movw	r24, r26
     4f4:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     4f8:	dc 01       	movw	r26, r24
     4fa:	cb 01       	movw	r24, r22
     4fc:	98 a7       	lds	r25, 0x78
     4fe:	8f a3       	lds	r24, 0x5f
     500:	12 c0       	rjmp	.+36     	; 0x526 <initLCD+0x30a>
     502:	80 e9       	ldi	r24, 0x90	; 144
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	9a a7       	lds	r25, 0x7a
     508:	89 a7       	lds	r24, 0x79
     50a:	89 a5       	lds	r24, 0x69
     50c:	9a a5       	lds	r25, 0x6a
     50e:	8c 01       	movw	r16, r24
     510:	c8 01       	movw	r24, r16
     512:	01 97       	sbiw	r24, 0x01	; 1
     514:	f1 f7       	brne	.-4      	; 0x512 <initLCD+0x2f6>
     516:	8c 01       	movw	r16, r24
     518:	1a a7       	lds	r17, 0x7a
     51a:	09 a7       	lds	r16, 0x79
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     51c:	8f a1       	lds	r24, 0x4f
     51e:	98 a5       	lds	r25, 0x68
     520:	01 97       	sbiw	r24, 0x01	; 1
     522:	98 a7       	lds	r25, 0x78
     524:	8f a3       	lds	r24, 0x5f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     526:	8f a1       	lds	r24, 0x4f
     528:	98 a5       	lds	r25, 0x68
     52a:	00 97       	sbiw	r24, 0x00	; 0
     52c:	51 f7       	brne	.-44     	; 0x502 <initLCD+0x2e6>
     52e:	17 c0       	rjmp	.+46     	; 0x55e <initLCD+0x342>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     530:	6b a1       	lds	r22, 0x4b
     532:	7c a1       	lds	r23, 0x4c
     534:	8d a1       	lds	r24, 0x4d
     536:	9e a1       	lds	r25, 0x4e
     538:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     53c:	dc 01       	movw	r26, r24
     53e:	cb 01       	movw	r24, r22
     540:	98 a7       	lds	r25, 0x78
     542:	8f a3       	lds	r24, 0x5f
     544:	8f a1       	lds	r24, 0x4f
     546:	98 a5       	lds	r25, 0x68
     548:	9c a7       	lds	r25, 0x7c
     54a:	8b a7       	lds	r24, 0x7b
     54c:	8b a5       	lds	r24, 0x6b
     54e:	9c a5       	lds	r25, 0x6c
     550:	8c 01       	movw	r16, r24
     552:	f8 01       	movw	r30, r16
     554:	31 97       	sbiw	r30, 0x01	; 1
     556:	f1 f7       	brne	.-4      	; 0x554 <initLCD+0x338>
     558:	8f 01       	movw	r16, r30
     55a:	1c a7       	lds	r17, 0x7c
     55c:	0b a7       	lds	r16, 0x7b
	_delay_ms(5);
	
	wyslijComend(0b00000010);
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	a0 ea       	ldi	r26, 0xA0	; 160
     56a:	b0 e4       	ldi	r27, 0x40	; 64
     56c:	8d a7       	lds	r24, 0x7d
     56e:	9e a7       	lds	r25, 0x7e
     570:	af a7       	lds	r26, 0x7f
     572:	b8 ab       	sts	0x58, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     574:	6d a5       	lds	r22, 0x6d
     576:	7e a5       	lds	r23, 0x6e
     578:	8f a5       	lds	r24, 0x6f
     57a:	98 a9       	sts	0x48, r25
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	4a e7       	ldi	r20, 0x7A	; 122
     582:	55 e4       	ldi	r21, 0x45	; 69
     584:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     588:	dc 01       	movw	r26, r24
     58a:	cb 01       	movw	r24, r22
     58c:	89 ab       	sts	0x59, r24
     58e:	9a ab       	sts	0x5a, r25
     590:	ab ab       	sts	0x5b, r26
     592:	bc ab       	sts	0x5c, r27
	if (__tmp < 1.0)
     594:	11 e0       	ldi	r17, 0x01	; 1
     596:	69 a9       	sts	0x49, r22
     598:	7a a9       	sts	0x4a, r23
     59a:	8b a9       	sts	0x4b, r24
     59c:	9c a9       	sts	0x4c, r25
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	40 e8       	ldi	r20, 0x80	; 128
     5a4:	5f e3       	ldi	r21, 0x3F	; 63
     5a6:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     5aa:	88 23       	and	r24, r24
     5ac:	0c f0       	brlt	.+2      	; 0x5b0 <initLCD+0x394>
     5ae:	10 e0       	ldi	r17, 0x00	; 0
     5b0:	11 23       	and	r17, r17
     5b2:	29 f0       	breq	.+10     	; 0x5be <initLCD+0x3a2>
		__ticks = 1;
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	9e ab       	sts	0x5e, r25
     5ba:	8d ab       	sts	0x5d, r24
     5bc:	46 c0       	rjmp	.+140    	; 0x64a <initLCD+0x42e>
	else if (__tmp > 65535)
     5be:	11 e0       	ldi	r17, 0x01	; 1
     5c0:	69 a9       	sts	0x49, r22
     5c2:	7a a9       	sts	0x4a, r23
     5c4:	8b a9       	sts	0x4b, r24
     5c6:	9c a9       	sts	0x4c, r25
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	3f ef       	ldi	r19, 0xFF	; 255
     5cc:	4f e7       	ldi	r20, 0x7F	; 127
     5ce:	57 e4       	ldi	r21, 0x47	; 71
     5d0:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     5d4:	18 16       	cp	r1, r24
     5d6:	0c f0       	brlt	.+2      	; 0x5da <initLCD+0x3be>
     5d8:	10 e0       	ldi	r17, 0x00	; 0
     5da:	11 23       	and	r17, r17
     5dc:	61 f1       	breq	.+88     	; 0x636 <initLCD+0x41a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5de:	6d a5       	lds	r22, 0x6d
     5e0:	7e a5       	lds	r23, 0x6e
     5e2:	8f a5       	lds	r24, 0x6f
     5e4:	98 a9       	sts	0x48, r25
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	40 e2       	ldi	r20, 0x20	; 32
     5ec:	51 e4       	ldi	r21, 0x41	; 65
     5ee:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     5f2:	dc 01       	movw	r26, r24
     5f4:	cb 01       	movw	r24, r22
     5f6:	bc 01       	movw	r22, r24
     5f8:	cd 01       	movw	r24, r26
     5fa:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     5fe:	dc 01       	movw	r26, r24
     600:	cb 01       	movw	r24, r22
     602:	9e ab       	sts	0x5e, r25
     604:	8d ab       	sts	0x5d, r24
     606:	12 c0       	rjmp	.+36     	; 0x62c <initLCD+0x410>
     608:	80 e9       	ldi	r24, 0x90	; 144
     60a:	91 e0       	ldi	r25, 0x01	; 1
     60c:	98 af       	sts	0x78, r25
     60e:	8f ab       	sts	0x5f, r24
     610:	8f a9       	sts	0x4f, r24
     612:	98 ad       	sts	0x68, r25
     614:	8c 01       	movw	r16, r24
     616:	c8 01       	movw	r24, r16
     618:	01 97       	sbiw	r24, 0x01	; 1
     61a:	f1 f7       	brne	.-4      	; 0x618 <initLCD+0x3fc>
     61c:	8c 01       	movw	r16, r24
     61e:	18 af       	sts	0x78, r17
     620:	0f ab       	sts	0x5f, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     622:	8d a9       	sts	0x4d, r24
     624:	9e a9       	sts	0x4e, r25
     626:	01 97       	sbiw	r24, 0x01	; 1
     628:	9e ab       	sts	0x5e, r25
     62a:	8d ab       	sts	0x5d, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     62c:	8d a9       	sts	0x4d, r24
     62e:	9e a9       	sts	0x4e, r25
     630:	00 97       	sbiw	r24, 0x00	; 0
     632:	51 f7       	brne	.-44     	; 0x608 <initLCD+0x3ec>
     634:	17 c0       	rjmp	.+46     	; 0x664 <initLCD+0x448>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     636:	69 a9       	sts	0x49, r22
     638:	7a a9       	sts	0x4a, r23
     63a:	8b a9       	sts	0x4b, r24
     63c:	9c a9       	sts	0x4c, r25
     63e:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     642:	dc 01       	movw	r26, r24
     644:	cb 01       	movw	r24, r22
     646:	9e ab       	sts	0x5e, r25
     648:	8d ab       	sts	0x5d, r24
     64a:	8d a9       	sts	0x4d, r24
     64c:	9e a9       	sts	0x4e, r25
     64e:	9a af       	sts	0x7a, r25
     650:	89 af       	sts	0x79, r24
     652:	89 ad       	sts	0x69, r24
     654:	9a ad       	sts	0x6a, r25
     656:	8c 01       	movw	r16, r24
     658:	f8 01       	movw	r30, r16
     65a:	31 97       	sbiw	r30, 0x01	; 1
     65c:	f1 f7       	brne	.-4      	; 0x65a <initLCD+0x43e>
     65e:	8f 01       	movw	r16, r30
     660:	1a af       	sts	0x7a, r17
     662:	09 af       	sts	0x79, r16
	_delay_ms(5);
	wyslijComend(0b00001000);
     664:	88 e0       	ldi	r24, 0x08	; 8
     666:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     66a:	80 e0       	ldi	r24, 0x00	; 0
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	a0 ea       	ldi	r26, 0xA0	; 160
     670:	b0 e4       	ldi	r27, 0x40	; 64
     672:	8b af       	sts	0x7b, r24
     674:	9c af       	sts	0x7c, r25
     676:	ad af       	sts	0x7d, r26
     678:	be af       	sts	0x7e, r27
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     67a:	8e 01       	movw	r16, r28
     67c:	01 5c       	subi	r16, 0xC1	; 193
     67e:	1f 4f       	sbci	r17, 0xFF	; 255
     680:	6b ad       	sts	0x6b, r22
     682:	7c ad       	sts	0x6c, r23
     684:	8d ad       	sts	0x6d, r24
     686:	9e ad       	sts	0x6e, r25
     688:	20 e0       	ldi	r18, 0x00	; 0
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	4a e7       	ldi	r20, 0x7A	; 122
     68e:	55 e4       	ldi	r21, 0x45	; 69
     690:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     694:	dc 01       	movw	r26, r24
     696:	cb 01       	movw	r24, r22
     698:	f8 01       	movw	r30, r16
     69a:	80 83       	st	Z, r24
     69c:	91 83       	std	Z+1, r25	; 0x01
     69e:	a2 83       	std	Z+2, r26	; 0x02
     6a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6a2:	ce 01       	movw	r24, r28
     6a4:	cf 96       	adiw	r24, 0x3f	; 63
     6a6:	11 e0       	ldi	r17, 0x01	; 1
     6a8:	fc 01       	movw	r30, r24
     6aa:	60 81       	ld	r22, Z
     6ac:	71 81       	ldd	r23, Z+1	; 0x01
     6ae:	82 81       	ldd	r24, Z+2	; 0x02
     6b0:	93 81       	ldd	r25, Z+3	; 0x03
     6b2:	20 e0       	ldi	r18, 0x00	; 0
     6b4:	30 e0       	ldi	r19, 0x00	; 0
     6b6:	40 e8       	ldi	r20, 0x80	; 128
     6b8:	5f e3       	ldi	r21, 0x3F	; 63
     6ba:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     6be:	88 23       	and	r24, r24
     6c0:	0c f0       	brlt	.+2      	; 0x6c4 <initLCD+0x4a8>
     6c2:	10 e0       	ldi	r17, 0x00	; 0
     6c4:	11 23       	and	r17, r17
     6c6:	49 f0       	breq	.+18     	; 0x6da <initLCD+0x4be>
		__ticks = 1;
     6c8:	ce 01       	movw	r24, r28
     6ca:	8d 5b       	subi	r24, 0xBD	; 189
     6cc:	9f 4f       	sbci	r25, 0xFF	; 255
     6ce:	21 e0       	ldi	r18, 0x01	; 1
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	fc 01       	movw	r30, r24
     6d4:	31 83       	std	Z+1, r19	; 0x01
     6d6:	20 83       	st	Z, r18
     6d8:	6e c0       	rjmp	.+220    	; 0x7b6 <initLCD+0x59a>
	else if (__tmp > 65535)
     6da:	ce 01       	movw	r24, r28
     6dc:	cf 96       	adiw	r24, 0x3f	; 63
     6de:	11 e0       	ldi	r17, 0x01	; 1
     6e0:	fc 01       	movw	r30, r24
     6e2:	60 81       	ld	r22, Z
     6e4:	71 81       	ldd	r23, Z+1	; 0x01
     6e6:	82 81       	ldd	r24, Z+2	; 0x02
     6e8:	93 81       	ldd	r25, Z+3	; 0x03
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	3f ef       	ldi	r19, 0xFF	; 255
     6ee:	4f e7       	ldi	r20, 0x7F	; 127
     6f0:	57 e4       	ldi	r21, 0x47	; 71
     6f2:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     6f6:	18 16       	cp	r1, r24
     6f8:	0c f0       	brlt	.+2      	; 0x6fc <initLCD+0x4e0>
     6fa:	10 e0       	ldi	r17, 0x00	; 0
     6fc:	11 23       	and	r17, r17
     6fe:	09 f4       	brne	.+2      	; 0x702 <initLCD+0x4e6>
     700:	49 c0       	rjmp	.+146    	; 0x794 <initLCD+0x578>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     702:	6b ad       	sts	0x6b, r22
     704:	7c ad       	sts	0x6c, r23
     706:	8d ad       	sts	0x6d, r24
     708:	9e ad       	sts	0x6e, r25
     70a:	20 e0       	ldi	r18, 0x00	; 0
     70c:	30 e0       	ldi	r19, 0x00	; 0
     70e:	40 e2       	ldi	r20, 0x20	; 32
     710:	51 e4       	ldi	r21, 0x41	; 65
     712:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     716:	dc 01       	movw	r26, r24
     718:	cb 01       	movw	r24, r22
     71a:	8e 01       	movw	r16, r28
     71c:	0d 5b       	subi	r16, 0xBD	; 189
     71e:	1f 4f       	sbci	r17, 0xFF	; 255
     720:	bc 01       	movw	r22, r24
     722:	cd 01       	movw	r24, r26
     724:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     728:	dc 01       	movw	r26, r24
     72a:	cb 01       	movw	r24, r22
     72c:	f8 01       	movw	r30, r16
     72e:	91 83       	std	Z+1, r25	; 0x01
     730:	80 83       	st	Z, r24
     732:	27 c0       	rjmp	.+78     	; 0x782 <initLCD+0x566>
     734:	ce 01       	movw	r24, r28
     736:	8b 5b       	subi	r24, 0xBB	; 187
     738:	9f 4f       	sbci	r25, 0xFF	; 255
     73a:	20 e9       	ldi	r18, 0x90	; 144
     73c:	31 e0       	ldi	r19, 0x01	; 1
     73e:	fc 01       	movw	r30, r24
     740:	31 83       	std	Z+1, r19	; 0x01
     742:	20 83       	st	Z, r18
     744:	ce 01       	movw	r24, r28
     746:	8b 5b       	subi	r24, 0xBB	; 187
     748:	9f 4f       	sbci	r25, 0xFF	; 255
     74a:	fc 01       	movw	r30, r24
     74c:	80 81       	ld	r24, Z
     74e:	91 81       	ldd	r25, Z+1	; 0x01
     750:	8c 01       	movw	r16, r24
     752:	c8 01       	movw	r24, r16
     754:	01 97       	sbiw	r24, 0x01	; 1
     756:	f1 f7       	brne	.-4      	; 0x754 <initLCD+0x538>
     758:	8c 01       	movw	r16, r24
     75a:	ce 01       	movw	r24, r28
     75c:	8b 5b       	subi	r24, 0xBB	; 187
     75e:	9f 4f       	sbci	r25, 0xFF	; 255
     760:	fc 01       	movw	r30, r24
     762:	11 83       	std	Z+1, r17	; 0x01
     764:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     766:	ce 01       	movw	r24, r28
     768:	8d 5b       	subi	r24, 0xBD	; 189
     76a:	9f 4f       	sbci	r25, 0xFF	; 255
     76c:	9e 01       	movw	r18, r28
     76e:	2d 5b       	subi	r18, 0xBD	; 189
     770:	3f 4f       	sbci	r19, 0xFF	; 255
     772:	f9 01       	movw	r30, r18
     774:	20 81       	ld	r18, Z
     776:	31 81       	ldd	r19, Z+1	; 0x01
     778:	21 50       	subi	r18, 0x01	; 1
     77a:	30 40       	sbci	r19, 0x00	; 0
     77c:	fc 01       	movw	r30, r24
     77e:	31 83       	std	Z+1, r19	; 0x01
     780:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     782:	ce 01       	movw	r24, r28
     784:	8d 5b       	subi	r24, 0xBD	; 189
     786:	9f 4f       	sbci	r25, 0xFF	; 255
     788:	fc 01       	movw	r30, r24
     78a:	80 81       	ld	r24, Z
     78c:	91 81       	ldd	r25, Z+1	; 0x01
     78e:	00 97       	sbiw	r24, 0x00	; 0
     790:	89 f6       	brne	.-94     	; 0x734 <initLCD+0x518>
     792:	2e c0       	rjmp	.+92     	; 0x7f0 <initLCD+0x5d4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     794:	8e 01       	movw	r16, r28
     796:	0d 5b       	subi	r16, 0xBD	; 189
     798:	1f 4f       	sbci	r17, 0xFF	; 255
     79a:	ce 01       	movw	r24, r28
     79c:	cf 96       	adiw	r24, 0x3f	; 63
     79e:	fc 01       	movw	r30, r24
     7a0:	60 81       	ld	r22, Z
     7a2:	71 81       	ldd	r23, Z+1	; 0x01
     7a4:	82 81       	ldd	r24, Z+2	; 0x02
     7a6:	93 81       	ldd	r25, Z+3	; 0x03
     7a8:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     7ac:	dc 01       	movw	r26, r24
     7ae:	cb 01       	movw	r24, r22
     7b0:	f8 01       	movw	r30, r16
     7b2:	91 83       	std	Z+1, r25	; 0x01
     7b4:	80 83       	st	Z, r24
     7b6:	ce 01       	movw	r24, r28
     7b8:	89 5b       	subi	r24, 0xB9	; 185
     7ba:	9f 4f       	sbci	r25, 0xFF	; 255
     7bc:	9e 01       	movw	r18, r28
     7be:	2d 5b       	subi	r18, 0xBD	; 189
     7c0:	3f 4f       	sbci	r19, 0xFF	; 255
     7c2:	f9 01       	movw	r30, r18
     7c4:	20 81       	ld	r18, Z
     7c6:	31 81       	ldd	r19, Z+1	; 0x01
     7c8:	fc 01       	movw	r30, r24
     7ca:	31 83       	std	Z+1, r19	; 0x01
     7cc:	20 83       	st	Z, r18
     7ce:	ce 01       	movw	r24, r28
     7d0:	89 5b       	subi	r24, 0xB9	; 185
     7d2:	9f 4f       	sbci	r25, 0xFF	; 255
     7d4:	fc 01       	movw	r30, r24
     7d6:	80 81       	ld	r24, Z
     7d8:	91 81       	ldd	r25, Z+1	; 0x01
     7da:	8c 01       	movw	r16, r24
     7dc:	c8 01       	movw	r24, r16
     7de:	01 97       	sbiw	r24, 0x01	; 1
     7e0:	f1 f7       	brne	.-4      	; 0x7de <initLCD+0x5c2>
     7e2:	8c 01       	movw	r16, r24
     7e4:	ce 01       	movw	r24, r28
     7e6:	89 5b       	subi	r24, 0xB9	; 185
     7e8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ea:	fc 01       	movw	r30, r24
     7ec:	11 83       	std	Z+1, r17	; 0x01
     7ee:	00 83       	st	Z, r16
	_delay_ms(5);
	
	
	wyslijComend(0b00000000);
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     7f6:	9e 01       	movw	r18, r28
     7f8:	27 5b       	subi	r18, 0xB7	; 183
     7fa:	3f 4f       	sbci	r19, 0xFF	; 255
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	a0 ea       	ldi	r26, 0xA0	; 160
     802:	b0 e4       	ldi	r27, 0x40	; 64
     804:	f9 01       	movw	r30, r18
     806:	80 83       	st	Z, r24
     808:	91 83       	std	Z+1, r25	; 0x01
     80a:	a2 83       	std	Z+2, r26	; 0x02
     80c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     80e:	8e 01       	movw	r16, r28
     810:	03 5b       	subi	r16, 0xB3	; 179
     812:	1f 4f       	sbci	r17, 0xFF	; 255
     814:	ce 01       	movw	r24, r28
     816:	87 5b       	subi	r24, 0xB7	; 183
     818:	9f 4f       	sbci	r25, 0xFF	; 255
     81a:	fc 01       	movw	r30, r24
     81c:	60 81       	ld	r22, Z
     81e:	71 81       	ldd	r23, Z+1	; 0x01
     820:	82 81       	ldd	r24, Z+2	; 0x02
     822:	93 81       	ldd	r25, Z+3	; 0x03
     824:	20 e0       	ldi	r18, 0x00	; 0
     826:	30 e0       	ldi	r19, 0x00	; 0
     828:	4a e7       	ldi	r20, 0x7A	; 122
     82a:	55 e4       	ldi	r21, 0x45	; 69
     82c:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     830:	dc 01       	movw	r26, r24
     832:	cb 01       	movw	r24, r22
     834:	f8 01       	movw	r30, r16
     836:	80 83       	st	Z, r24
     838:	91 83       	std	Z+1, r25	; 0x01
     83a:	a2 83       	std	Z+2, r26	; 0x02
     83c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     83e:	ce 01       	movw	r24, r28
     840:	83 5b       	subi	r24, 0xB3	; 179
     842:	9f 4f       	sbci	r25, 0xFF	; 255
     844:	11 e0       	ldi	r17, 0x01	; 1
     846:	fc 01       	movw	r30, r24
     848:	60 81       	ld	r22, Z
     84a:	71 81       	ldd	r23, Z+1	; 0x01
     84c:	82 81       	ldd	r24, Z+2	; 0x02
     84e:	93 81       	ldd	r25, Z+3	; 0x03
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	40 e8       	ldi	r20, 0x80	; 128
     856:	5f e3       	ldi	r21, 0x3F	; 63
     858:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     85c:	88 23       	and	r24, r24
     85e:	0c f0       	brlt	.+2      	; 0x862 <__stack+0x3>
     860:	10 e0       	ldi	r17, 0x00	; 0
     862:	11 23       	and	r17, r17
     864:	49 f0       	breq	.+18     	; 0x878 <__stack+0x19>
		__ticks = 1;
     866:	ce 01       	movw	r24, r28
     868:	8f 5a       	subi	r24, 0xAF	; 175
     86a:	9f 4f       	sbci	r25, 0xFF	; 255
     86c:	21 e0       	ldi	r18, 0x01	; 1
     86e:	30 e0       	ldi	r19, 0x00	; 0
     870:	fc 01       	movw	r30, r24
     872:	31 83       	std	Z+1, r19	; 0x01
     874:	20 83       	st	Z, r18
     876:	74 c0       	rjmp	.+232    	; 0x960 <__stack+0x101>
	else if (__tmp > 65535)
     878:	ce 01       	movw	r24, r28
     87a:	83 5b       	subi	r24, 0xB3	; 179
     87c:	9f 4f       	sbci	r25, 0xFF	; 255
     87e:	11 e0       	ldi	r17, 0x01	; 1
     880:	fc 01       	movw	r30, r24
     882:	60 81       	ld	r22, Z
     884:	71 81       	ldd	r23, Z+1	; 0x01
     886:	82 81       	ldd	r24, Z+2	; 0x02
     888:	93 81       	ldd	r25, Z+3	; 0x03
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	3f ef       	ldi	r19, 0xFF	; 255
     88e:	4f e7       	ldi	r20, 0x7F	; 127
     890:	57 e4       	ldi	r21, 0x47	; 71
     892:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     896:	18 16       	cp	r1, r24
     898:	0c f0       	brlt	.+2      	; 0x89c <__stack+0x3d>
     89a:	10 e0       	ldi	r17, 0x00	; 0
     89c:	11 23       	and	r17, r17
     89e:	09 f4       	brne	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	4d c0       	rjmp	.+154    	; 0x93c <__stack+0xdd>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     8a2:	ce 01       	movw	r24, r28
     8a4:	87 5b       	subi	r24, 0xB7	; 183
     8a6:	9f 4f       	sbci	r25, 0xFF	; 255
     8a8:	fc 01       	movw	r30, r24
     8aa:	60 81       	ld	r22, Z
     8ac:	71 81       	ldd	r23, Z+1	; 0x01
     8ae:	82 81       	ldd	r24, Z+2	; 0x02
     8b0:	93 81       	ldd	r25, Z+3	; 0x03
     8b2:	20 e0       	ldi	r18, 0x00	; 0
     8b4:	30 e0       	ldi	r19, 0x00	; 0
     8b6:	40 e2       	ldi	r20, 0x20	; 32
     8b8:	51 e4       	ldi	r21, 0x41	; 65
     8ba:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     8be:	dc 01       	movw	r26, r24
     8c0:	cb 01       	movw	r24, r22
     8c2:	8e 01       	movw	r16, r28
     8c4:	0f 5a       	subi	r16, 0xAF	; 175
     8c6:	1f 4f       	sbci	r17, 0xFF	; 255
     8c8:	bc 01       	movw	r22, r24
     8ca:	cd 01       	movw	r24, r26
     8cc:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     8d0:	dc 01       	movw	r26, r24
     8d2:	cb 01       	movw	r24, r22
     8d4:	f8 01       	movw	r30, r16
     8d6:	91 83       	std	Z+1, r25	; 0x01
     8d8:	80 83       	st	Z, r24
     8da:	27 c0       	rjmp	.+78     	; 0x92a <__stack+0xcb>
     8dc:	ce 01       	movw	r24, r28
     8de:	8d 5a       	subi	r24, 0xAD	; 173
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	20 e9       	ldi	r18, 0x90	; 144
     8e4:	31 e0       	ldi	r19, 0x01	; 1
     8e6:	fc 01       	movw	r30, r24
     8e8:	31 83       	std	Z+1, r19	; 0x01
     8ea:	20 83       	st	Z, r18
     8ec:	ce 01       	movw	r24, r28
     8ee:	8d 5a       	subi	r24, 0xAD	; 173
     8f0:	9f 4f       	sbci	r25, 0xFF	; 255
     8f2:	fc 01       	movw	r30, r24
     8f4:	80 81       	ld	r24, Z
     8f6:	91 81       	ldd	r25, Z+1	; 0x01
     8f8:	8c 01       	movw	r16, r24
     8fa:	c8 01       	movw	r24, r16
     8fc:	01 97       	sbiw	r24, 0x01	; 1
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <__stack+0x9d>
     900:	8c 01       	movw	r16, r24
     902:	ce 01       	movw	r24, r28
     904:	8d 5a       	subi	r24, 0xAD	; 173
     906:	9f 4f       	sbci	r25, 0xFF	; 255
     908:	fc 01       	movw	r30, r24
     90a:	11 83       	std	Z+1, r17	; 0x01
     90c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     90e:	ce 01       	movw	r24, r28
     910:	8f 5a       	subi	r24, 0xAF	; 175
     912:	9f 4f       	sbci	r25, 0xFF	; 255
     914:	9e 01       	movw	r18, r28
     916:	2f 5a       	subi	r18, 0xAF	; 175
     918:	3f 4f       	sbci	r19, 0xFF	; 255
     91a:	f9 01       	movw	r30, r18
     91c:	20 81       	ld	r18, Z
     91e:	31 81       	ldd	r19, Z+1	; 0x01
     920:	21 50       	subi	r18, 0x01	; 1
     922:	30 40       	sbci	r19, 0x00	; 0
     924:	fc 01       	movw	r30, r24
     926:	31 83       	std	Z+1, r19	; 0x01
     928:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     92a:	ce 01       	movw	r24, r28
     92c:	8f 5a       	subi	r24, 0xAF	; 175
     92e:	9f 4f       	sbci	r25, 0xFF	; 255
     930:	fc 01       	movw	r30, r24
     932:	80 81       	ld	r24, Z
     934:	91 81       	ldd	r25, Z+1	; 0x01
     936:	00 97       	sbiw	r24, 0x00	; 0
     938:	89 f6       	brne	.-94     	; 0x8dc <__stack+0x7d>
     93a:	2f c0       	rjmp	.+94     	; 0x99a <__stack+0x13b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     93c:	8e 01       	movw	r16, r28
     93e:	0f 5a       	subi	r16, 0xAF	; 175
     940:	1f 4f       	sbci	r17, 0xFF	; 255
     942:	ce 01       	movw	r24, r28
     944:	83 5b       	subi	r24, 0xB3	; 179
     946:	9f 4f       	sbci	r25, 0xFF	; 255
     948:	fc 01       	movw	r30, r24
     94a:	60 81       	ld	r22, Z
     94c:	71 81       	ldd	r23, Z+1	; 0x01
     94e:	82 81       	ldd	r24, Z+2	; 0x02
     950:	93 81       	ldd	r25, Z+3	; 0x03
     952:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     956:	dc 01       	movw	r26, r24
     958:	cb 01       	movw	r24, r22
     95a:	f8 01       	movw	r30, r16
     95c:	91 83       	std	Z+1, r25	; 0x01
     95e:	80 83       	st	Z, r24
     960:	ce 01       	movw	r24, r28
     962:	8b 5a       	subi	r24, 0xAB	; 171
     964:	9f 4f       	sbci	r25, 0xFF	; 255
     966:	9e 01       	movw	r18, r28
     968:	2f 5a       	subi	r18, 0xAF	; 175
     96a:	3f 4f       	sbci	r19, 0xFF	; 255
     96c:	f9 01       	movw	r30, r18
     96e:	20 81       	ld	r18, Z
     970:	31 81       	ldd	r19, Z+1	; 0x01
     972:	fc 01       	movw	r30, r24
     974:	31 83       	std	Z+1, r19	; 0x01
     976:	20 83       	st	Z, r18
     978:	ce 01       	movw	r24, r28
     97a:	8b 5a       	subi	r24, 0xAB	; 171
     97c:	9f 4f       	sbci	r25, 0xFF	; 255
     97e:	fc 01       	movw	r30, r24
     980:	80 81       	ld	r24, Z
     982:	91 81       	ldd	r25, Z+1	; 0x01
     984:	8c 01       	movw	r16, r24
     986:	c8 01       	movw	r24, r16
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	f1 f7       	brne	.-4      	; 0x988 <__stack+0x129>
     98c:	8c 01       	movw	r16, r24
     98e:	ce 01       	movw	r24, r28
     990:	8b 5a       	subi	r24, 0xAB	; 171
     992:	9f 4f       	sbci	r25, 0xFF	; 255
     994:	fc 01       	movw	r30, r24
     996:	11 83       	std	Z+1, r17	; 0x01
     998:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0b00001000);
     99a:	88 e0       	ldi	r24, 0x08	; 8
     99c:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     9a0:	9e 01       	movw	r18, r28
     9a2:	29 5a       	subi	r18, 0xA9	; 169
     9a4:	3f 4f       	sbci	r19, 0xFF	; 255
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	a0 ea       	ldi	r26, 0xA0	; 160
     9ac:	b0 e4       	ldi	r27, 0x40	; 64
     9ae:	f9 01       	movw	r30, r18
     9b0:	80 83       	st	Z, r24
     9b2:	91 83       	std	Z+1, r25	; 0x01
     9b4:	a2 83       	std	Z+2, r26	; 0x02
     9b6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     9b8:	8e 01       	movw	r16, r28
     9ba:	05 5a       	subi	r16, 0xA5	; 165
     9bc:	1f 4f       	sbci	r17, 0xFF	; 255
     9be:	ce 01       	movw	r24, r28
     9c0:	89 5a       	subi	r24, 0xA9	; 169
     9c2:	9f 4f       	sbci	r25, 0xFF	; 255
     9c4:	fc 01       	movw	r30, r24
     9c6:	60 81       	ld	r22, Z
     9c8:	71 81       	ldd	r23, Z+1	; 0x01
     9ca:	82 81       	ldd	r24, Z+2	; 0x02
     9cc:	93 81       	ldd	r25, Z+3	; 0x03
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	4a e7       	ldi	r20, 0x7A	; 122
     9d4:	55 e4       	ldi	r21, 0x45	; 69
     9d6:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     9da:	dc 01       	movw	r26, r24
     9dc:	cb 01       	movw	r24, r22
     9de:	f8 01       	movw	r30, r16
     9e0:	80 83       	st	Z, r24
     9e2:	91 83       	std	Z+1, r25	; 0x01
     9e4:	a2 83       	std	Z+2, r26	; 0x02
     9e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     9e8:	ce 01       	movw	r24, r28
     9ea:	85 5a       	subi	r24, 0xA5	; 165
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	11 e0       	ldi	r17, 0x01	; 1
     9f0:	fc 01       	movw	r30, r24
     9f2:	60 81       	ld	r22, Z
     9f4:	71 81       	ldd	r23, Z+1	; 0x01
     9f6:	82 81       	ldd	r24, Z+2	; 0x02
     9f8:	93 81       	ldd	r25, Z+3	; 0x03
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 e8       	ldi	r20, 0x80	; 128
     a00:	5f e3       	ldi	r21, 0x3F	; 63
     a02:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     a06:	88 23       	and	r24, r24
     a08:	0c f0       	brlt	.+2      	; 0xa0c <__stack+0x1ad>
     a0a:	10 e0       	ldi	r17, 0x00	; 0
     a0c:	11 23       	and	r17, r17
     a0e:	49 f0       	breq	.+18     	; 0xa22 <__stack+0x1c3>
		__ticks = 1;
     a10:	ce 01       	movw	r24, r28
     a12:	81 5a       	subi	r24, 0xA1	; 161
     a14:	9f 4f       	sbci	r25, 0xFF	; 255
     a16:	21 e0       	ldi	r18, 0x01	; 1
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	fc 01       	movw	r30, r24
     a1c:	31 83       	std	Z+1, r19	; 0x01
     a1e:	20 83       	st	Z, r18
     a20:	74 c0       	rjmp	.+232    	; 0xb0a <__stack+0x2ab>
	else if (__tmp > 65535)
     a22:	ce 01       	movw	r24, r28
     a24:	85 5a       	subi	r24, 0xA5	; 165
     a26:	9f 4f       	sbci	r25, 0xFF	; 255
     a28:	11 e0       	ldi	r17, 0x01	; 1
     a2a:	fc 01       	movw	r30, r24
     a2c:	60 81       	ld	r22, Z
     a2e:	71 81       	ldd	r23, Z+1	; 0x01
     a30:	82 81       	ldd	r24, Z+2	; 0x02
     a32:	93 81       	ldd	r25, Z+3	; 0x03
     a34:	20 e0       	ldi	r18, 0x00	; 0
     a36:	3f ef       	ldi	r19, 0xFF	; 255
     a38:	4f e7       	ldi	r20, 0x7F	; 127
     a3a:	57 e4       	ldi	r21, 0x47	; 71
     a3c:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     a40:	18 16       	cp	r1, r24
     a42:	0c f0       	brlt	.+2      	; 0xa46 <__stack+0x1e7>
     a44:	10 e0       	ldi	r17, 0x00	; 0
     a46:	11 23       	and	r17, r17
     a48:	09 f4       	brne	.+2      	; 0xa4c <__stack+0x1ed>
     a4a:	4d c0       	rjmp	.+154    	; 0xae6 <__stack+0x287>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a4c:	ce 01       	movw	r24, r28
     a4e:	89 5a       	subi	r24, 0xA9	; 169
     a50:	9f 4f       	sbci	r25, 0xFF	; 255
     a52:	fc 01       	movw	r30, r24
     a54:	60 81       	ld	r22, Z
     a56:	71 81       	ldd	r23, Z+1	; 0x01
     a58:	82 81       	ldd	r24, Z+2	; 0x02
     a5a:	93 81       	ldd	r25, Z+3	; 0x03
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	40 e2       	ldi	r20, 0x20	; 32
     a62:	51 e4       	ldi	r21, 0x41	; 65
     a64:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     a68:	dc 01       	movw	r26, r24
     a6a:	cb 01       	movw	r24, r22
     a6c:	8e 01       	movw	r16, r28
     a6e:	01 5a       	subi	r16, 0xA1	; 161
     a70:	1f 4f       	sbci	r17, 0xFF	; 255
     a72:	bc 01       	movw	r22, r24
     a74:	cd 01       	movw	r24, r26
     a76:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     a7a:	dc 01       	movw	r26, r24
     a7c:	cb 01       	movw	r24, r22
     a7e:	f8 01       	movw	r30, r16
     a80:	91 83       	std	Z+1, r25	; 0x01
     a82:	80 83       	st	Z, r24
     a84:	27 c0       	rjmp	.+78     	; 0xad4 <__stack+0x275>
     a86:	ce 01       	movw	r24, r28
     a88:	8f 59       	subi	r24, 0x9F	; 159
     a8a:	9f 4f       	sbci	r25, 0xFF	; 255
     a8c:	20 e9       	ldi	r18, 0x90	; 144
     a8e:	31 e0       	ldi	r19, 0x01	; 1
     a90:	fc 01       	movw	r30, r24
     a92:	31 83       	std	Z+1, r19	; 0x01
     a94:	20 83       	st	Z, r18
     a96:	ce 01       	movw	r24, r28
     a98:	8f 59       	subi	r24, 0x9F	; 159
     a9a:	9f 4f       	sbci	r25, 0xFF	; 255
     a9c:	fc 01       	movw	r30, r24
     a9e:	80 81       	ld	r24, Z
     aa0:	91 81       	ldd	r25, Z+1	; 0x01
     aa2:	8c 01       	movw	r16, r24
     aa4:	c8 01       	movw	r24, r16
     aa6:	01 97       	sbiw	r24, 0x01	; 1
     aa8:	f1 f7       	brne	.-4      	; 0xaa6 <__stack+0x247>
     aaa:	8c 01       	movw	r16, r24
     aac:	ce 01       	movw	r24, r28
     aae:	8f 59       	subi	r24, 0x9F	; 159
     ab0:	9f 4f       	sbci	r25, 0xFF	; 255
     ab2:	fc 01       	movw	r30, r24
     ab4:	11 83       	std	Z+1, r17	; 0x01
     ab6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ab8:	ce 01       	movw	r24, r28
     aba:	81 5a       	subi	r24, 0xA1	; 161
     abc:	9f 4f       	sbci	r25, 0xFF	; 255
     abe:	9e 01       	movw	r18, r28
     ac0:	21 5a       	subi	r18, 0xA1	; 161
     ac2:	3f 4f       	sbci	r19, 0xFF	; 255
     ac4:	f9 01       	movw	r30, r18
     ac6:	20 81       	ld	r18, Z
     ac8:	31 81       	ldd	r19, Z+1	; 0x01
     aca:	21 50       	subi	r18, 0x01	; 1
     acc:	30 40       	sbci	r19, 0x00	; 0
     ace:	fc 01       	movw	r30, r24
     ad0:	31 83       	std	Z+1, r19	; 0x01
     ad2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ad4:	ce 01       	movw	r24, r28
     ad6:	81 5a       	subi	r24, 0xA1	; 161
     ad8:	9f 4f       	sbci	r25, 0xFF	; 255
     ada:	fc 01       	movw	r30, r24
     adc:	80 81       	ld	r24, Z
     ade:	91 81       	ldd	r25, Z+1	; 0x01
     ae0:	00 97       	sbiw	r24, 0x00	; 0
     ae2:	89 f6       	brne	.-94     	; 0xa86 <__stack+0x227>
     ae4:	2f c0       	rjmp	.+94     	; 0xb44 <__stack+0x2e5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ae6:	8e 01       	movw	r16, r28
     ae8:	01 5a       	subi	r16, 0xA1	; 161
     aea:	1f 4f       	sbci	r17, 0xFF	; 255
     aec:	ce 01       	movw	r24, r28
     aee:	85 5a       	subi	r24, 0xA5	; 165
     af0:	9f 4f       	sbci	r25, 0xFF	; 255
     af2:	fc 01       	movw	r30, r24
     af4:	60 81       	ld	r22, Z
     af6:	71 81       	ldd	r23, Z+1	; 0x01
     af8:	82 81       	ldd	r24, Z+2	; 0x02
     afa:	93 81       	ldd	r25, Z+3	; 0x03
     afc:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     b00:	dc 01       	movw	r26, r24
     b02:	cb 01       	movw	r24, r22
     b04:	f8 01       	movw	r30, r16
     b06:	91 83       	std	Z+1, r25	; 0x01
     b08:	80 83       	st	Z, r24
     b0a:	ce 01       	movw	r24, r28
     b0c:	8d 59       	subi	r24, 0x9D	; 157
     b0e:	9f 4f       	sbci	r25, 0xFF	; 255
     b10:	9e 01       	movw	r18, r28
     b12:	21 5a       	subi	r18, 0xA1	; 161
     b14:	3f 4f       	sbci	r19, 0xFF	; 255
     b16:	f9 01       	movw	r30, r18
     b18:	20 81       	ld	r18, Z
     b1a:	31 81       	ldd	r19, Z+1	; 0x01
     b1c:	fc 01       	movw	r30, r24
     b1e:	31 83       	std	Z+1, r19	; 0x01
     b20:	20 83       	st	Z, r18
     b22:	ce 01       	movw	r24, r28
     b24:	8d 59       	subi	r24, 0x9D	; 157
     b26:	9f 4f       	sbci	r25, 0xFF	; 255
     b28:	fc 01       	movw	r30, r24
     b2a:	80 81       	ld	r24, Z
     b2c:	91 81       	ldd	r25, Z+1	; 0x01
     b2e:	8c 01       	movw	r16, r24
     b30:	c8 01       	movw	r24, r16
     b32:	01 97       	sbiw	r24, 0x01	; 1
     b34:	f1 f7       	brne	.-4      	; 0xb32 <__stack+0x2d3>
     b36:	8c 01       	movw	r16, r24
     b38:	ce 01       	movw	r24, r28
     b3a:	8d 59       	subi	r24, 0x9D	; 157
     b3c:	9f 4f       	sbci	r25, 0xFF	; 255
     b3e:	fc 01       	movw	r30, r24
     b40:	11 83       	std	Z+1, r17	; 0x01
     b42:	00 83       	st	Z, r16
	_delay_ms(5);
	
	wyslijComend(0b00000000);
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     b4a:	9e 01       	movw	r18, r28
     b4c:	2b 59       	subi	r18, 0x9B	; 155
     b4e:	3f 4f       	sbci	r19, 0xFF	; 255
     b50:	80 e0       	ldi	r24, 0x00	; 0
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	a0 ea       	ldi	r26, 0xA0	; 160
     b56:	b0 e4       	ldi	r27, 0x40	; 64
     b58:	f9 01       	movw	r30, r18
     b5a:	80 83       	st	Z, r24
     b5c:	91 83       	std	Z+1, r25	; 0x01
     b5e:	a2 83       	std	Z+2, r26	; 0x02
     b60:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     b62:	8e 01       	movw	r16, r28
     b64:	07 59       	subi	r16, 0x97	; 151
     b66:	1f 4f       	sbci	r17, 0xFF	; 255
     b68:	ce 01       	movw	r24, r28
     b6a:	8b 59       	subi	r24, 0x9B	; 155
     b6c:	9f 4f       	sbci	r25, 0xFF	; 255
     b6e:	fc 01       	movw	r30, r24
     b70:	60 81       	ld	r22, Z
     b72:	71 81       	ldd	r23, Z+1	; 0x01
     b74:	82 81       	ldd	r24, Z+2	; 0x02
     b76:	93 81       	ldd	r25, Z+3	; 0x03
     b78:	20 e0       	ldi	r18, 0x00	; 0
     b7a:	30 e0       	ldi	r19, 0x00	; 0
     b7c:	4a e7       	ldi	r20, 0x7A	; 122
     b7e:	55 e4       	ldi	r21, 0x45	; 69
     b80:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     b84:	dc 01       	movw	r26, r24
     b86:	cb 01       	movw	r24, r22
     b88:	f8 01       	movw	r30, r16
     b8a:	80 83       	st	Z, r24
     b8c:	91 83       	std	Z+1, r25	; 0x01
     b8e:	a2 83       	std	Z+2, r26	; 0x02
     b90:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     b92:	ce 01       	movw	r24, r28
     b94:	87 59       	subi	r24, 0x97	; 151
     b96:	9f 4f       	sbci	r25, 0xFF	; 255
     b98:	11 e0       	ldi	r17, 0x01	; 1
     b9a:	fc 01       	movw	r30, r24
     b9c:	60 81       	ld	r22, Z
     b9e:	71 81       	ldd	r23, Z+1	; 0x01
     ba0:	82 81       	ldd	r24, Z+2	; 0x02
     ba2:	93 81       	ldd	r25, Z+3	; 0x03
     ba4:	20 e0       	ldi	r18, 0x00	; 0
     ba6:	30 e0       	ldi	r19, 0x00	; 0
     ba8:	40 e8       	ldi	r20, 0x80	; 128
     baa:	5f e3       	ldi	r21, 0x3F	; 63
     bac:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     bb0:	88 23       	and	r24, r24
     bb2:	0c f0       	brlt	.+2      	; 0xbb6 <__stack+0x357>
     bb4:	10 e0       	ldi	r17, 0x00	; 0
     bb6:	11 23       	and	r17, r17
     bb8:	49 f0       	breq	.+18     	; 0xbcc <__stack+0x36d>
		__ticks = 1;
     bba:	ce 01       	movw	r24, r28
     bbc:	83 59       	subi	r24, 0x93	; 147
     bbe:	9f 4f       	sbci	r25, 0xFF	; 255
     bc0:	21 e0       	ldi	r18, 0x01	; 1
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	fc 01       	movw	r30, r24
     bc6:	31 83       	std	Z+1, r19	; 0x01
     bc8:	20 83       	st	Z, r18
     bca:	74 c0       	rjmp	.+232    	; 0xcb4 <__stack+0x455>
	else if (__tmp > 65535)
     bcc:	ce 01       	movw	r24, r28
     bce:	87 59       	subi	r24, 0x97	; 151
     bd0:	9f 4f       	sbci	r25, 0xFF	; 255
     bd2:	11 e0       	ldi	r17, 0x01	; 1
     bd4:	fc 01       	movw	r30, r24
     bd6:	60 81       	ld	r22, Z
     bd8:	71 81       	ldd	r23, Z+1	; 0x01
     bda:	82 81       	ldd	r24, Z+2	; 0x02
     bdc:	93 81       	ldd	r25, Z+3	; 0x03
     bde:	20 e0       	ldi	r18, 0x00	; 0
     be0:	3f ef       	ldi	r19, 0xFF	; 255
     be2:	4f e7       	ldi	r20, 0x7F	; 127
     be4:	57 e4       	ldi	r21, 0x47	; 71
     be6:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     bea:	18 16       	cp	r1, r24
     bec:	0c f0       	brlt	.+2      	; 0xbf0 <__stack+0x391>
     bee:	10 e0       	ldi	r17, 0x00	; 0
     bf0:	11 23       	and	r17, r17
     bf2:	09 f4       	brne	.+2      	; 0xbf6 <__stack+0x397>
     bf4:	4d c0       	rjmp	.+154    	; 0xc90 <__stack+0x431>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bf6:	ce 01       	movw	r24, r28
     bf8:	8b 59       	subi	r24, 0x9B	; 155
     bfa:	9f 4f       	sbci	r25, 0xFF	; 255
     bfc:	fc 01       	movw	r30, r24
     bfe:	60 81       	ld	r22, Z
     c00:	71 81       	ldd	r23, Z+1	; 0x01
     c02:	82 81       	ldd	r24, Z+2	; 0x02
     c04:	93 81       	ldd	r25, Z+3	; 0x03
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	40 e2       	ldi	r20, 0x20	; 32
     c0c:	51 e4       	ldi	r21, 0x41	; 65
     c0e:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     c12:	dc 01       	movw	r26, r24
     c14:	cb 01       	movw	r24, r22
     c16:	8e 01       	movw	r16, r28
     c18:	03 59       	subi	r16, 0x93	; 147
     c1a:	1f 4f       	sbci	r17, 0xFF	; 255
     c1c:	bc 01       	movw	r22, r24
     c1e:	cd 01       	movw	r24, r26
     c20:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     c24:	dc 01       	movw	r26, r24
     c26:	cb 01       	movw	r24, r22
     c28:	f8 01       	movw	r30, r16
     c2a:	91 83       	std	Z+1, r25	; 0x01
     c2c:	80 83       	st	Z, r24
     c2e:	27 c0       	rjmp	.+78     	; 0xc7e <__stack+0x41f>
     c30:	ce 01       	movw	r24, r28
     c32:	81 59       	subi	r24, 0x91	; 145
     c34:	9f 4f       	sbci	r25, 0xFF	; 255
     c36:	20 e9       	ldi	r18, 0x90	; 144
     c38:	31 e0       	ldi	r19, 0x01	; 1
     c3a:	fc 01       	movw	r30, r24
     c3c:	31 83       	std	Z+1, r19	; 0x01
     c3e:	20 83       	st	Z, r18
     c40:	ce 01       	movw	r24, r28
     c42:	81 59       	subi	r24, 0x91	; 145
     c44:	9f 4f       	sbci	r25, 0xFF	; 255
     c46:	fc 01       	movw	r30, r24
     c48:	80 81       	ld	r24, Z
     c4a:	91 81       	ldd	r25, Z+1	; 0x01
     c4c:	8c 01       	movw	r16, r24
     c4e:	c8 01       	movw	r24, r16
     c50:	01 97       	sbiw	r24, 0x01	; 1
     c52:	f1 f7       	brne	.-4      	; 0xc50 <__stack+0x3f1>
     c54:	8c 01       	movw	r16, r24
     c56:	ce 01       	movw	r24, r28
     c58:	81 59       	subi	r24, 0x91	; 145
     c5a:	9f 4f       	sbci	r25, 0xFF	; 255
     c5c:	fc 01       	movw	r30, r24
     c5e:	11 83       	std	Z+1, r17	; 0x01
     c60:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c62:	ce 01       	movw	r24, r28
     c64:	83 59       	subi	r24, 0x93	; 147
     c66:	9f 4f       	sbci	r25, 0xFF	; 255
     c68:	9e 01       	movw	r18, r28
     c6a:	23 59       	subi	r18, 0x93	; 147
     c6c:	3f 4f       	sbci	r19, 0xFF	; 255
     c6e:	f9 01       	movw	r30, r18
     c70:	20 81       	ld	r18, Z
     c72:	31 81       	ldd	r19, Z+1	; 0x01
     c74:	21 50       	subi	r18, 0x01	; 1
     c76:	30 40       	sbci	r19, 0x00	; 0
     c78:	fc 01       	movw	r30, r24
     c7a:	31 83       	std	Z+1, r19	; 0x01
     c7c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c7e:	ce 01       	movw	r24, r28
     c80:	83 59       	subi	r24, 0x93	; 147
     c82:	9f 4f       	sbci	r25, 0xFF	; 255
     c84:	fc 01       	movw	r30, r24
     c86:	80 81       	ld	r24, Z
     c88:	91 81       	ldd	r25, Z+1	; 0x01
     c8a:	00 97       	sbiw	r24, 0x00	; 0
     c8c:	89 f6       	brne	.-94     	; 0xc30 <__stack+0x3d1>
     c8e:	2f c0       	rjmp	.+94     	; 0xcee <__stack+0x48f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c90:	8e 01       	movw	r16, r28
     c92:	03 59       	subi	r16, 0x93	; 147
     c94:	1f 4f       	sbci	r17, 0xFF	; 255
     c96:	ce 01       	movw	r24, r28
     c98:	87 59       	subi	r24, 0x97	; 151
     c9a:	9f 4f       	sbci	r25, 0xFF	; 255
     c9c:	fc 01       	movw	r30, r24
     c9e:	60 81       	ld	r22, Z
     ca0:	71 81       	ldd	r23, Z+1	; 0x01
     ca2:	82 81       	ldd	r24, Z+2	; 0x02
     ca4:	93 81       	ldd	r25, Z+3	; 0x03
     ca6:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     caa:	dc 01       	movw	r26, r24
     cac:	cb 01       	movw	r24, r22
     cae:	f8 01       	movw	r30, r16
     cb0:	91 83       	std	Z+1, r25	; 0x01
     cb2:	80 83       	st	Z, r24
     cb4:	ce 01       	movw	r24, r28
     cb6:	8f 58       	subi	r24, 0x8F	; 143
     cb8:	9f 4f       	sbci	r25, 0xFF	; 255
     cba:	9e 01       	movw	r18, r28
     cbc:	23 59       	subi	r18, 0x93	; 147
     cbe:	3f 4f       	sbci	r19, 0xFF	; 255
     cc0:	f9 01       	movw	r30, r18
     cc2:	20 81       	ld	r18, Z
     cc4:	31 81       	ldd	r19, Z+1	; 0x01
     cc6:	fc 01       	movw	r30, r24
     cc8:	31 83       	std	Z+1, r19	; 0x01
     cca:	20 83       	st	Z, r18
     ccc:	ce 01       	movw	r24, r28
     cce:	8f 58       	subi	r24, 0x8F	; 143
     cd0:	9f 4f       	sbci	r25, 0xFF	; 255
     cd2:	fc 01       	movw	r30, r24
     cd4:	80 81       	ld	r24, Z
     cd6:	91 81       	ldd	r25, Z+1	; 0x01
     cd8:	8c 01       	movw	r16, r24
     cda:	c8 01       	movw	r24, r16
     cdc:	01 97       	sbiw	r24, 0x01	; 1
     cde:	f1 f7       	brne	.-4      	; 0xcdc <__stack+0x47d>
     ce0:	8c 01       	movw	r16, r24
     ce2:	ce 01       	movw	r24, r28
     ce4:	8f 58       	subi	r24, 0x8F	; 143
     ce6:	9f 4f       	sbci	r25, 0xFF	; 255
     ce8:	fc 01       	movw	r30, r24
     cea:	11 83       	std	Z+1, r17	; 0x01
     cec:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0b00000001);
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     cf4:	9e 01       	movw	r18, r28
     cf6:	2d 58       	subi	r18, 0x8D	; 141
     cf8:	3f 4f       	sbci	r19, 0xFF	; 255
     cfa:	80 e0       	ldi	r24, 0x00	; 0
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	a0 ea       	ldi	r26, 0xA0	; 160
     d00:	b0 e4       	ldi	r27, 0x40	; 64
     d02:	f9 01       	movw	r30, r18
     d04:	80 83       	st	Z, r24
     d06:	91 83       	std	Z+1, r25	; 0x01
     d08:	a2 83       	std	Z+2, r26	; 0x02
     d0a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     d0c:	8e 01       	movw	r16, r28
     d0e:	09 58       	subi	r16, 0x89	; 137
     d10:	1f 4f       	sbci	r17, 0xFF	; 255
     d12:	ce 01       	movw	r24, r28
     d14:	8d 58       	subi	r24, 0x8D	; 141
     d16:	9f 4f       	sbci	r25, 0xFF	; 255
     d18:	fc 01       	movw	r30, r24
     d1a:	60 81       	ld	r22, Z
     d1c:	71 81       	ldd	r23, Z+1	; 0x01
     d1e:	82 81       	ldd	r24, Z+2	; 0x02
     d20:	93 81       	ldd	r25, Z+3	; 0x03
     d22:	20 e0       	ldi	r18, 0x00	; 0
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	4a e7       	ldi	r20, 0x7A	; 122
     d28:	55 e4       	ldi	r21, 0x45	; 69
     d2a:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     d2e:	dc 01       	movw	r26, r24
     d30:	cb 01       	movw	r24, r22
     d32:	f8 01       	movw	r30, r16
     d34:	80 83       	st	Z, r24
     d36:	91 83       	std	Z+1, r25	; 0x01
     d38:	a2 83       	std	Z+2, r26	; 0x02
     d3a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d3c:	ce 01       	movw	r24, r28
     d3e:	89 58       	subi	r24, 0x89	; 137
     d40:	9f 4f       	sbci	r25, 0xFF	; 255
     d42:	11 e0       	ldi	r17, 0x01	; 1
     d44:	fc 01       	movw	r30, r24
     d46:	60 81       	ld	r22, Z
     d48:	71 81       	ldd	r23, Z+1	; 0x01
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	40 e8       	ldi	r20, 0x80	; 128
     d54:	5f e3       	ldi	r21, 0x3F	; 63
     d56:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     d5a:	88 23       	and	r24, r24
     d5c:	0c f0       	brlt	.+2      	; 0xd60 <__stack+0x501>
     d5e:	10 e0       	ldi	r17, 0x00	; 0
     d60:	11 23       	and	r17, r17
     d62:	49 f0       	breq	.+18     	; 0xd76 <__stack+0x517>
		__ticks = 1;
     d64:	ce 01       	movw	r24, r28
     d66:	85 58       	subi	r24, 0x85	; 133
     d68:	9f 4f       	sbci	r25, 0xFF	; 255
     d6a:	21 e0       	ldi	r18, 0x01	; 1
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	fc 01       	movw	r30, r24
     d70:	31 83       	std	Z+1, r19	; 0x01
     d72:	20 83       	st	Z, r18
     d74:	74 c0       	rjmp	.+232    	; 0xe5e <__stack+0x5ff>
	else if (__tmp > 65535)
     d76:	ce 01       	movw	r24, r28
     d78:	89 58       	subi	r24, 0x89	; 137
     d7a:	9f 4f       	sbci	r25, 0xFF	; 255
     d7c:	11 e0       	ldi	r17, 0x01	; 1
     d7e:	fc 01       	movw	r30, r24
     d80:	60 81       	ld	r22, Z
     d82:	71 81       	ldd	r23, Z+1	; 0x01
     d84:	82 81       	ldd	r24, Z+2	; 0x02
     d86:	93 81       	ldd	r25, Z+3	; 0x03
     d88:	20 e0       	ldi	r18, 0x00	; 0
     d8a:	3f ef       	ldi	r19, 0xFF	; 255
     d8c:	4f e7       	ldi	r20, 0x7F	; 127
     d8e:	57 e4       	ldi	r21, 0x47	; 71
     d90:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     d94:	18 16       	cp	r1, r24
     d96:	0c f0       	brlt	.+2      	; 0xd9a <__stack+0x53b>
     d98:	10 e0       	ldi	r17, 0x00	; 0
     d9a:	11 23       	and	r17, r17
     d9c:	09 f4       	brne	.+2      	; 0xda0 <__stack+0x541>
     d9e:	4d c0       	rjmp	.+154    	; 0xe3a <__stack+0x5db>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     da0:	ce 01       	movw	r24, r28
     da2:	8d 58       	subi	r24, 0x8D	; 141
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	fc 01       	movw	r30, r24
     da8:	60 81       	ld	r22, Z
     daa:	71 81       	ldd	r23, Z+1	; 0x01
     dac:	82 81       	ldd	r24, Z+2	; 0x02
     dae:	93 81       	ldd	r25, Z+3	; 0x03
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	40 e2       	ldi	r20, 0x20	; 32
     db6:	51 e4       	ldi	r21, 0x41	; 65
     db8:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     dbc:	dc 01       	movw	r26, r24
     dbe:	cb 01       	movw	r24, r22
     dc0:	8e 01       	movw	r16, r28
     dc2:	05 58       	subi	r16, 0x85	; 133
     dc4:	1f 4f       	sbci	r17, 0xFF	; 255
     dc6:	bc 01       	movw	r22, r24
     dc8:	cd 01       	movw	r24, r26
     dca:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     dce:	dc 01       	movw	r26, r24
     dd0:	cb 01       	movw	r24, r22
     dd2:	f8 01       	movw	r30, r16
     dd4:	91 83       	std	Z+1, r25	; 0x01
     dd6:	80 83       	st	Z, r24
     dd8:	27 c0       	rjmp	.+78     	; 0xe28 <__stack+0x5c9>
     dda:	ce 01       	movw	r24, r28
     ddc:	83 58       	subi	r24, 0x83	; 131
     dde:	9f 4f       	sbci	r25, 0xFF	; 255
     de0:	20 e9       	ldi	r18, 0x90	; 144
     de2:	31 e0       	ldi	r19, 0x01	; 1
     de4:	fc 01       	movw	r30, r24
     de6:	31 83       	std	Z+1, r19	; 0x01
     de8:	20 83       	st	Z, r18
     dea:	ce 01       	movw	r24, r28
     dec:	83 58       	subi	r24, 0x83	; 131
     dee:	9f 4f       	sbci	r25, 0xFF	; 255
     df0:	fc 01       	movw	r30, r24
     df2:	80 81       	ld	r24, Z
     df4:	91 81       	ldd	r25, Z+1	; 0x01
     df6:	8c 01       	movw	r16, r24
     df8:	c8 01       	movw	r24, r16
     dfa:	01 97       	sbiw	r24, 0x01	; 1
     dfc:	f1 f7       	brne	.-4      	; 0xdfa <__stack+0x59b>
     dfe:	8c 01       	movw	r16, r24
     e00:	ce 01       	movw	r24, r28
     e02:	83 58       	subi	r24, 0x83	; 131
     e04:	9f 4f       	sbci	r25, 0xFF	; 255
     e06:	fc 01       	movw	r30, r24
     e08:	11 83       	std	Z+1, r17	; 0x01
     e0a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e0c:	ce 01       	movw	r24, r28
     e0e:	85 58       	subi	r24, 0x85	; 133
     e10:	9f 4f       	sbci	r25, 0xFF	; 255
     e12:	9e 01       	movw	r18, r28
     e14:	25 58       	subi	r18, 0x85	; 133
     e16:	3f 4f       	sbci	r19, 0xFF	; 255
     e18:	f9 01       	movw	r30, r18
     e1a:	20 81       	ld	r18, Z
     e1c:	31 81       	ldd	r19, Z+1	; 0x01
     e1e:	21 50       	subi	r18, 0x01	; 1
     e20:	30 40       	sbci	r19, 0x00	; 0
     e22:	fc 01       	movw	r30, r24
     e24:	31 83       	std	Z+1, r19	; 0x01
     e26:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e28:	ce 01       	movw	r24, r28
     e2a:	85 58       	subi	r24, 0x85	; 133
     e2c:	9f 4f       	sbci	r25, 0xFF	; 255
     e2e:	fc 01       	movw	r30, r24
     e30:	80 81       	ld	r24, Z
     e32:	91 81       	ldd	r25, Z+1	; 0x01
     e34:	00 97       	sbiw	r24, 0x00	; 0
     e36:	89 f6       	brne	.-94     	; 0xdda <__stack+0x57b>
     e38:	2f c0       	rjmp	.+94     	; 0xe98 <__stack+0x639>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e3a:	8e 01       	movw	r16, r28
     e3c:	05 58       	subi	r16, 0x85	; 133
     e3e:	1f 4f       	sbci	r17, 0xFF	; 255
     e40:	ce 01       	movw	r24, r28
     e42:	89 58       	subi	r24, 0x89	; 137
     e44:	9f 4f       	sbci	r25, 0xFF	; 255
     e46:	fc 01       	movw	r30, r24
     e48:	60 81       	ld	r22, Z
     e4a:	71 81       	ldd	r23, Z+1	; 0x01
     e4c:	82 81       	ldd	r24, Z+2	; 0x02
     e4e:	93 81       	ldd	r25, Z+3	; 0x03
     e50:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     e54:	dc 01       	movw	r26, r24
     e56:	cb 01       	movw	r24, r22
     e58:	f8 01       	movw	r30, r16
     e5a:	91 83       	std	Z+1, r25	; 0x01
     e5c:	80 83       	st	Z, r24
     e5e:	ce 01       	movw	r24, r28
     e60:	81 58       	subi	r24, 0x81	; 129
     e62:	9f 4f       	sbci	r25, 0xFF	; 255
     e64:	9e 01       	movw	r18, r28
     e66:	25 58       	subi	r18, 0x85	; 133
     e68:	3f 4f       	sbci	r19, 0xFF	; 255
     e6a:	f9 01       	movw	r30, r18
     e6c:	20 81       	ld	r18, Z
     e6e:	31 81       	ldd	r19, Z+1	; 0x01
     e70:	fc 01       	movw	r30, r24
     e72:	31 83       	std	Z+1, r19	; 0x01
     e74:	20 83       	st	Z, r18
     e76:	ce 01       	movw	r24, r28
     e78:	81 58       	subi	r24, 0x81	; 129
     e7a:	9f 4f       	sbci	r25, 0xFF	; 255
     e7c:	fc 01       	movw	r30, r24
     e7e:	80 81       	ld	r24, Z
     e80:	91 81       	ldd	r25, Z+1	; 0x01
     e82:	8c 01       	movw	r16, r24
     e84:	c8 01       	movw	r24, r16
     e86:	01 97       	sbiw	r24, 0x01	; 1
     e88:	f1 f7       	brne	.-4      	; 0xe86 <__stack+0x627>
     e8a:	8c 01       	movw	r16, r24
     e8c:	ce 01       	movw	r24, r28
     e8e:	81 58       	subi	r24, 0x81	; 129
     e90:	9f 4f       	sbci	r25, 0xFF	; 255
     e92:	fc 01       	movw	r30, r24
     e94:	11 83       	std	Z+1, r17	; 0x01
     e96:	00 83       	st	Z, r16
	_delay_ms(5);
	
	wyslijComend(0b00000000);
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
     e9e:	9e 01       	movw	r18, r28
     ea0:	2f 57       	subi	r18, 0x7F	; 127
     ea2:	3f 4f       	sbci	r19, 0xFF	; 255
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	a0 ea       	ldi	r26, 0xA0	; 160
     eaa:	b0 e4       	ldi	r27, 0x40	; 64
     eac:	f9 01       	movw	r30, r18
     eae:	80 83       	st	Z, r24
     eb0:	91 83       	std	Z+1, r25	; 0x01
     eb2:	a2 83       	std	Z+2, r26	; 0x02
     eb4:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
     eb6:	8e 01       	movw	r16, r28
     eb8:	0b 57       	subi	r16, 0x7B	; 123
     eba:	1f 4f       	sbci	r17, 0xFF	; 255
     ebc:	ce 01       	movw	r24, r28
     ebe:	8f 57       	subi	r24, 0x7F	; 127
     ec0:	9f 4f       	sbci	r25, 0xFF	; 255
     ec2:	fc 01       	movw	r30, r24
     ec4:	60 81       	ld	r22, Z
     ec6:	71 81       	ldd	r23, Z+1	; 0x01
     ec8:	82 81       	ldd	r24, Z+2	; 0x02
     eca:	93 81       	ldd	r25, Z+3	; 0x03
     ecc:	20 e0       	ldi	r18, 0x00	; 0
     ece:	30 e0       	ldi	r19, 0x00	; 0
     ed0:	4a e7       	ldi	r20, 0x7A	; 122
     ed2:	55 e4       	ldi	r21, 0x45	; 69
     ed4:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     ed8:	dc 01       	movw	r26, r24
     eda:	cb 01       	movw	r24, r22
     edc:	f8 01       	movw	r30, r16
     ede:	80 83       	st	Z, r24
     ee0:	91 83       	std	Z+1, r25	; 0x01
     ee2:	a2 83       	std	Z+2, r26	; 0x02
     ee4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ee6:	ce 01       	movw	r24, r28
     ee8:	8b 57       	subi	r24, 0x7B	; 123
     eea:	9f 4f       	sbci	r25, 0xFF	; 255
     eec:	11 e0       	ldi	r17, 0x01	; 1
     eee:	fc 01       	movw	r30, r24
     ef0:	60 81       	ld	r22, Z
     ef2:	71 81       	ldd	r23, Z+1	; 0x01
     ef4:	82 81       	ldd	r24, Z+2	; 0x02
     ef6:	93 81       	ldd	r25, Z+3	; 0x03
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	40 e8       	ldi	r20, 0x80	; 128
     efe:	5f e3       	ldi	r21, 0x3F	; 63
     f00:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
     f04:	88 23       	and	r24, r24
     f06:	0c f0       	brlt	.+2      	; 0xf0a <__stack+0x6ab>
     f08:	10 e0       	ldi	r17, 0x00	; 0
     f0a:	11 23       	and	r17, r17
     f0c:	49 f0       	breq	.+18     	; 0xf20 <__stack+0x6c1>
		__ticks = 1;
     f0e:	ce 01       	movw	r24, r28
     f10:	87 57       	subi	r24, 0x77	; 119
     f12:	9f 4f       	sbci	r25, 0xFF	; 255
     f14:	21 e0       	ldi	r18, 0x01	; 1
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	fc 01       	movw	r30, r24
     f1a:	31 83       	std	Z+1, r19	; 0x01
     f1c:	20 83       	st	Z, r18
     f1e:	74 c0       	rjmp	.+232    	; 0x1008 <__stack+0x7a9>
	else if (__tmp > 65535)
     f20:	ce 01       	movw	r24, r28
     f22:	8b 57       	subi	r24, 0x7B	; 123
     f24:	9f 4f       	sbci	r25, 0xFF	; 255
     f26:	11 e0       	ldi	r17, 0x01	; 1
     f28:	fc 01       	movw	r30, r24
     f2a:	60 81       	ld	r22, Z
     f2c:	71 81       	ldd	r23, Z+1	; 0x01
     f2e:	82 81       	ldd	r24, Z+2	; 0x02
     f30:	93 81       	ldd	r25, Z+3	; 0x03
     f32:	20 e0       	ldi	r18, 0x00	; 0
     f34:	3f ef       	ldi	r19, 0xFF	; 255
     f36:	4f e7       	ldi	r20, 0x7F	; 127
     f38:	57 e4       	ldi	r21, 0x47	; 71
     f3a:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
     f3e:	18 16       	cp	r1, r24
     f40:	0c f0       	brlt	.+2      	; 0xf44 <__stack+0x6e5>
     f42:	10 e0       	ldi	r17, 0x00	; 0
     f44:	11 23       	and	r17, r17
     f46:	09 f4       	brne	.+2      	; 0xf4a <__stack+0x6eb>
     f48:	4d c0       	rjmp	.+154    	; 0xfe4 <__stack+0x785>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f4a:	ce 01       	movw	r24, r28
     f4c:	8f 57       	subi	r24, 0x7F	; 127
     f4e:	9f 4f       	sbci	r25, 0xFF	; 255
     f50:	fc 01       	movw	r30, r24
     f52:	60 81       	ld	r22, Z
     f54:	71 81       	ldd	r23, Z+1	; 0x01
     f56:	82 81       	ldd	r24, Z+2	; 0x02
     f58:	93 81       	ldd	r25, Z+3	; 0x03
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	30 e0       	ldi	r19, 0x00	; 0
     f5e:	40 e2       	ldi	r20, 0x20	; 32
     f60:	51 e4       	ldi	r21, 0x41	; 65
     f62:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
     f66:	dc 01       	movw	r26, r24
     f68:	cb 01       	movw	r24, r22
     f6a:	8e 01       	movw	r16, r28
     f6c:	07 57       	subi	r16, 0x77	; 119
     f6e:	1f 4f       	sbci	r17, 0xFF	; 255
     f70:	bc 01       	movw	r22, r24
     f72:	cd 01       	movw	r24, r26
     f74:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     f78:	dc 01       	movw	r26, r24
     f7a:	cb 01       	movw	r24, r22
     f7c:	f8 01       	movw	r30, r16
     f7e:	91 83       	std	Z+1, r25	; 0x01
     f80:	80 83       	st	Z, r24
     f82:	27 c0       	rjmp	.+78     	; 0xfd2 <__stack+0x773>
     f84:	ce 01       	movw	r24, r28
     f86:	85 57       	subi	r24, 0x75	; 117
     f88:	9f 4f       	sbci	r25, 0xFF	; 255
     f8a:	20 e9       	ldi	r18, 0x90	; 144
     f8c:	31 e0       	ldi	r19, 0x01	; 1
     f8e:	fc 01       	movw	r30, r24
     f90:	31 83       	std	Z+1, r19	; 0x01
     f92:	20 83       	st	Z, r18
     f94:	ce 01       	movw	r24, r28
     f96:	85 57       	subi	r24, 0x75	; 117
     f98:	9f 4f       	sbci	r25, 0xFF	; 255
     f9a:	fc 01       	movw	r30, r24
     f9c:	80 81       	ld	r24, Z
     f9e:	91 81       	ldd	r25, Z+1	; 0x01
     fa0:	8c 01       	movw	r16, r24
     fa2:	c8 01       	movw	r24, r16
     fa4:	01 97       	sbiw	r24, 0x01	; 1
     fa6:	f1 f7       	brne	.-4      	; 0xfa4 <__stack+0x745>
     fa8:	8c 01       	movw	r16, r24
     faa:	ce 01       	movw	r24, r28
     fac:	85 57       	subi	r24, 0x75	; 117
     fae:	9f 4f       	sbci	r25, 0xFF	; 255
     fb0:	fc 01       	movw	r30, r24
     fb2:	11 83       	std	Z+1, r17	; 0x01
     fb4:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     fb6:	ce 01       	movw	r24, r28
     fb8:	87 57       	subi	r24, 0x77	; 119
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	9e 01       	movw	r18, r28
     fbe:	27 57       	subi	r18, 0x77	; 119
     fc0:	3f 4f       	sbci	r19, 0xFF	; 255
     fc2:	f9 01       	movw	r30, r18
     fc4:	20 81       	ld	r18, Z
     fc6:	31 81       	ldd	r19, Z+1	; 0x01
     fc8:	21 50       	subi	r18, 0x01	; 1
     fca:	30 40       	sbci	r19, 0x00	; 0
     fcc:	fc 01       	movw	r30, r24
     fce:	31 83       	std	Z+1, r19	; 0x01
     fd0:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fd2:	ce 01       	movw	r24, r28
     fd4:	87 57       	subi	r24, 0x77	; 119
     fd6:	9f 4f       	sbci	r25, 0xFF	; 255
     fd8:	fc 01       	movw	r30, r24
     fda:	80 81       	ld	r24, Z
     fdc:	91 81       	ldd	r25, Z+1	; 0x01
     fde:	00 97       	sbiw	r24, 0x00	; 0
     fe0:	89 f6       	brne	.-94     	; 0xf84 <__stack+0x725>
     fe2:	2f c0       	rjmp	.+94     	; 0x1042 <__stack+0x7e3>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fe4:	8e 01       	movw	r16, r28
     fe6:	07 57       	subi	r16, 0x77	; 119
     fe8:	1f 4f       	sbci	r17, 0xFF	; 255
     fea:	ce 01       	movw	r24, r28
     fec:	8b 57       	subi	r24, 0x7B	; 123
     fee:	9f 4f       	sbci	r25, 0xFF	; 255
     ff0:	fc 01       	movw	r30, r24
     ff2:	60 81       	ld	r22, Z
     ff4:	71 81       	ldd	r23, Z+1	; 0x01
     ff6:	82 81       	ldd	r24, Z+2	; 0x02
     ff8:	93 81       	ldd	r25, Z+3	; 0x03
     ffa:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
     ffe:	dc 01       	movw	r26, r24
    1000:	cb 01       	movw	r24, r22
    1002:	f8 01       	movw	r30, r16
    1004:	91 83       	std	Z+1, r25	; 0x01
    1006:	80 83       	st	Z, r24
    1008:	ce 01       	movw	r24, r28
    100a:	83 57       	subi	r24, 0x73	; 115
    100c:	9f 4f       	sbci	r25, 0xFF	; 255
    100e:	9e 01       	movw	r18, r28
    1010:	27 57       	subi	r18, 0x77	; 119
    1012:	3f 4f       	sbci	r19, 0xFF	; 255
    1014:	f9 01       	movw	r30, r18
    1016:	20 81       	ld	r18, Z
    1018:	31 81       	ldd	r19, Z+1	; 0x01
    101a:	fc 01       	movw	r30, r24
    101c:	31 83       	std	Z+1, r19	; 0x01
    101e:	20 83       	st	Z, r18
    1020:	ce 01       	movw	r24, r28
    1022:	83 57       	subi	r24, 0x73	; 115
    1024:	9f 4f       	sbci	r25, 0xFF	; 255
    1026:	fc 01       	movw	r30, r24
    1028:	80 81       	ld	r24, Z
    102a:	91 81       	ldd	r25, Z+1	; 0x01
    102c:	8c 01       	movw	r16, r24
    102e:	c8 01       	movw	r24, r16
    1030:	01 97       	sbiw	r24, 0x01	; 1
    1032:	f1 f7       	brne	.-4      	; 0x1030 <__stack+0x7d1>
    1034:	8c 01       	movw	r16, r24
    1036:	ce 01       	movw	r24, r28
    1038:	83 57       	subi	r24, 0x73	; 115
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	fc 01       	movw	r30, r24
    103e:	11 83       	std	Z+1, r17	; 0x01
    1040:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0b00000110);
    1042:	86 e0       	ldi	r24, 0x06	; 6
    1044:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
    1048:	9e 01       	movw	r18, r28
    104a:	21 57       	subi	r18, 0x71	; 113
    104c:	3f 4f       	sbci	r19, 0xFF	; 255
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	a0 ea       	ldi	r26, 0xA0	; 160
    1054:	b0 e4       	ldi	r27, 0x40	; 64
    1056:	f9 01       	movw	r30, r18
    1058:	80 83       	st	Z, r24
    105a:	91 83       	std	Z+1, r25	; 0x01
    105c:	a2 83       	std	Z+2, r26	; 0x02
    105e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    1060:	8e 01       	movw	r16, r28
    1062:	0d 56       	subi	r16, 0x6D	; 109
    1064:	1f 4f       	sbci	r17, 0xFF	; 255
    1066:	ce 01       	movw	r24, r28
    1068:	81 57       	subi	r24, 0x71	; 113
    106a:	9f 4f       	sbci	r25, 0xFF	; 255
    106c:	fc 01       	movw	r30, r24
    106e:	60 81       	ld	r22, Z
    1070:	71 81       	ldd	r23, Z+1	; 0x01
    1072:	82 81       	ldd	r24, Z+2	; 0x02
    1074:	93 81       	ldd	r25, Z+3	; 0x03
    1076:	20 e0       	ldi	r18, 0x00	; 0
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	4a e7       	ldi	r20, 0x7A	; 122
    107c:	55 e4       	ldi	r21, 0x45	; 69
    107e:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    1082:	dc 01       	movw	r26, r24
    1084:	cb 01       	movw	r24, r22
    1086:	f8 01       	movw	r30, r16
    1088:	80 83       	st	Z, r24
    108a:	91 83       	std	Z+1, r25	; 0x01
    108c:	a2 83       	std	Z+2, r26	; 0x02
    108e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1090:	ce 01       	movw	r24, r28
    1092:	8d 56       	subi	r24, 0x6D	; 109
    1094:	9f 4f       	sbci	r25, 0xFF	; 255
    1096:	11 e0       	ldi	r17, 0x01	; 1
    1098:	fc 01       	movw	r30, r24
    109a:	60 81       	ld	r22, Z
    109c:	71 81       	ldd	r23, Z+1	; 0x01
    109e:	82 81       	ldd	r24, Z+2	; 0x02
    10a0:	93 81       	ldd	r25, Z+3	; 0x03
    10a2:	20 e0       	ldi	r18, 0x00	; 0
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	40 e8       	ldi	r20, 0x80	; 128
    10a8:	5f e3       	ldi	r21, 0x3F	; 63
    10aa:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
    10ae:	88 23       	and	r24, r24
    10b0:	0c f0       	brlt	.+2      	; 0x10b4 <__stack+0x855>
    10b2:	10 e0       	ldi	r17, 0x00	; 0
    10b4:	11 23       	and	r17, r17
    10b6:	49 f0       	breq	.+18     	; 0x10ca <__stack+0x86b>
		__ticks = 1;
    10b8:	ce 01       	movw	r24, r28
    10ba:	89 56       	subi	r24, 0x69	; 105
    10bc:	9f 4f       	sbci	r25, 0xFF	; 255
    10be:	21 e0       	ldi	r18, 0x01	; 1
    10c0:	30 e0       	ldi	r19, 0x00	; 0
    10c2:	fc 01       	movw	r30, r24
    10c4:	31 83       	std	Z+1, r19	; 0x01
    10c6:	20 83       	st	Z, r18
    10c8:	74 c0       	rjmp	.+232    	; 0x11b2 <__stack+0x953>
	else if (__tmp > 65535)
    10ca:	ce 01       	movw	r24, r28
    10cc:	8d 56       	subi	r24, 0x6D	; 109
    10ce:	9f 4f       	sbci	r25, 0xFF	; 255
    10d0:	11 e0       	ldi	r17, 0x01	; 1
    10d2:	fc 01       	movw	r30, r24
    10d4:	60 81       	ld	r22, Z
    10d6:	71 81       	ldd	r23, Z+1	; 0x01
    10d8:	82 81       	ldd	r24, Z+2	; 0x02
    10da:	93 81       	ldd	r25, Z+3	; 0x03
    10dc:	20 e0       	ldi	r18, 0x00	; 0
    10de:	3f ef       	ldi	r19, 0xFF	; 255
    10e0:	4f e7       	ldi	r20, 0x7F	; 127
    10e2:	57 e4       	ldi	r21, 0x47	; 71
    10e4:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
    10e8:	18 16       	cp	r1, r24
    10ea:	0c f0       	brlt	.+2      	; 0x10ee <__stack+0x88f>
    10ec:	10 e0       	ldi	r17, 0x00	; 0
    10ee:	11 23       	and	r17, r17
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <__stack+0x895>
    10f2:	4d c0       	rjmp	.+154    	; 0x118e <__stack+0x92f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    10f4:	ce 01       	movw	r24, r28
    10f6:	81 57       	subi	r24, 0x71	; 113
    10f8:	9f 4f       	sbci	r25, 0xFF	; 255
    10fa:	fc 01       	movw	r30, r24
    10fc:	60 81       	ld	r22, Z
    10fe:	71 81       	ldd	r23, Z+1	; 0x01
    1100:	82 81       	ldd	r24, Z+2	; 0x02
    1102:	93 81       	ldd	r25, Z+3	; 0x03
    1104:	20 e0       	ldi	r18, 0x00	; 0
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	40 e2       	ldi	r20, 0x20	; 32
    110a:	51 e4       	ldi	r21, 0x41	; 65
    110c:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    1110:	dc 01       	movw	r26, r24
    1112:	cb 01       	movw	r24, r22
    1114:	8e 01       	movw	r16, r28
    1116:	09 56       	subi	r16, 0x69	; 105
    1118:	1f 4f       	sbci	r17, 0xFF	; 255
    111a:	bc 01       	movw	r22, r24
    111c:	cd 01       	movw	r24, r26
    111e:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    1122:	dc 01       	movw	r26, r24
    1124:	cb 01       	movw	r24, r22
    1126:	f8 01       	movw	r30, r16
    1128:	91 83       	std	Z+1, r25	; 0x01
    112a:	80 83       	st	Z, r24
    112c:	27 c0       	rjmp	.+78     	; 0x117c <__stack+0x91d>
    112e:	ce 01       	movw	r24, r28
    1130:	87 56       	subi	r24, 0x67	; 103
    1132:	9f 4f       	sbci	r25, 0xFF	; 255
    1134:	20 e9       	ldi	r18, 0x90	; 144
    1136:	31 e0       	ldi	r19, 0x01	; 1
    1138:	fc 01       	movw	r30, r24
    113a:	31 83       	std	Z+1, r19	; 0x01
    113c:	20 83       	st	Z, r18
    113e:	ce 01       	movw	r24, r28
    1140:	87 56       	subi	r24, 0x67	; 103
    1142:	9f 4f       	sbci	r25, 0xFF	; 255
    1144:	fc 01       	movw	r30, r24
    1146:	80 81       	ld	r24, Z
    1148:	91 81       	ldd	r25, Z+1	; 0x01
    114a:	8c 01       	movw	r16, r24
    114c:	c8 01       	movw	r24, r16
    114e:	01 97       	sbiw	r24, 0x01	; 1
    1150:	f1 f7       	brne	.-4      	; 0x114e <__stack+0x8ef>
    1152:	8c 01       	movw	r16, r24
    1154:	ce 01       	movw	r24, r28
    1156:	87 56       	subi	r24, 0x67	; 103
    1158:	9f 4f       	sbci	r25, 0xFF	; 255
    115a:	fc 01       	movw	r30, r24
    115c:	11 83       	std	Z+1, r17	; 0x01
    115e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1160:	ce 01       	movw	r24, r28
    1162:	89 56       	subi	r24, 0x69	; 105
    1164:	9f 4f       	sbci	r25, 0xFF	; 255
    1166:	9e 01       	movw	r18, r28
    1168:	29 56       	subi	r18, 0x69	; 105
    116a:	3f 4f       	sbci	r19, 0xFF	; 255
    116c:	f9 01       	movw	r30, r18
    116e:	20 81       	ld	r18, Z
    1170:	31 81       	ldd	r19, Z+1	; 0x01
    1172:	21 50       	subi	r18, 0x01	; 1
    1174:	30 40       	sbci	r19, 0x00	; 0
    1176:	fc 01       	movw	r30, r24
    1178:	31 83       	std	Z+1, r19	; 0x01
    117a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    117c:	ce 01       	movw	r24, r28
    117e:	89 56       	subi	r24, 0x69	; 105
    1180:	9f 4f       	sbci	r25, 0xFF	; 255
    1182:	fc 01       	movw	r30, r24
    1184:	80 81       	ld	r24, Z
    1186:	91 81       	ldd	r25, Z+1	; 0x01
    1188:	00 97       	sbiw	r24, 0x00	; 0
    118a:	89 f6       	brne	.-94     	; 0x112e <__stack+0x8cf>
    118c:	2f c0       	rjmp	.+94     	; 0x11ec <__stack+0x98d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    118e:	8e 01       	movw	r16, r28
    1190:	09 56       	subi	r16, 0x69	; 105
    1192:	1f 4f       	sbci	r17, 0xFF	; 255
    1194:	ce 01       	movw	r24, r28
    1196:	8d 56       	subi	r24, 0x6D	; 109
    1198:	9f 4f       	sbci	r25, 0xFF	; 255
    119a:	fc 01       	movw	r30, r24
    119c:	60 81       	ld	r22, Z
    119e:	71 81       	ldd	r23, Z+1	; 0x01
    11a0:	82 81       	ldd	r24, Z+2	; 0x02
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    11a8:	dc 01       	movw	r26, r24
    11aa:	cb 01       	movw	r24, r22
    11ac:	f8 01       	movw	r30, r16
    11ae:	91 83       	std	Z+1, r25	; 0x01
    11b0:	80 83       	st	Z, r24
    11b2:	ce 01       	movw	r24, r28
    11b4:	85 56       	subi	r24, 0x65	; 101
    11b6:	9f 4f       	sbci	r25, 0xFF	; 255
    11b8:	9e 01       	movw	r18, r28
    11ba:	29 56       	subi	r18, 0x69	; 105
    11bc:	3f 4f       	sbci	r19, 0xFF	; 255
    11be:	f9 01       	movw	r30, r18
    11c0:	20 81       	ld	r18, Z
    11c2:	31 81       	ldd	r19, Z+1	; 0x01
    11c4:	fc 01       	movw	r30, r24
    11c6:	31 83       	std	Z+1, r19	; 0x01
    11c8:	20 83       	st	Z, r18
    11ca:	ce 01       	movw	r24, r28
    11cc:	85 56       	subi	r24, 0x65	; 101
    11ce:	9f 4f       	sbci	r25, 0xFF	; 255
    11d0:	fc 01       	movw	r30, r24
    11d2:	80 81       	ld	r24, Z
    11d4:	91 81       	ldd	r25, Z+1	; 0x01
    11d6:	8c 01       	movw	r16, r24
    11d8:	c8 01       	movw	r24, r16
    11da:	01 97       	sbiw	r24, 0x01	; 1
    11dc:	f1 f7       	brne	.-4      	; 0x11da <__stack+0x97b>
    11de:	8c 01       	movw	r16, r24
    11e0:	ce 01       	movw	r24, r28
    11e2:	85 56       	subi	r24, 0x65	; 101
    11e4:	9f 4f       	sbci	r25, 0xFF	; 255
    11e6:	fc 01       	movw	r30, r24
    11e8:	11 83       	std	Z+1, r17	; 0x01
    11ea:	00 83       	st	Z, r16
	_delay_ms(5);
	
	wyslijComend(0x00);
    11ec:	80 e0       	ldi	r24, 0x00	; 0
    11ee:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
    11f2:	9e 01       	movw	r18, r28
    11f4:	23 56       	subi	r18, 0x63	; 99
    11f6:	3f 4f       	sbci	r19, 0xFF	; 255
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	a0 ea       	ldi	r26, 0xA0	; 160
    11fe:	b0 e4       	ldi	r27, 0x40	; 64
    1200:	f9 01       	movw	r30, r18
    1202:	80 83       	st	Z, r24
    1204:	91 83       	std	Z+1, r25	; 0x01
    1206:	a2 83       	std	Z+2, r26	; 0x02
    1208:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    120a:	8e 01       	movw	r16, r28
    120c:	0f 55       	subi	r16, 0x5F	; 95
    120e:	1f 4f       	sbci	r17, 0xFF	; 255
    1210:	ce 01       	movw	r24, r28
    1212:	83 56       	subi	r24, 0x63	; 99
    1214:	9f 4f       	sbci	r25, 0xFF	; 255
    1216:	fc 01       	movw	r30, r24
    1218:	60 81       	ld	r22, Z
    121a:	71 81       	ldd	r23, Z+1	; 0x01
    121c:	82 81       	ldd	r24, Z+2	; 0x02
    121e:	93 81       	ldd	r25, Z+3	; 0x03
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	4a e7       	ldi	r20, 0x7A	; 122
    1226:	55 e4       	ldi	r21, 0x45	; 69
    1228:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    122c:	dc 01       	movw	r26, r24
    122e:	cb 01       	movw	r24, r22
    1230:	f8 01       	movw	r30, r16
    1232:	80 83       	st	Z, r24
    1234:	91 83       	std	Z+1, r25	; 0x01
    1236:	a2 83       	std	Z+2, r26	; 0x02
    1238:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    123a:	ce 01       	movw	r24, r28
    123c:	8f 55       	subi	r24, 0x5F	; 95
    123e:	9f 4f       	sbci	r25, 0xFF	; 255
    1240:	11 e0       	ldi	r17, 0x01	; 1
    1242:	fc 01       	movw	r30, r24
    1244:	60 81       	ld	r22, Z
    1246:	71 81       	ldd	r23, Z+1	; 0x01
    1248:	82 81       	ldd	r24, Z+2	; 0x02
    124a:	93 81       	ldd	r25, Z+3	; 0x03
    124c:	20 e0       	ldi	r18, 0x00	; 0
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	40 e8       	ldi	r20, 0x80	; 128
    1252:	5f e3       	ldi	r21, 0x3F	; 63
    1254:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
    1258:	88 23       	and	r24, r24
    125a:	0c f0       	brlt	.+2      	; 0x125e <__stack+0x9ff>
    125c:	10 e0       	ldi	r17, 0x00	; 0
    125e:	11 23       	and	r17, r17
    1260:	49 f0       	breq	.+18     	; 0x1274 <__stack+0xa15>
		__ticks = 1;
    1262:	ce 01       	movw	r24, r28
    1264:	8b 55       	subi	r24, 0x5B	; 91
    1266:	9f 4f       	sbci	r25, 0xFF	; 255
    1268:	21 e0       	ldi	r18, 0x01	; 1
    126a:	30 e0       	ldi	r19, 0x00	; 0
    126c:	fc 01       	movw	r30, r24
    126e:	31 83       	std	Z+1, r19	; 0x01
    1270:	20 83       	st	Z, r18
    1272:	74 c0       	rjmp	.+232    	; 0x135c <__stack+0xafd>
	else if (__tmp > 65535)
    1274:	ce 01       	movw	r24, r28
    1276:	8f 55       	subi	r24, 0x5F	; 95
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	11 e0       	ldi	r17, 0x01	; 1
    127c:	fc 01       	movw	r30, r24
    127e:	60 81       	ld	r22, Z
    1280:	71 81       	ldd	r23, Z+1	; 0x01
    1282:	82 81       	ldd	r24, Z+2	; 0x02
    1284:	93 81       	ldd	r25, Z+3	; 0x03
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	3f ef       	ldi	r19, 0xFF	; 255
    128a:	4f e7       	ldi	r20, 0x7F	; 127
    128c:	57 e4       	ldi	r21, 0x47	; 71
    128e:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
    1292:	18 16       	cp	r1, r24
    1294:	0c f0       	brlt	.+2      	; 0x1298 <__stack+0xa39>
    1296:	10 e0       	ldi	r17, 0x00	; 0
    1298:	11 23       	and	r17, r17
    129a:	09 f4       	brne	.+2      	; 0x129e <__stack+0xa3f>
    129c:	4d c0       	rjmp	.+154    	; 0x1338 <__stack+0xad9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    129e:	ce 01       	movw	r24, r28
    12a0:	83 56       	subi	r24, 0x63	; 99
    12a2:	9f 4f       	sbci	r25, 0xFF	; 255
    12a4:	fc 01       	movw	r30, r24
    12a6:	60 81       	ld	r22, Z
    12a8:	71 81       	ldd	r23, Z+1	; 0x01
    12aa:	82 81       	ldd	r24, Z+2	; 0x02
    12ac:	93 81       	ldd	r25, Z+3	; 0x03
    12ae:	20 e0       	ldi	r18, 0x00	; 0
    12b0:	30 e0       	ldi	r19, 0x00	; 0
    12b2:	40 e2       	ldi	r20, 0x20	; 32
    12b4:	51 e4       	ldi	r21, 0x41	; 65
    12b6:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    12ba:	dc 01       	movw	r26, r24
    12bc:	cb 01       	movw	r24, r22
    12be:	8e 01       	movw	r16, r28
    12c0:	0b 55       	subi	r16, 0x5B	; 91
    12c2:	1f 4f       	sbci	r17, 0xFF	; 255
    12c4:	bc 01       	movw	r22, r24
    12c6:	cd 01       	movw	r24, r26
    12c8:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    12cc:	dc 01       	movw	r26, r24
    12ce:	cb 01       	movw	r24, r22
    12d0:	f8 01       	movw	r30, r16
    12d2:	91 83       	std	Z+1, r25	; 0x01
    12d4:	80 83       	st	Z, r24
    12d6:	27 c0       	rjmp	.+78     	; 0x1326 <__stack+0xac7>
    12d8:	ce 01       	movw	r24, r28
    12da:	89 55       	subi	r24, 0x59	; 89
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	20 e9       	ldi	r18, 0x90	; 144
    12e0:	31 e0       	ldi	r19, 0x01	; 1
    12e2:	fc 01       	movw	r30, r24
    12e4:	31 83       	std	Z+1, r19	; 0x01
    12e6:	20 83       	st	Z, r18
    12e8:	ce 01       	movw	r24, r28
    12ea:	89 55       	subi	r24, 0x59	; 89
    12ec:	9f 4f       	sbci	r25, 0xFF	; 255
    12ee:	fc 01       	movw	r30, r24
    12f0:	80 81       	ld	r24, Z
    12f2:	91 81       	ldd	r25, Z+1	; 0x01
    12f4:	8c 01       	movw	r16, r24
    12f6:	c8 01       	movw	r24, r16
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	f1 f7       	brne	.-4      	; 0x12f8 <__stack+0xa99>
    12fc:	8c 01       	movw	r16, r24
    12fe:	ce 01       	movw	r24, r28
    1300:	89 55       	subi	r24, 0x59	; 89
    1302:	9f 4f       	sbci	r25, 0xFF	; 255
    1304:	fc 01       	movw	r30, r24
    1306:	11 83       	std	Z+1, r17	; 0x01
    1308:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    130a:	ce 01       	movw	r24, r28
    130c:	8b 55       	subi	r24, 0x5B	; 91
    130e:	9f 4f       	sbci	r25, 0xFF	; 255
    1310:	9e 01       	movw	r18, r28
    1312:	2b 55       	subi	r18, 0x5B	; 91
    1314:	3f 4f       	sbci	r19, 0xFF	; 255
    1316:	f9 01       	movw	r30, r18
    1318:	20 81       	ld	r18, Z
    131a:	31 81       	ldd	r19, Z+1	; 0x01
    131c:	21 50       	subi	r18, 0x01	; 1
    131e:	30 40       	sbci	r19, 0x00	; 0
    1320:	fc 01       	movw	r30, r24
    1322:	31 83       	std	Z+1, r19	; 0x01
    1324:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1326:	ce 01       	movw	r24, r28
    1328:	8b 55       	subi	r24, 0x5B	; 91
    132a:	9f 4f       	sbci	r25, 0xFF	; 255
    132c:	fc 01       	movw	r30, r24
    132e:	80 81       	ld	r24, Z
    1330:	91 81       	ldd	r25, Z+1	; 0x01
    1332:	00 97       	sbiw	r24, 0x00	; 0
    1334:	89 f6       	brne	.-94     	; 0x12d8 <__stack+0xa79>
    1336:	2f c0       	rjmp	.+94     	; 0x1396 <__stack+0xb37>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1338:	8e 01       	movw	r16, r28
    133a:	0b 55       	subi	r16, 0x5B	; 91
    133c:	1f 4f       	sbci	r17, 0xFF	; 255
    133e:	ce 01       	movw	r24, r28
    1340:	8f 55       	subi	r24, 0x5F	; 95
    1342:	9f 4f       	sbci	r25, 0xFF	; 255
    1344:	fc 01       	movw	r30, r24
    1346:	60 81       	ld	r22, Z
    1348:	71 81       	ldd	r23, Z+1	; 0x01
    134a:	82 81       	ldd	r24, Z+2	; 0x02
    134c:	93 81       	ldd	r25, Z+3	; 0x03
    134e:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    1352:	dc 01       	movw	r26, r24
    1354:	cb 01       	movw	r24, r22
    1356:	f8 01       	movw	r30, r16
    1358:	91 83       	std	Z+1, r25	; 0x01
    135a:	80 83       	st	Z, r24
    135c:	ce 01       	movw	r24, r28
    135e:	87 55       	subi	r24, 0x57	; 87
    1360:	9f 4f       	sbci	r25, 0xFF	; 255
    1362:	9e 01       	movw	r18, r28
    1364:	2b 55       	subi	r18, 0x5B	; 91
    1366:	3f 4f       	sbci	r19, 0xFF	; 255
    1368:	f9 01       	movw	r30, r18
    136a:	20 81       	ld	r18, Z
    136c:	31 81       	ldd	r19, Z+1	; 0x01
    136e:	fc 01       	movw	r30, r24
    1370:	31 83       	std	Z+1, r19	; 0x01
    1372:	20 83       	st	Z, r18
    1374:	ce 01       	movw	r24, r28
    1376:	87 55       	subi	r24, 0x57	; 87
    1378:	9f 4f       	sbci	r25, 0xFF	; 255
    137a:	fc 01       	movw	r30, r24
    137c:	80 81       	ld	r24, Z
    137e:	91 81       	ldd	r25, Z+1	; 0x01
    1380:	8c 01       	movw	r16, r24
    1382:	c8 01       	movw	r24, r16
    1384:	01 97       	sbiw	r24, 0x01	; 1
    1386:	f1 f7       	brne	.-4      	; 0x1384 <__stack+0xb25>
    1388:	8c 01       	movw	r16, r24
    138a:	ce 01       	movw	r24, r28
    138c:	87 55       	subi	r24, 0x57	; 87
    138e:	9f 4f       	sbci	r25, 0xFF	; 255
    1390:	fc 01       	movw	r30, r24
    1392:	11 83       	std	Z+1, r17	; 0x01
    1394:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0x0F);
    1396:	8f e0       	ldi	r24, 0x0F	; 15
    1398:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
    139c:	9e 01       	movw	r18, r28
    139e:	25 55       	subi	r18, 0x55	; 85
    13a0:	3f 4f       	sbci	r19, 0xFF	; 255
    13a2:	80 e0       	ldi	r24, 0x00	; 0
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	a0 ea       	ldi	r26, 0xA0	; 160
    13a8:	b0 e4       	ldi	r27, 0x40	; 64
    13aa:	f9 01       	movw	r30, r18
    13ac:	80 83       	st	Z, r24
    13ae:	91 83       	std	Z+1, r25	; 0x01
    13b0:	a2 83       	std	Z+2, r26	; 0x02
    13b2:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    13b4:	8e 01       	movw	r16, r28
    13b6:	01 55       	subi	r16, 0x51	; 81
    13b8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ba:	ce 01       	movw	r24, r28
    13bc:	85 55       	subi	r24, 0x55	; 85
    13be:	9f 4f       	sbci	r25, 0xFF	; 255
    13c0:	fc 01       	movw	r30, r24
    13c2:	60 81       	ld	r22, Z
    13c4:	71 81       	ldd	r23, Z+1	; 0x01
    13c6:	82 81       	ldd	r24, Z+2	; 0x02
    13c8:	93 81       	ldd	r25, Z+3	; 0x03
    13ca:	20 e0       	ldi	r18, 0x00	; 0
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	4a e7       	ldi	r20, 0x7A	; 122
    13d0:	55 e4       	ldi	r21, 0x45	; 69
    13d2:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    13d6:	dc 01       	movw	r26, r24
    13d8:	cb 01       	movw	r24, r22
    13da:	f8 01       	movw	r30, r16
    13dc:	80 83       	st	Z, r24
    13de:	91 83       	std	Z+1, r25	; 0x01
    13e0:	a2 83       	std	Z+2, r26	; 0x02
    13e2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13e4:	ce 01       	movw	r24, r28
    13e6:	81 55       	subi	r24, 0x51	; 81
    13e8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ea:	11 e0       	ldi	r17, 0x01	; 1
    13ec:	fc 01       	movw	r30, r24
    13ee:	60 81       	ld	r22, Z
    13f0:	71 81       	ldd	r23, Z+1	; 0x01
    13f2:	82 81       	ldd	r24, Z+2	; 0x02
    13f4:	93 81       	ldd	r25, Z+3	; 0x03
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	40 e8       	ldi	r20, 0x80	; 128
    13fc:	5f e3       	ldi	r21, 0x3F	; 63
    13fe:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
    1402:	88 23       	and	r24, r24
    1404:	0c f0       	brlt	.+2      	; 0x1408 <__stack+0xba9>
    1406:	10 e0       	ldi	r17, 0x00	; 0
    1408:	11 23       	and	r17, r17
    140a:	49 f0       	breq	.+18     	; 0x141e <__stack+0xbbf>
		__ticks = 1;
    140c:	ce 01       	movw	r24, r28
    140e:	8d 54       	subi	r24, 0x4D	; 77
    1410:	9f 4f       	sbci	r25, 0xFF	; 255
    1412:	21 e0       	ldi	r18, 0x01	; 1
    1414:	30 e0       	ldi	r19, 0x00	; 0
    1416:	fc 01       	movw	r30, r24
    1418:	31 83       	std	Z+1, r19	; 0x01
    141a:	20 83       	st	Z, r18
    141c:	74 c0       	rjmp	.+232    	; 0x1506 <__stack+0xca7>
	else if (__tmp > 65535)
    141e:	ce 01       	movw	r24, r28
    1420:	81 55       	subi	r24, 0x51	; 81
    1422:	9f 4f       	sbci	r25, 0xFF	; 255
    1424:	11 e0       	ldi	r17, 0x01	; 1
    1426:	fc 01       	movw	r30, r24
    1428:	60 81       	ld	r22, Z
    142a:	71 81       	ldd	r23, Z+1	; 0x01
    142c:	82 81       	ldd	r24, Z+2	; 0x02
    142e:	93 81       	ldd	r25, Z+3	; 0x03
    1430:	20 e0       	ldi	r18, 0x00	; 0
    1432:	3f ef       	ldi	r19, 0xFF	; 255
    1434:	4f e7       	ldi	r20, 0x7F	; 127
    1436:	57 e4       	ldi	r21, 0x47	; 71
    1438:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
    143c:	18 16       	cp	r1, r24
    143e:	0c f0       	brlt	.+2      	; 0x1442 <__stack+0xbe3>
    1440:	10 e0       	ldi	r17, 0x00	; 0
    1442:	11 23       	and	r17, r17
    1444:	09 f4       	brne	.+2      	; 0x1448 <__stack+0xbe9>
    1446:	4d c0       	rjmp	.+154    	; 0x14e2 <__stack+0xc83>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1448:	ce 01       	movw	r24, r28
    144a:	85 55       	subi	r24, 0x55	; 85
    144c:	9f 4f       	sbci	r25, 0xFF	; 255
    144e:	fc 01       	movw	r30, r24
    1450:	60 81       	ld	r22, Z
    1452:	71 81       	ldd	r23, Z+1	; 0x01
    1454:	82 81       	ldd	r24, Z+2	; 0x02
    1456:	93 81       	ldd	r25, Z+3	; 0x03
    1458:	20 e0       	ldi	r18, 0x00	; 0
    145a:	30 e0       	ldi	r19, 0x00	; 0
    145c:	40 e2       	ldi	r20, 0x20	; 32
    145e:	51 e4       	ldi	r21, 0x41	; 65
    1460:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    1464:	dc 01       	movw	r26, r24
    1466:	cb 01       	movw	r24, r22
    1468:	8e 01       	movw	r16, r28
    146a:	0d 54       	subi	r16, 0x4D	; 77
    146c:	1f 4f       	sbci	r17, 0xFF	; 255
    146e:	bc 01       	movw	r22, r24
    1470:	cd 01       	movw	r24, r26
    1472:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    1476:	dc 01       	movw	r26, r24
    1478:	cb 01       	movw	r24, r22
    147a:	f8 01       	movw	r30, r16
    147c:	91 83       	std	Z+1, r25	; 0x01
    147e:	80 83       	st	Z, r24
    1480:	27 c0       	rjmp	.+78     	; 0x14d0 <__stack+0xc71>
    1482:	ce 01       	movw	r24, r28
    1484:	8b 54       	subi	r24, 0x4B	; 75
    1486:	9f 4f       	sbci	r25, 0xFF	; 255
    1488:	20 e9       	ldi	r18, 0x90	; 144
    148a:	31 e0       	ldi	r19, 0x01	; 1
    148c:	fc 01       	movw	r30, r24
    148e:	31 83       	std	Z+1, r19	; 0x01
    1490:	20 83       	st	Z, r18
    1492:	ce 01       	movw	r24, r28
    1494:	8b 54       	subi	r24, 0x4B	; 75
    1496:	9f 4f       	sbci	r25, 0xFF	; 255
    1498:	fc 01       	movw	r30, r24
    149a:	80 81       	ld	r24, Z
    149c:	91 81       	ldd	r25, Z+1	; 0x01
    149e:	8c 01       	movw	r16, r24
    14a0:	c8 01       	movw	r24, r16
    14a2:	01 97       	sbiw	r24, 0x01	; 1
    14a4:	f1 f7       	brne	.-4      	; 0x14a2 <__stack+0xc43>
    14a6:	8c 01       	movw	r16, r24
    14a8:	ce 01       	movw	r24, r28
    14aa:	8b 54       	subi	r24, 0x4B	; 75
    14ac:	9f 4f       	sbci	r25, 0xFF	; 255
    14ae:	fc 01       	movw	r30, r24
    14b0:	11 83       	std	Z+1, r17	; 0x01
    14b2:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14b4:	ce 01       	movw	r24, r28
    14b6:	8d 54       	subi	r24, 0x4D	; 77
    14b8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ba:	9e 01       	movw	r18, r28
    14bc:	2d 54       	subi	r18, 0x4D	; 77
    14be:	3f 4f       	sbci	r19, 0xFF	; 255
    14c0:	f9 01       	movw	r30, r18
    14c2:	20 81       	ld	r18, Z
    14c4:	31 81       	ldd	r19, Z+1	; 0x01
    14c6:	21 50       	subi	r18, 0x01	; 1
    14c8:	30 40       	sbci	r19, 0x00	; 0
    14ca:	fc 01       	movw	r30, r24
    14cc:	31 83       	std	Z+1, r19	; 0x01
    14ce:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14d0:	ce 01       	movw	r24, r28
    14d2:	8d 54       	subi	r24, 0x4D	; 77
    14d4:	9f 4f       	sbci	r25, 0xFF	; 255
    14d6:	fc 01       	movw	r30, r24
    14d8:	80 81       	ld	r24, Z
    14da:	91 81       	ldd	r25, Z+1	; 0x01
    14dc:	00 97       	sbiw	r24, 0x00	; 0
    14de:	89 f6       	brne	.-94     	; 0x1482 <__stack+0xc23>
    14e0:	2f c0       	rjmp	.+94     	; 0x1540 <__stack+0xce1>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14e2:	8e 01       	movw	r16, r28
    14e4:	0d 54       	subi	r16, 0x4D	; 77
    14e6:	1f 4f       	sbci	r17, 0xFF	; 255
    14e8:	ce 01       	movw	r24, r28
    14ea:	81 55       	subi	r24, 0x51	; 81
    14ec:	9f 4f       	sbci	r25, 0xFF	; 255
    14ee:	fc 01       	movw	r30, r24
    14f0:	60 81       	ld	r22, Z
    14f2:	71 81       	ldd	r23, Z+1	; 0x01
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    14fc:	dc 01       	movw	r26, r24
    14fe:	cb 01       	movw	r24, r22
    1500:	f8 01       	movw	r30, r16
    1502:	91 83       	std	Z+1, r25	; 0x01
    1504:	80 83       	st	Z, r24
    1506:	ce 01       	movw	r24, r28
    1508:	89 54       	subi	r24, 0x49	; 73
    150a:	9f 4f       	sbci	r25, 0xFF	; 255
    150c:	9e 01       	movw	r18, r28
    150e:	2d 54       	subi	r18, 0x4D	; 77
    1510:	3f 4f       	sbci	r19, 0xFF	; 255
    1512:	f9 01       	movw	r30, r18
    1514:	20 81       	ld	r18, Z
    1516:	31 81       	ldd	r19, Z+1	; 0x01
    1518:	fc 01       	movw	r30, r24
    151a:	31 83       	std	Z+1, r19	; 0x01
    151c:	20 83       	st	Z, r18
    151e:	ce 01       	movw	r24, r28
    1520:	89 54       	subi	r24, 0x49	; 73
    1522:	9f 4f       	sbci	r25, 0xFF	; 255
    1524:	fc 01       	movw	r30, r24
    1526:	80 81       	ld	r24, Z
    1528:	91 81       	ldd	r25, Z+1	; 0x01
    152a:	8c 01       	movw	r16, r24
    152c:	c8 01       	movw	r24, r16
    152e:	01 97       	sbiw	r24, 0x01	; 1
    1530:	f1 f7       	brne	.-4      	; 0x152e <__stack+0xccf>
    1532:	8c 01       	movw	r16, r24
    1534:	ce 01       	movw	r24, r28
    1536:	89 54       	subi	r24, 0x49	; 73
    1538:	9f 4f       	sbci	r25, 0xFF	; 255
    153a:	fc 01       	movw	r30, r24
    153c:	11 83       	std	Z+1, r17	; 0x01
    153e:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0x0C);
    1540:	8c e0       	ldi	r24, 0x0C	; 12
    1542:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
    1546:	9e 01       	movw	r18, r28
    1548:	27 54       	subi	r18, 0x47	; 71
    154a:	3f 4f       	sbci	r19, 0xFF	; 255
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	a0 ea       	ldi	r26, 0xA0	; 160
    1552:	b0 e4       	ldi	r27, 0x40	; 64
    1554:	f9 01       	movw	r30, r18
    1556:	80 83       	st	Z, r24
    1558:	91 83       	std	Z+1, r25	; 0x01
    155a:	a2 83       	std	Z+2, r26	; 0x02
    155c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	__tmp = ((F_CPU) / 4e3) * __ms;
    155e:	8e 01       	movw	r16, r28
    1560:	03 54       	subi	r16, 0x43	; 67
    1562:	1f 4f       	sbci	r17, 0xFF	; 255
    1564:	ce 01       	movw	r24, r28
    1566:	87 54       	subi	r24, 0x47	; 71
    1568:	9f 4f       	sbci	r25, 0xFF	; 255
    156a:	fc 01       	movw	r30, r24
    156c:	60 81       	ld	r22, Z
    156e:	71 81       	ldd	r23, Z+1	; 0x01
    1570:	82 81       	ldd	r24, Z+2	; 0x02
    1572:	93 81       	ldd	r25, Z+3	; 0x03
    1574:	20 e0       	ldi	r18, 0x00	; 0
    1576:	30 e0       	ldi	r19, 0x00	; 0
    1578:	4a e7       	ldi	r20, 0x7A	; 122
    157a:	55 e4       	ldi	r21, 0x45	; 69
    157c:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    1580:	dc 01       	movw	r26, r24
    1582:	cb 01       	movw	r24, r22
    1584:	f8 01       	movw	r30, r16
    1586:	80 83       	st	Z, r24
    1588:	91 83       	std	Z+1, r25	; 0x01
    158a:	a2 83       	std	Z+2, r26	; 0x02
    158c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    158e:	ce 01       	movw	r24, r28
    1590:	83 54       	subi	r24, 0x43	; 67
    1592:	9f 4f       	sbci	r25, 0xFF	; 255
    1594:	11 e0       	ldi	r17, 0x01	; 1
    1596:	fc 01       	movw	r30, r24
    1598:	60 81       	ld	r22, Z
    159a:	71 81       	ldd	r23, Z+1	; 0x01
    159c:	82 81       	ldd	r24, Z+2	; 0x02
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	20 e0       	ldi	r18, 0x00	; 0
    15a2:	30 e0       	ldi	r19, 0x00	; 0
    15a4:	40 e8       	ldi	r20, 0x80	; 128
    15a6:	5f e3       	ldi	r21, 0x3F	; 63
    15a8:	0e 94 90 0b 	call	0x1720	; 0x1720 <__cmpsf2>
    15ac:	88 23       	and	r24, r24
    15ae:	0c f0       	brlt	.+2      	; 0x15b2 <__stack+0xd53>
    15b0:	10 e0       	ldi	r17, 0x00	; 0
    15b2:	11 23       	and	r17, r17
    15b4:	49 f0       	breq	.+18     	; 0x15c8 <__stack+0xd69>
		__ticks = 1;
    15b6:	ce 01       	movw	r24, r28
    15b8:	8f 53       	subi	r24, 0x3F	; 63
    15ba:	9f 4f       	sbci	r25, 0xFF	; 255
    15bc:	21 e0       	ldi	r18, 0x01	; 1
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	fc 01       	movw	r30, r24
    15c2:	31 83       	std	Z+1, r19	; 0x01
    15c4:	20 83       	st	Z, r18
    15c6:	74 c0       	rjmp	.+232    	; 0x16b0 <__stack+0xe51>
	else if (__tmp > 65535)
    15c8:	ce 01       	movw	r24, r28
    15ca:	83 54       	subi	r24, 0x43	; 67
    15cc:	9f 4f       	sbci	r25, 0xFF	; 255
    15ce:	11 e0       	ldi	r17, 0x01	; 1
    15d0:	fc 01       	movw	r30, r24
    15d2:	60 81       	ld	r22, Z
    15d4:	71 81       	ldd	r23, Z+1	; 0x01
    15d6:	82 81       	ldd	r24, Z+2	; 0x02
    15d8:	93 81       	ldd	r25, Z+3	; 0x03
    15da:	20 e0       	ldi	r18, 0x00	; 0
    15dc:	3f ef       	ldi	r19, 0xFF	; 255
    15de:	4f e7       	ldi	r20, 0x7F	; 127
    15e0:	57 e4       	ldi	r21, 0x47	; 71
    15e2:	0e 94 0d 0c 	call	0x181a	; 0x181a <__gesf2>
    15e6:	18 16       	cp	r1, r24
    15e8:	0c f0       	brlt	.+2      	; 0x15ec <__stack+0xd8d>
    15ea:	10 e0       	ldi	r17, 0x00	; 0
    15ec:	11 23       	and	r17, r17
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <__stack+0xd93>
    15f0:	4d c0       	rjmp	.+154    	; 0x168c <__stack+0xe2d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15f2:	ce 01       	movw	r24, r28
    15f4:	87 54       	subi	r24, 0x47	; 71
    15f6:	9f 4f       	sbci	r25, 0xFF	; 255
    15f8:	fc 01       	movw	r30, r24
    15fa:	60 81       	ld	r22, Z
    15fc:	71 81       	ldd	r23, Z+1	; 0x01
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
    1600:	93 81       	ldd	r25, Z+3	; 0x03
    1602:	20 e0       	ldi	r18, 0x00	; 0
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	40 e2       	ldi	r20, 0x20	; 32
    1608:	51 e4       	ldi	r21, 0x41	; 65
    160a:	0e 94 11 0c 	call	0x1822	; 0x1822 <__mulsf3>
    160e:	dc 01       	movw	r26, r24
    1610:	cb 01       	movw	r24, r22
    1612:	8e 01       	movw	r16, r28
    1614:	0f 53       	subi	r16, 0x3F	; 63
    1616:	1f 4f       	sbci	r17, 0xFF	; 255
    1618:	bc 01       	movw	r22, r24
    161a:	cd 01       	movw	r24, r26
    161c:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	f8 01       	movw	r30, r16
    1626:	91 83       	std	Z+1, r25	; 0x01
    1628:	80 83       	st	Z, r24
    162a:	27 c0       	rjmp	.+78     	; 0x167a <__stack+0xe1b>
    162c:	ce 01       	movw	r24, r28
    162e:	8d 53       	subi	r24, 0x3D	; 61
    1630:	9f 4f       	sbci	r25, 0xFF	; 255
    1632:	20 e9       	ldi	r18, 0x90	; 144
    1634:	31 e0       	ldi	r19, 0x01	; 1
    1636:	fc 01       	movw	r30, r24
    1638:	31 83       	std	Z+1, r19	; 0x01
    163a:	20 83       	st	Z, r18
    163c:	ce 01       	movw	r24, r28
    163e:	8d 53       	subi	r24, 0x3D	; 61
    1640:	9f 4f       	sbci	r25, 0xFF	; 255
    1642:	fc 01       	movw	r30, r24
    1644:	80 81       	ld	r24, Z
    1646:	91 81       	ldd	r25, Z+1	; 0x01
    1648:	8c 01       	movw	r16, r24
    164a:	c8 01       	movw	r24, r16
    164c:	01 97       	sbiw	r24, 0x01	; 1
    164e:	f1 f7       	brne	.-4      	; 0x164c <__stack+0xded>
    1650:	8c 01       	movw	r16, r24
    1652:	ce 01       	movw	r24, r28
    1654:	8d 53       	subi	r24, 0x3D	; 61
    1656:	9f 4f       	sbci	r25, 0xFF	; 255
    1658:	fc 01       	movw	r30, r24
    165a:	11 83       	std	Z+1, r17	; 0x01
    165c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    165e:	ce 01       	movw	r24, r28
    1660:	8f 53       	subi	r24, 0x3F	; 63
    1662:	9f 4f       	sbci	r25, 0xFF	; 255
    1664:	9e 01       	movw	r18, r28
    1666:	2f 53       	subi	r18, 0x3F	; 63
    1668:	3f 4f       	sbci	r19, 0xFF	; 255
    166a:	f9 01       	movw	r30, r18
    166c:	20 81       	ld	r18, Z
    166e:	31 81       	ldd	r19, Z+1	; 0x01
    1670:	21 50       	subi	r18, 0x01	; 1
    1672:	30 40       	sbci	r19, 0x00	; 0
    1674:	fc 01       	movw	r30, r24
    1676:	31 83       	std	Z+1, r19	; 0x01
    1678:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    167a:	ce 01       	movw	r24, r28
    167c:	8f 53       	subi	r24, 0x3F	; 63
    167e:	9f 4f       	sbci	r25, 0xFF	; 255
    1680:	fc 01       	movw	r30, r24
    1682:	80 81       	ld	r24, Z
    1684:	91 81       	ldd	r25, Z+1	; 0x01
    1686:	00 97       	sbiw	r24, 0x00	; 0
    1688:	89 f6       	brne	.-94     	; 0x162c <__stack+0xdcd>
    168a:	2f c0       	rjmp	.+94     	; 0x16ea <__stack+0xe8b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    168c:	8e 01       	movw	r16, r28
    168e:	0f 53       	subi	r16, 0x3F	; 63
    1690:	1f 4f       	sbci	r17, 0xFF	; 255
    1692:	ce 01       	movw	r24, r28
    1694:	83 54       	subi	r24, 0x43	; 67
    1696:	9f 4f       	sbci	r25, 0xFF	; 255
    1698:	fc 01       	movw	r30, r24
    169a:	60 81       	ld	r22, Z
    169c:	71 81       	ldd	r23, Z+1	; 0x01
    169e:	82 81       	ldd	r24, Z+2	; 0x02
    16a0:	93 81       	ldd	r25, Z+3	; 0x03
    16a2:	0e 94 94 0b 	call	0x1728	; 0x1728 <__fixunssfsi>
    16a6:	dc 01       	movw	r26, r24
    16a8:	cb 01       	movw	r24, r22
    16aa:	f8 01       	movw	r30, r16
    16ac:	91 83       	std	Z+1, r25	; 0x01
    16ae:	80 83       	st	Z, r24
    16b0:	ce 01       	movw	r24, r28
    16b2:	8b 53       	subi	r24, 0x3B	; 59
    16b4:	9f 4f       	sbci	r25, 0xFF	; 255
    16b6:	9e 01       	movw	r18, r28
    16b8:	2f 53       	subi	r18, 0x3F	; 63
    16ba:	3f 4f       	sbci	r19, 0xFF	; 255
    16bc:	f9 01       	movw	r30, r18
    16be:	20 81       	ld	r18, Z
    16c0:	31 81       	ldd	r19, Z+1	; 0x01
    16c2:	fc 01       	movw	r30, r24
    16c4:	31 83       	std	Z+1, r19	; 0x01
    16c6:	20 83       	st	Z, r18
    16c8:	ce 01       	movw	r24, r28
    16ca:	8b 53       	subi	r24, 0x3B	; 59
    16cc:	9f 4f       	sbci	r25, 0xFF	; 255
    16ce:	fc 01       	movw	r30, r24
    16d0:	80 81       	ld	r24, Z
    16d2:	91 81       	ldd	r25, Z+1	; 0x01
    16d4:	8c 01       	movw	r16, r24
    16d6:	c8 01       	movw	r24, r16
    16d8:	01 97       	sbiw	r24, 0x01	; 1
    16da:	f1 f7       	brne	.-4      	; 0x16d8 <__stack+0xe79>
    16dc:	8c 01       	movw	r16, r24
    16de:	ce 01       	movw	r24, r28
    16e0:	8b 53       	subi	r24, 0x3B	; 59
    16e2:	9f 4f       	sbci	r25, 0xFF	; 255
    16e4:	fc 01       	movw	r30, r24
    16e6:	11 83       	std	Z+1, r17	; 0x01
    16e8:	00 83       	st	Z, r16
	_delay_ms(5);
	wyslijComend(0x00);
    16ea:	80 e0       	ldi	r24, 0x00	; 0
    16ec:	0e 94 c7 00 	call	0x18e	; 0x18e <wyslijComend>
	
}
    16f0:	ca 53       	subi	r28, 0x3A	; 58
    16f2:	df 4f       	sbci	r29, 0xFF	; 255
    16f4:	0f b6       	in	r0, 0x3f	; 63
    16f6:	f8 94       	cli
    16f8:	de bf       	out	0x3e, r29	; 62
    16fa:	0f be       	out	0x3f, r0	; 63
    16fc:	cd bf       	out	0x3d, r28	; 61
    16fe:	df 91       	pop	r29
    1700:	cf 91       	pop	r28
    1702:	1f 91       	pop	r17
    1704:	0f 91       	pop	r16
    1706:	08 95       	ret

00001708 <main>:

int main(void)
{
    1708:	cf 93       	push	r28
    170a:	df 93       	push	r29
    170c:	cd b7       	in	r28, 0x3d	; 61
    170e:	de b7       	in	r29, 0x3e	; 62
	DDRA = 0xFF;
    1710:	8a e3       	ldi	r24, 0x3A	; 58
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	2f ef       	ldi	r18, 0xFF	; 255
    1716:	fc 01       	movw	r30, r24
    1718:	20 83       	st	Z, r18
	initLCD();
    171a:	0e 94 0e 01 	call	0x21c	; 0x21c <initLCD>
    {
		
	
		
		
    }
    171e:	ff cf       	rjmp	.-2      	; 0x171e <main+0x16>

00001720 <__cmpsf2>:
    1720:	2f d0       	rcall	.+94     	; 0x1780 <__fp_cmp>
    1722:	08 f4       	brcc	.+2      	; 0x1726 <__cmpsf2+0x6>
    1724:	81 e0       	ldi	r24, 0x01	; 1
    1726:	08 95       	ret

00001728 <__fixunssfsi>:
    1728:	57 d0       	rcall	.+174    	; 0x17d8 <__fp_splitA>
    172a:	88 f0       	brcs	.+34     	; 0x174e <__fixunssfsi+0x26>
    172c:	9f 57       	subi	r25, 0x7F	; 127
    172e:	90 f0       	brcs	.+36     	; 0x1754 <__fixunssfsi+0x2c>
    1730:	b9 2f       	mov	r27, r25
    1732:	99 27       	eor	r25, r25
    1734:	b7 51       	subi	r27, 0x17	; 23
    1736:	a0 f0       	brcs	.+40     	; 0x1760 <__fixunssfsi+0x38>
    1738:	d1 f0       	breq	.+52     	; 0x176e <__fixunssfsi+0x46>
    173a:	66 0f       	add	r22, r22
    173c:	77 1f       	adc	r23, r23
    173e:	88 1f       	adc	r24, r24
    1740:	99 1f       	adc	r25, r25
    1742:	1a f0       	brmi	.+6      	; 0x174a <__fixunssfsi+0x22>
    1744:	ba 95       	dec	r27
    1746:	c9 f7       	brne	.-14     	; 0x173a <__fixunssfsi+0x12>
    1748:	12 c0       	rjmp	.+36     	; 0x176e <__fixunssfsi+0x46>
    174a:	b1 30       	cpi	r27, 0x01	; 1
    174c:	81 f0       	breq	.+32     	; 0x176e <__fixunssfsi+0x46>
    174e:	5e d0       	rcall	.+188    	; 0x180c <__fp_zero>
    1750:	b1 e0       	ldi	r27, 0x01	; 1
    1752:	08 95       	ret
    1754:	5b c0       	rjmp	.+182    	; 0x180c <__fp_zero>
    1756:	67 2f       	mov	r22, r23
    1758:	78 2f       	mov	r23, r24
    175a:	88 27       	eor	r24, r24
    175c:	b8 5f       	subi	r27, 0xF8	; 248
    175e:	39 f0       	breq	.+14     	; 0x176e <__fixunssfsi+0x46>
    1760:	b9 3f       	cpi	r27, 0xF9	; 249
    1762:	cc f3       	brlt	.-14     	; 0x1756 <__fixunssfsi+0x2e>
    1764:	86 95       	lsr	r24
    1766:	77 95       	ror	r23
    1768:	67 95       	ror	r22
    176a:	b3 95       	inc	r27
    176c:	d9 f7       	brne	.-10     	; 0x1764 <__fixunssfsi+0x3c>
    176e:	3e f4       	brtc	.+14     	; 0x177e <__fixunssfsi+0x56>
    1770:	90 95       	com	r25
    1772:	80 95       	com	r24
    1774:	70 95       	com	r23
    1776:	61 95       	neg	r22
    1778:	7f 4f       	sbci	r23, 0xFF	; 255
    177a:	8f 4f       	sbci	r24, 0xFF	; 255
    177c:	9f 4f       	sbci	r25, 0xFF	; 255
    177e:	08 95       	ret

00001780 <__fp_cmp>:
    1780:	99 0f       	add	r25, r25
    1782:	00 08       	sbc	r0, r0
    1784:	55 0f       	add	r21, r21
    1786:	aa 0b       	sbc	r26, r26
    1788:	e0 e8       	ldi	r30, 0x80	; 128
    178a:	fe ef       	ldi	r31, 0xFE	; 254
    178c:	16 16       	cp	r1, r22
    178e:	17 06       	cpc	r1, r23
    1790:	e8 07       	cpc	r30, r24
    1792:	f9 07       	cpc	r31, r25
    1794:	c0 f0       	brcs	.+48     	; 0x17c6 <__fp_cmp+0x46>
    1796:	12 16       	cp	r1, r18
    1798:	13 06       	cpc	r1, r19
    179a:	e4 07       	cpc	r30, r20
    179c:	f5 07       	cpc	r31, r21
    179e:	98 f0       	brcs	.+38     	; 0x17c6 <__fp_cmp+0x46>
    17a0:	62 1b       	sub	r22, r18
    17a2:	73 0b       	sbc	r23, r19
    17a4:	84 0b       	sbc	r24, r20
    17a6:	95 0b       	sbc	r25, r21
    17a8:	39 f4       	brne	.+14     	; 0x17b8 <__fp_cmp+0x38>
    17aa:	0a 26       	eor	r0, r26
    17ac:	61 f0       	breq	.+24     	; 0x17c6 <__fp_cmp+0x46>
    17ae:	23 2b       	or	r18, r19
    17b0:	24 2b       	or	r18, r20
    17b2:	25 2b       	or	r18, r21
    17b4:	21 f4       	brne	.+8      	; 0x17be <__fp_cmp+0x3e>
    17b6:	08 95       	ret
    17b8:	0a 26       	eor	r0, r26
    17ba:	09 f4       	brne	.+2      	; 0x17be <__fp_cmp+0x3e>
    17bc:	a1 40       	sbci	r26, 0x01	; 1
    17be:	a6 95       	lsr	r26
    17c0:	8f ef       	ldi	r24, 0xFF	; 255
    17c2:	81 1d       	adc	r24, r1
    17c4:	81 1d       	adc	r24, r1
    17c6:	08 95       	ret

000017c8 <__fp_split3>:
    17c8:	57 fd       	sbrc	r21, 7
    17ca:	90 58       	subi	r25, 0x80	; 128
    17cc:	44 0f       	add	r20, r20
    17ce:	55 1f       	adc	r21, r21
    17d0:	59 f0       	breq	.+22     	; 0x17e8 <__fp_splitA+0x10>
    17d2:	5f 3f       	cpi	r21, 0xFF	; 255
    17d4:	71 f0       	breq	.+28     	; 0x17f2 <__fp_splitA+0x1a>
    17d6:	47 95       	ror	r20

000017d8 <__fp_splitA>:
    17d8:	88 0f       	add	r24, r24
    17da:	97 fb       	bst	r25, 7
    17dc:	99 1f       	adc	r25, r25
    17de:	61 f0       	breq	.+24     	; 0x17f8 <__fp_splitA+0x20>
    17e0:	9f 3f       	cpi	r25, 0xFF	; 255
    17e2:	79 f0       	breq	.+30     	; 0x1802 <__fp_splitA+0x2a>
    17e4:	87 95       	ror	r24
    17e6:	08 95       	ret
    17e8:	12 16       	cp	r1, r18
    17ea:	13 06       	cpc	r1, r19
    17ec:	14 06       	cpc	r1, r20
    17ee:	55 1f       	adc	r21, r21
    17f0:	f2 cf       	rjmp	.-28     	; 0x17d6 <__fp_split3+0xe>
    17f2:	46 95       	lsr	r20
    17f4:	f1 df       	rcall	.-30     	; 0x17d8 <__fp_splitA>
    17f6:	08 c0       	rjmp	.+16     	; 0x1808 <__fp_splitA+0x30>
    17f8:	16 16       	cp	r1, r22
    17fa:	17 06       	cpc	r1, r23
    17fc:	18 06       	cpc	r1, r24
    17fe:	99 1f       	adc	r25, r25
    1800:	f1 cf       	rjmp	.-30     	; 0x17e4 <__fp_splitA+0xc>
    1802:	86 95       	lsr	r24
    1804:	71 05       	cpc	r23, r1
    1806:	61 05       	cpc	r22, r1
    1808:	08 94       	sec
    180a:	08 95       	ret

0000180c <__fp_zero>:
    180c:	e8 94       	clt

0000180e <__fp_szero>:
    180e:	bb 27       	eor	r27, r27
    1810:	66 27       	eor	r22, r22
    1812:	77 27       	eor	r23, r23
    1814:	cb 01       	movw	r24, r22
    1816:	97 f9       	bld	r25, 7
    1818:	08 95       	ret

0000181a <__gesf2>:
    181a:	b2 df       	rcall	.-156    	; 0x1780 <__fp_cmp>
    181c:	08 f4       	brcc	.+2      	; 0x1820 <__gesf2+0x6>
    181e:	8f ef       	ldi	r24, 0xFF	; 255
    1820:	08 95       	ret

00001822 <__mulsf3>:
    1822:	0b d0       	rcall	.+22     	; 0x183a <__mulsf3x>
    1824:	78 c0       	rjmp	.+240    	; 0x1916 <__fp_round>
    1826:	69 d0       	rcall	.+210    	; 0x18fa <__fp_pscA>
    1828:	28 f0       	brcs	.+10     	; 0x1834 <__mulsf3+0x12>
    182a:	6e d0       	rcall	.+220    	; 0x1908 <__fp_pscB>
    182c:	18 f0       	brcs	.+6      	; 0x1834 <__mulsf3+0x12>
    182e:	95 23       	and	r25, r21
    1830:	09 f0       	breq	.+2      	; 0x1834 <__mulsf3+0x12>
    1832:	5a c0       	rjmp	.+180    	; 0x18e8 <__fp_inf>
    1834:	5f c0       	rjmp	.+190    	; 0x18f4 <__fp_nan>
    1836:	11 24       	eor	r1, r1
    1838:	ea cf       	rjmp	.-44     	; 0x180e <__fp_szero>

0000183a <__mulsf3x>:
    183a:	c6 df       	rcall	.-116    	; 0x17c8 <__fp_split3>
    183c:	a0 f3       	brcs	.-24     	; 0x1826 <__mulsf3+0x4>

0000183e <__mulsf3_pse>:
    183e:	95 9f       	mul	r25, r21
    1840:	d1 f3       	breq	.-12     	; 0x1836 <__mulsf3+0x14>
    1842:	95 0f       	add	r25, r21
    1844:	50 e0       	ldi	r21, 0x00	; 0
    1846:	55 1f       	adc	r21, r21
    1848:	62 9f       	mul	r22, r18
    184a:	f0 01       	movw	r30, r0
    184c:	72 9f       	mul	r23, r18
    184e:	bb 27       	eor	r27, r27
    1850:	f0 0d       	add	r31, r0
    1852:	b1 1d       	adc	r27, r1
    1854:	63 9f       	mul	r22, r19
    1856:	aa 27       	eor	r26, r26
    1858:	f0 0d       	add	r31, r0
    185a:	b1 1d       	adc	r27, r1
    185c:	aa 1f       	adc	r26, r26
    185e:	64 9f       	mul	r22, r20
    1860:	66 27       	eor	r22, r22
    1862:	b0 0d       	add	r27, r0
    1864:	a1 1d       	adc	r26, r1
    1866:	66 1f       	adc	r22, r22
    1868:	82 9f       	mul	r24, r18
    186a:	22 27       	eor	r18, r18
    186c:	b0 0d       	add	r27, r0
    186e:	a1 1d       	adc	r26, r1
    1870:	62 1f       	adc	r22, r18
    1872:	73 9f       	mul	r23, r19
    1874:	b0 0d       	add	r27, r0
    1876:	a1 1d       	adc	r26, r1
    1878:	62 1f       	adc	r22, r18
    187a:	83 9f       	mul	r24, r19
    187c:	a0 0d       	add	r26, r0
    187e:	61 1d       	adc	r22, r1
    1880:	22 1f       	adc	r18, r18
    1882:	74 9f       	mul	r23, r20
    1884:	33 27       	eor	r19, r19
    1886:	a0 0d       	add	r26, r0
    1888:	61 1d       	adc	r22, r1
    188a:	23 1f       	adc	r18, r19
    188c:	84 9f       	mul	r24, r20
    188e:	60 0d       	add	r22, r0
    1890:	21 1d       	adc	r18, r1
    1892:	82 2f       	mov	r24, r18
    1894:	76 2f       	mov	r23, r22
    1896:	6a 2f       	mov	r22, r26
    1898:	11 24       	eor	r1, r1
    189a:	9f 57       	subi	r25, 0x7F	; 127
    189c:	50 40       	sbci	r21, 0x00	; 0
    189e:	8a f0       	brmi	.+34     	; 0x18c2 <__mulsf3_pse+0x84>
    18a0:	e1 f0       	breq	.+56     	; 0x18da <__mulsf3_pse+0x9c>
    18a2:	88 23       	and	r24, r24
    18a4:	4a f0       	brmi	.+18     	; 0x18b8 <__mulsf3_pse+0x7a>
    18a6:	ee 0f       	add	r30, r30
    18a8:	ff 1f       	adc	r31, r31
    18aa:	bb 1f       	adc	r27, r27
    18ac:	66 1f       	adc	r22, r22
    18ae:	77 1f       	adc	r23, r23
    18b0:	88 1f       	adc	r24, r24
    18b2:	91 50       	subi	r25, 0x01	; 1
    18b4:	50 40       	sbci	r21, 0x00	; 0
    18b6:	a9 f7       	brne	.-22     	; 0x18a2 <__mulsf3_pse+0x64>
    18b8:	9e 3f       	cpi	r25, 0xFE	; 254
    18ba:	51 05       	cpc	r21, r1
    18bc:	70 f0       	brcs	.+28     	; 0x18da <__mulsf3_pse+0x9c>
    18be:	14 c0       	rjmp	.+40     	; 0x18e8 <__fp_inf>
    18c0:	a6 cf       	rjmp	.-180    	; 0x180e <__fp_szero>
    18c2:	5f 3f       	cpi	r21, 0xFF	; 255
    18c4:	ec f3       	brlt	.-6      	; 0x18c0 <__mulsf3_pse+0x82>
    18c6:	98 3e       	cpi	r25, 0xE8	; 232
    18c8:	dc f3       	brlt	.-10     	; 0x18c0 <__mulsf3_pse+0x82>
    18ca:	86 95       	lsr	r24
    18cc:	77 95       	ror	r23
    18ce:	67 95       	ror	r22
    18d0:	b7 95       	ror	r27
    18d2:	f7 95       	ror	r31
    18d4:	e7 95       	ror	r30
    18d6:	9f 5f       	subi	r25, 0xFF	; 255
    18d8:	c1 f7       	brne	.-16     	; 0x18ca <__mulsf3_pse+0x8c>
    18da:	fe 2b       	or	r31, r30
    18dc:	88 0f       	add	r24, r24
    18de:	91 1d       	adc	r25, r1
    18e0:	96 95       	lsr	r25
    18e2:	87 95       	ror	r24
    18e4:	97 f9       	bld	r25, 7
    18e6:	08 95       	ret

000018e8 <__fp_inf>:
    18e8:	97 f9       	bld	r25, 7
    18ea:	9f 67       	ori	r25, 0x7F	; 127
    18ec:	80 e8       	ldi	r24, 0x80	; 128
    18ee:	70 e0       	ldi	r23, 0x00	; 0
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	08 95       	ret

000018f4 <__fp_nan>:
    18f4:	9f ef       	ldi	r25, 0xFF	; 255
    18f6:	80 ec       	ldi	r24, 0xC0	; 192
    18f8:	08 95       	ret

000018fa <__fp_pscA>:
    18fa:	00 24       	eor	r0, r0
    18fc:	0a 94       	dec	r0
    18fe:	16 16       	cp	r1, r22
    1900:	17 06       	cpc	r1, r23
    1902:	18 06       	cpc	r1, r24
    1904:	09 06       	cpc	r0, r25
    1906:	08 95       	ret

00001908 <__fp_pscB>:
    1908:	00 24       	eor	r0, r0
    190a:	0a 94       	dec	r0
    190c:	12 16       	cp	r1, r18
    190e:	13 06       	cpc	r1, r19
    1910:	14 06       	cpc	r1, r20
    1912:	05 06       	cpc	r0, r21
    1914:	08 95       	ret

00001916 <__fp_round>:
    1916:	09 2e       	mov	r0, r25
    1918:	03 94       	inc	r0
    191a:	00 0c       	add	r0, r0
    191c:	11 f4       	brne	.+4      	; 0x1922 <__fp_round+0xc>
    191e:	88 23       	and	r24, r24
    1920:	52 f0       	brmi	.+20     	; 0x1936 <__fp_round+0x20>
    1922:	bb 0f       	add	r27, r27
    1924:	40 f4       	brcc	.+16     	; 0x1936 <__fp_round+0x20>
    1926:	bf 2b       	or	r27, r31
    1928:	11 f4       	brne	.+4      	; 0x192e <__fp_round+0x18>
    192a:	60 ff       	sbrs	r22, 0
    192c:	04 c0       	rjmp	.+8      	; 0x1936 <__fp_round+0x20>
    192e:	6f 5f       	subi	r22, 0xFF	; 255
    1930:	7f 4f       	sbci	r23, 0xFF	; 255
    1932:	8f 4f       	sbci	r24, 0xFF	; 255
    1934:	9f 4f       	sbci	r25, 0xFF	; 255
    1936:	08 95       	ret

00001938 <_exit>:
    1938:	f8 94       	cli

0000193a <__stop_program>:
    193a:	ff cf       	rjmp	.-2      	; 0x193a <__stop_program>
